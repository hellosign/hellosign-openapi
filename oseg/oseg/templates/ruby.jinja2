{%- macro print_scalar(printable) -%}
{{ printable.value }}
{%- endmacro -%}

{%- macro print_scalar_array(printable) -%}
    {% if printable.value == None %}{{ print_null() }}{% else %}
[
        {% for i in printable.value %}
    {{ i }},
        {% endfor %}
]
    {%- endif %}
{%- endmacro -%}

{%- macro print_file(printable) -%}
    {% if printable.value == None %}{{ print_null() }}{% else %}
File.new("{{ printable.value }}", "r")
    {%- endif %}
{%- endmacro -%}

{%- macro print_file_array(printable) -%}
    {% if printable.value == None %}{{ print_null() }}{% else %}
[
        {% for i in printable.value %}
    File.new("{{ i }}", "r"),
        {% endfor %}
]
    {%- endif %}
{%- endmacro -%}

{%- macro print_free_form(printable) -%}
    {% if printable.value == None %}{{ print_null() }}
    {%- elif not printable.value %}{}{%- else %}
JSON.parse(<<-EOD
    {{ printable.value|tojson(4)|indent(4) }}
    EOD
)
    {%- endif %}
{%- endmacro -%}

{%- macro print_free_form_array(printable) -%}
  {% if printable.value == None %}{{ print_null() }}
    {%- elif not printable.value %}[]{%- else %}
JSON.parse(<<-EOD
    {{ printable.value|tojson(4)|indent(4) }}
    EOD
)
    {%- endif %}
{%- endmacro -%}

{%- macro print_object(printable) -%}
{{ printable.value|print_variablename }}
{%- endmacro -%}

{%- macro print_object_array(printable) -%}
[
    {% for i in printable.value %}
    {{ i|print_variablename }},
    {% endfor %}
]
{%- endmacro -%}

{%- macro print_security(printable) -%}
    {% set comment = "" %}
    {% if not printable.is_primary %}{% set comment = "# " %}{% endif %}
{%- if printable.method == "api_key" %}{{ comment }}config.api_key["{{ printable.name }}"] = {{ printable.value|tojson }}
{%- elif printable.method == "access_token" %}{{ comment }}config.access_token = {{ printable.value|tojson }}
{%- else %}{{ comment }}config.username = {{ printable.value|tojson }}{% if printable.value_2 != None %}{{ "" }}
{{ comment }}config.password = {{ printable.value_2|tojson }}{% endif %}
{%- endif %}
{%-endmacro -%}

{%- macro print_variable_name_as_comment(name, value) -%}
    {% if config.oseg.printApiCallProperty %}
        {% if name|print_variablename != value %} # {{ name|print_variablename }}{% endif %}
    {% endif %}
{%-endmacro -%}

{%- import "_macros.jinja2" as m with context -%}

require "json"
require "{{ config.gemName }}"

{{ config.moduleName }}.configure do |config|
{% if operation.security.is_optional %}
    # Authentication is optional for this API endpoint
{% endif %}
{% call(security_schemes) m.parse_security_macro(4) %}
    {% for _, security in security_schemes.items() %}
    {{ security }}
    {% endfor %}
{% endcall %}
end

{% call(objects) m.parse_objects_macro() %}
    {% for obj_name, obj in objects.items() %}
        {% if not obj.is_array %}
{{ obj_name|print_variablename }} = {{ config.moduleName }}::{{ obj.type|print_classname }}.new
            {% call(properties) m.parse_object_properties_macro(obj, 0) %}
                {% for name, value in properties.items() %}
{{ obj_name|print_variablename }}.{{ name|print_methodname }} = {{ value }}
                {% endfor %}
            {% endcall %}
        {% else %}
{{ obj_name|print_variablename }} = {{ "" }}
            {%- call(value) m.parse_object_list_properties_macro(obj, 0) %}
    {{- value }}
            {% endcall %}
        {% endif %}

    {% endfor %}
{% endcall %}
begin
    {{ "" -}}
{% call(properties) m.parse_api_call_properties_macro(8, True) %}
    {% call(opt_properties) m.parse_api_call_properties_macro(8, False) %}
        {% if operation.response and operation.response.body %}response = {% endif -%}
    {{ config.moduleName }}::{{ operation.api_name|print_apiname }}.new.{{ operation.operation_id|print_methodname }}{%- if not properties and not opt_properties %}

        {% else %}(
            {% for name, value in properties.items() %}
        {{ value }},{{ print_variable_name_as_comment(name, value) }}
            {% endfor %}
            {% if opt_properties %}
        {
                {% for name, value in opt_properties.items() %}
            {{ name|print_propname }}: {{ value }},
                {% endfor %}
        },
            {% endif %}
    )
        {% endif %}
    {% endcall %}
{% endcall %}
{% if operation.response and operation.response.body and not operation.response.is_binary %}

    p response
{% elif operation.response and operation.response.is_binary %}

    FileUtils.cp(response.path, "./file_response")
{% endif %}
rescue {{ config.moduleName }}::ApiError => e
    puts "Exception when calling {{ operation.api_name|print_apiname }}#{{ operation.operation_id|print_methodname }}: #{e}"
end
{{ "" }}
