openapi: 3.0.3
info:
  title: 'HelloSign API'
  description: 'HelloSign v3 API'
  termsOfService: 'https://www.hellosign.com/terms'
  contact:
    email: apisupport@hellosign.com
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'
  version: 3.0.0
servers:
  -
    url: 'https://api.hellosign.com/v3'
paths:
  /account/create:
    post:
      tags:
        - Account
      summary: 'Create Account'
      description: 'Creates a new HelloSign Account that is associated with the specified `email_address`.'
      operationId: accountCreate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountCreateRequest'
            examples:
              default_example:
                $ref: '#/components/examples/AccountCreateRequestDefaultExample'
              oauth:
                $ref: '#/components/examples/AccountCreateRequestOAuthExample'
      responses:
        200:
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountCreateResponse'
              examples:
                default_example:
                  $ref: '#/components/examples/AccountCreateResponseExample'
                oauth:
                  $ref: '#/components/examples/AccountCreateOAuthResponseExample'
        400:
          $ref: '#/components/responses/Error400Response'
      security:
        -
          api_key: []
        -
          oauth2:
            - account_access
      x-codeSamples:
        -
          lang: PHP
          label: PHP
          source:
            $ref: examples/AccountCreate.php
        -
          lang: JavaScript
          label: JavaScript
          source:
            $ref: examples/AccountCreate.js
        -
          lang: TypeScript
          label: TypeScript
          source:
            $ref: examples/AccountCreate.ts
        -
          lang: Java
          label: Java
          source:
            $ref: examples/AccountCreate.java
        -
          lang: Ruby
          label: Ruby
          source:
            $ref: examples/AccountCreate.rb
        -
          lang: Python
          label: Python
          source:
            $ref: examples/AccountCreate.py
  /account:
    get:
      tags:
        - Account
      summary: 'Get Account'
      description: 'Returns the properties and settings of your Account.'
      operationId: accountGet
      responses:
        200:
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountGetResponse'
              examples:
                default_example:
                  $ref: '#/components/examples/AccountGetResponseExample'
        400:
          $ref: '#/components/responses/Error400Response'
      security:
        -
          api_key: []
        -
          oauth2:
            - account_access
            - basic_account_info
      x-codeSamples:
        -
          lang: PHP
          label: PHP
          source:
            $ref: examples/AccountGet.php
        -
          lang: JavaScript
          label: JavaScript
          source:
            $ref: examples/AccountGet.js
        -
          lang: TypeScript
          label: TypeScript
          source:
            $ref: examples/AccountGet.ts
        -
          lang: Java
          label: Java
          source:
            $ref: examples/AccountGet.java
        -
          lang: Ruby
          label: Ruby
          source:
            $ref: examples/AccountGet.rb
        -
          lang: Python
          label: Python
          source:
            $ref: examples/AccountGet.py
    put:
      tags:
        - Account
      summary: 'Update Account'
      description: 'Updates the properties and settings of your Account.'
      operationId: accountUpdate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountUpdateRequest'
            examples:
              default_example:
                $ref: '#/components/examples/AccountUpdateRequestDefaultExample'
      responses:
        200:
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountGetResponse'
              examples:
                default_example:
                  $ref: '#/components/examples/AccountUpdateResponseExample'
        400:
          $ref: '#/components/responses/Error400Response'
      security:
        -
          api_key: []
        -
          oauth2:
            - account_access
      x-codeSamples:
        -
          lang: PHP
          label: PHP
          source:
            $ref: examples/AccountUpdate.php
        -
          lang: JavaScript
          label: JavaScript
          source:
            $ref: examples/AccountUpdate.js
        -
          lang: TypeScript
          label: TypeScript
          source:
            $ref: examples/AccountUpdate.ts
        -
          lang: Java
          label: Java
          source:
            $ref: examples/AccountUpdate.java
        -
          lang: Ruby
          label: Ruby
          source:
            $ref: examples/AccountUpdate.rb
        -
          lang: Python
          label: Python
          source:
            $ref: examples/AccountUpdate.py
  /account/verify:
    post:
      tags:
        - Account
      summary: 'Verify Account'
      description: |-
        Verifies whether an HelloSign Account exists for the given email address.

        **NOTE** This method is restricted to paid API users.
      operationId: accountVerify
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountVerifyRequest'
            examples:
              default_example:
                $ref: '#/components/examples/AccountVerifyRequestDefaultExample'
      responses:
        200:
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountVerifyResponse'
              examples:
                default_example:
                  $ref: '#/components/examples/AccountVerifyFoundResponseExample'
                not_found:
                  $ref: '#/components/examples/AccountVerifyNotFoundResponseExample'
        400:
          $ref: '#/components/responses/Error400Response'
      security:
        -
          api_key: []
        -
          oauth2:
            - account_access
      x-codeSamples:
        -
          lang: PHP
          label: PHP
          source:
            $ref: examples/AccountVerify.php
        -
          lang: JavaScript
          label: JavaScript
          source:
            $ref: examples/AccountVerify.js
        -
          lang: TypeScript
          label: TypeScript
          source:
            $ref: examples/AccountVerify.ts
        -
          lang: Java
          label: Java
          source:
            $ref: examples/AccountVerify.java
        -
          lang: Ruby
          label: Ruby
          source:
            $ref: examples/AccountVerify.rb
        -
          lang: Python
          label: Python
          source:
            $ref: examples/AccountVerify.py
  /api_app:
    post:
      tags:
        - 'Api App'
      summary: 'Create API App'
      description: 'Creates a new API App.'
      operationId: apiAppCreate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiAppCreateRequest'
            examples:
              default_example:
                $ref: '#/components/examples/ApiAppCreateRequestDefaultExample'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ApiAppCreateRequest'
            examples:
              default_example:
                $ref: '#/components/examples/ApiAppCreateRequestFormDataExample'
      responses:
        200:
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiAppGetResponse'
              examples:
                default_example:
                  $ref: '#/components/examples/ApiAppCreateResponseExample'
        400:
          $ref: '#/components/responses/Error400Response'
      security:
        -
          api_key: []
        -
          oauth2:
            - api_app_access
      x-codeSamples:
        -
          lang: PHP
          label: PHP
          source:
            $ref: examples/ApiAppCreate.php
        -
          lang: JavaScript
          label: JavaScript
          source:
            $ref: examples/ApiAppCreate.js
        -
          lang: TypeScript
          label: TypeScript
          source:
            $ref: examples/ApiAppCreate.ts
        -
          lang: Java
          label: Java
          source:
            $ref: examples/ApiAppCreate.java
        -
          lang: Ruby
          label: Ruby
          source:
            $ref: examples/ApiAppCreate.rb
        -
          lang: Python
          label: Python
          source:
            $ref: examples/ApiAppCreate.py
  '/api_app/{client_id}':
    get:
      tags:
        - 'Api App'
      summary: 'Get API App'
      description: 'Returns an object with information about an API App.'
      operationId: apiAppGet
      parameters:
        -
          name: client_id
          in: path
          description: 'The client ID of the ApiApp to retrieve.'
          required: true
          schema:
            type: string
          example: 0dd3b823a682527788c4e40cb7b6f7e9
      responses:
        200:
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiAppGetResponse'
              examples:
                default_example:
                  $ref: '#/components/examples/ApiAppGetResponseExample'
        400:
          $ref: '#/components/responses/Error400Response'
      security:
        -
          api_key: []
        -
          oauth2:
            - api_app_access
      x-codeSamples:
        -
          lang: PHP
          label: PHP
          source:
            $ref: examples/ApiAppGet.php
        -
          lang: JavaScript
          label: JavaScript
          source:
            $ref: examples/ApiAppGet.js
        -
          lang: TypeScript
          label: TypeScript
          source:
            $ref: examples/ApiAppGet.ts
        -
          lang: Java
          label: Java
          source:
            $ref: examples/ApiAppGet.java
        -
          lang: Ruby
          label: Ruby
          source:
            $ref: examples/ApiAppGet.rb
        -
          lang: Python
          label: Python
          source:
            $ref: examples/ApiAppGet.py
    put:
      tags:
        - 'Api App'
      summary: 'Update API App'
      description: 'Updates an existing API App. Can only be invoked for apps you own. Only the fields you provide will be updated. If you wish to clear an existing optional field, provide an empty string.'
      operationId: apiAppUpdate
      parameters:
        -
          name: client_id
          in: path
          description: 'The client ID of the ApiApp to update.'
          required: true
          schema:
            type: string
          example: 0dd3b823a682527788c4e40cb7b6f7e9
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiAppUpdateRequest'
            examples:
              default_example:
                $ref: '#/components/examples/ApiAppUpdateRequestDefaultExample'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ApiAppUpdateRequest'
            examples:
              default_example:
                $ref: '#/components/examples/ApiAppUpdateRequestFormDataExample'
      responses:
        200:
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiAppGetResponse'
              examples:
                default_example:
                  $ref: '#/components/examples/ApiAppUpdateResponseExample'
        400:
          $ref: '#/components/responses/Error400Response'
      security:
        -
          api_key: []
        -
          oauth2:
            - api_app_access
      x-codeSamples:
        -
          lang: PHP
          label: PHP
          source:
            $ref: examples/ApiAppUpdate.php
        -
          lang: JavaScript
          label: JavaScript
          source:
            $ref: examples/ApiAppUpdate.js
        -
          lang: TypeScript
          label: TypeScript
          source:
            $ref: examples/ApiAppUpdate.ts
        -
          lang: Java
          label: Java
          source:
            $ref: examples/ApiAppUpdate.java
        -
          lang: Ruby
          label: Ruby
          source:
            $ref: examples/ApiAppUpdate.rb
        -
          lang: Python
          label: Python
          source:
            $ref: examples/ApiAppUpdate.py
    delete:
      tags:
        - 'Api App'
      summary: 'Delete API App'
      description: 'Deletes an API App. Can only be invoked for apps you own.'
      operationId: apiAppDelete
      parameters:
        -
          name: client_id
          in: path
          description: 'The client id of the ApiApp to delete.'
          required: true
          schema:
            type: string
          example: 0dd3b823a682527788c4e40cb7b6f7e9
      responses:
        204:
          description: 'successful operation'
        400:
          $ref: '#/components/responses/Error400Response'
      security:
        -
          api_key: []
        -
          oauth2:
            - api_app_access
      x-codeSamples:
        -
          lang: PHP
          label: PHP
          source:
            $ref: examples/ApiAppDelete.php
        -
          lang: JavaScript
          label: JavaScript
          source:
            $ref: examples/ApiAppDelete.js
        -
          lang: TypeScript
          label: TypeScript
          source:
            $ref: examples/ApiAppDelete.ts
        -
          lang: Java
          label: Java
          source:
            $ref: examples/ApiAppDelete.java
        -
          lang: Ruby
          label: Ruby
          source:
            $ref: examples/ApiAppDelete.rb
        -
          lang: Python
          label: Python
          source:
            $ref: examples/ApiAppDelete.py
  /api_app/list:
    get:
      tags:
        - 'Api App'
      summary: 'List API Apps'
      description: 'Returns a list of API Apps that are accessible by you. If you are on a team with an Admin or Developer role, this list will include apps owned by teammates.'
      operationId: apiAppList
      parameters:
        -
          name: page
          in: query
          description: 'Which page number of the ApiApp List to return. Defaults to `1`.'
          schema:
            type: integer
            default: 1
        -
          name: page_size
          in: query
          description: 'Number of objects to be returned per page. Must be between `1` and `100`. Default is `20`.'
          schema:
            type: integer
            default: 20
      responses:
        200:
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiAppListResponse'
              examples:
                default_example:
                  $ref: '#/components/examples/ApiAppListResponseExample'
        400:
          $ref: '#/components/responses/Error400Response'
      security:
        -
          api_key: []
        -
          oauth2:
            - api_app_access
      x-codeSamples:
        -
          lang: PHP
          label: PHP
          source:
            $ref: examples/ApiAppList.php
        -
          lang: JavaScript
          label: JavaScript
          source:
            $ref: examples/ApiAppList.js
        -
          lang: TypeScript
          label: TypeScript
          source:
            $ref: examples/ApiAppList.ts
        -
          lang: Java
          label: Java
          source:
            $ref: examples/ApiAppList.java
        -
          lang: Ruby
          label: Ruby
          source:
            $ref: examples/ApiAppList.rb
        -
          lang: Python
          label: Python
          source:
            $ref: examples/ApiAppList.py
  '/bulk_send_job/{bulk_send_job_id}':
    get:
      tags:
        - 'Bulk Send Job'
      summary: 'Get Bulk Send Job'
      description: 'Returns the status of the BulkSendJob and its SignatureRequests specified by the `bulk_send_job_id` parameter.'
      operationId: bulkSendJobGet
      parameters:
        -
          name: bulk_send_job_id
          in: path
          description: 'The id of the BulkSendJob to retrieve.'
          required: true
          schema:
            type: string
          example: 6e683bc0369ba3d5b6f43c2c22a8031dbf6bd174
      responses:
        200:
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkSendJobGetResponse'
              examples:
                default_example:
                  $ref: '#/components/examples/BulkSendJobGetResponseExample'
        400:
          $ref: '#/components/responses/Error400Response'
      security:
        -
          api_key: []
        -
          oauth2:
            - request_signature
            - signature_request_access
      x-codeSamples:
        -
          lang: PHP
          label: PHP
          source:
            $ref: examples/BulkSendJobGet.php
        -
          lang: JavaScript
          label: JavaScript
          source:
            $ref: examples/BulkSendJobGet.js
        -
          lang: TypeScript
          label: TypeScript
          source:
            $ref: examples/BulkSendJobGet.ts
        -
          lang: Java
          label: Java
          source:
            $ref: examples/BulkSendJobGet.java
        -
          lang: Ruby
          label: Ruby
          source:
            $ref: examples/BulkSendJobGet.rb
        -
          lang: Python
          label: Python
          source:
            $ref: examples/BulkSendJobGet.py
  /bulk_send_job/list:
    get:
      tags:
        - 'Bulk Send Job'
      summary: 'List Bulk Send Jobs'
      description: 'Returns a list of BulkSendJob that you can access.'
      operationId: bulkSendJobList
      parameters:
        -
          name: page
          in: query
          description: 'Which page number of the BulkSendJob List to return. Defaults to `1`.'
          schema:
            type: integer
            default: 1
        -
          name: page_size
          in: query
          description: 'Number of objects to be returned per page. Must be between `1` and `100`. Default is 20.'
          schema:
            type: integer
            default: 20
      responses:
        200:
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkSendJobListResponse'
              examples:
                default_example:
                  $ref: '#/components/examples/BulkSendJobListResponseExample'
        400:
          $ref: '#/components/responses/Error400Response'
      security:
        -
          api_key: []
        -
          oauth2:
            - request_signature
            - signature_request_access
      x-codeSamples:
        -
          lang: PHP
          label: PHP
          source:
            $ref: examples/BulkSendJobList.php
        -
          lang: JavaScript
          label: JavaScript
          source:
            $ref: examples/BulkSendJobList.js
        -
          lang: TypeScript
          label: TypeScript
          source:
            $ref: examples/BulkSendJobList.ts
        -
          lang: Java
          label: Java
          source:
            $ref: examples/BulkSendJobList.java
        -
          lang: Ruby
          label: Ruby
          source:
            $ref: examples/BulkSendJobList.rb
        -
          lang: Python
          label: Python
          source:
            $ref: examples/BulkSendJobList.py
  '/embedded/edit_url/{template_id}':
    post:
      tags:
        - Embedded
      summary: 'Get Embedded Template Edit URL'
      description: 'Retrieves an embedded object containing a template url that can be opened in an iFrame. Note that only templates created via the embedded template process are available to be edited with this endpoint.'
      operationId: embeddedEditUrl
      parameters:
        -
          name: template_id
          in: path
          description: 'The id of the template to edit.'
          required: true
          schema:
            type: string
          example: 5de8179668f2033afac48da1868d0093bf133266
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmbeddedEditUrlRequest'
            examples:
              default_example:
                $ref: '#/components/examples/EmbeddedEditUrlRequestDefaultExample'
      responses:
        200:
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbeddedEditUrlResponse'
              examples:
                default_example:
                  $ref: '#/components/examples/EmbeddedEditUrlResponseExample'
        400:
          $ref: '#/components/responses/Error400Response'
      security:
        -
          api_key: []
        -
          oauth2:
            - template_access
      x-codeSamples:
        -
          lang: PHP
          label: PHP
          source:
            $ref: examples/EmbeddedEditUrl.php
        -
          lang: JavaScript
          label: JavaScript
          source:
            $ref: examples/EmbeddedEditUrl.js
        -
          lang: TypeScript
          label: TypeScript
          source:
            $ref: examples/EmbeddedEditUrl.ts
        -
          lang: Java
          label: Java
          source:
            $ref: examples/EmbeddedEditUrl.java
        -
          lang: Ruby
          label: Ruby
          source:
            $ref: examples/EmbeddedEditUrl.rb
        -
          lang: Python
          label: Python
          source:
            $ref: examples/EmbeddedEditUrl.py
  '/embedded/sign_url/{signature_id}':
    get:
      tags:
        - Embedded
      summary: 'Get Embedded Sign URL'
      description: 'Retrieves an embedded object containing a signature url that can be opened in an iFrame. Note that templates created via the embedded template process will only be accessible through the API.'
      operationId: embeddedSignUrl
      parameters:
        -
          name: signature_id
          in: path
          description: 'The id of the signature to get a signature url for.'
          required: true
          schema:
            type: string
          example: 50e3542f738adfa7ddd4cbd4c00d2a8ab6e4194b
      responses:
        200:
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbeddedSignUrlResponse'
              examples:
                default_example:
                  $ref: '#/components/examples/EmbeddedSignUrlResponseExample'
        400:
          $ref: '#/components/responses/Error400Response'
      security:
        -
          api_key: []
        -
          oauth2:
            - signature_request_access
      x-codeSamples:
        -
          lang: PHP
          label: PHP
          source:
            $ref: examples/EmbeddedSignUrl.php
        -
          lang: JavaScript
          label: JavaScript
          source:
            $ref: examples/EmbeddedSignUrl.js
        -
          lang: TypeScript
          label: TypeScript
          source:
            $ref: examples/EmbeddedSignUrl.ts
        -
          lang: Java
          label: Java
          source:
            $ref: examples/EmbeddedSignUrl.java
        -
          lang: Ruby
          label: Ruby
          source:
            $ref: examples/EmbeddedSignUrl.rb
        -
          lang: Python
          label: Python
          source:
            $ref: examples/EmbeddedSignUrl.py
  /oauth/token:
    post:
      tags:
        - OAuth
      summary: 'OAuth Token Generate'
      description: 'Once you have retrieved the code from the user callback, you will need to exchange it for an access token via a backend call.'
      operationId: oauthTokenGenerate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuthTokenGenerateRequest'
            examples:
              default_example:
                $ref: '#/components/examples/OAuthTokenGenerateRequestExample'
      responses:
        200:
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthTokenResponse'
              examples:
                default_example:
                  $ref: '#/components/examples/OAuthTokenGenerateResponseExample'
      security: []
      servers:
        -
          url: 'https://app.hellosign.com'
      x-codeSamples:
        -
          lang: PHP
          label: PHP
          source:
            $ref: examples/OauthTokenGenerate.php
        -
          lang: JavaScript
          label: JavaScript
          source:
            $ref: examples/OauthTokenGenerate.js
        -
          lang: TypeScript
          label: TypeScript
          source:
            $ref: examples/OauthTokenGenerate.ts
        -
          lang: Java
          label: Java
          source:
            $ref: examples/OauthTokenGenerate.java
        -
          lang: Ruby
          label: Ruby
          source:
            $ref: examples/OauthTokenGenerate.rb
        -
          lang: Python
          label: Python
          source:
            $ref: examples/OauthTokenGenerate.py
  '/oauth/token?refresh':
    post:
      tags:
        - OAuth
      summary: 'OAuth Token Refresh'
      description: 'Access tokens are only valid for a given period of time (typically one hour) for security reasons. Whenever acquiring an new access token its TTL is also given (see `expires_in`), along with a refresh token that can be used to acquire a new access token after the current one has expired.'
      operationId: oauthTokenRefresh
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuthTokenRefreshRequest'
            examples:
              default_example:
                $ref: '#/components/examples/OAuthTokenRefreshRequestExample'
      responses:
        200:
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthTokenResponse'
              examples:
                default_example:
                  $ref: '#/components/examples/OAuthTokenRefreshResponseExample'
      security: []
      servers:
        -
          url: 'https://app.hellosign.com'
      x-codeSamples:
        -
          lang: PHP
          label: PHP
          source:
            $ref: examples/OauthTokenRefresh.php
        -
          lang: JavaScript
          label: JavaScript
          source:
            $ref: examples/OauthTokenRefresh.js
        -
          lang: TypeScript
          label: TypeScript
          source:
            $ref: examples/OauthTokenRefresh.ts
        -
          lang: Java
          label: Java
          source:
            $ref: examples/OauthTokenRefresh.java
        -
          lang: Ruby
          label: Ruby
          source:
            $ref: examples/OauthTokenRefresh.rb
        -
          lang: Python
          label: Python
          source:
            $ref: examples/OauthTokenRefresh.py
  /report/create:
    post:
      tags:
        - Report
      summary: 'Create Report'
      description: |-
        Request the creation of one or more report(s).

        When the report(s) have been generated, you will receive an email (one per requested report type) containing a link to download the report as a CSV file. The requested date range may be up to 12 months in duration, and `start_date` must not be more than 10 years in the past.
      operationId: reportCreate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportCreateRequest'
            examples:
              default_example:
                $ref: '#/components/examples/ReportCreateRequestDefaultExample'
      responses:
        200:
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportCreateResponse'
              examples:
                default_example:
                  $ref: '#/components/examples/ReportCreateResponseExample'
        400:
          $ref: '#/components/responses/Error400Response'
      security:
        -
          api_key: []
      x-codeSamples:
        -
          lang: PHP
          label: PHP
          source:
            $ref: examples/ReportCreate.php
        -
          lang: JavaScript
          label: JavaScript
          source:
            $ref: examples/ReportCreate.js
        -
          lang: TypeScript
          label: TypeScript
          source:
            $ref: examples/ReportCreate.ts
        -
          lang: Java
          label: Java
          source:
            $ref: examples/ReportCreate.java
        -
          lang: Ruby
          label: Ruby
          source:
            $ref: examples/ReportCreate.rb
        -
          lang: Python
          label: Python
          source:
            $ref: examples/ReportCreate.py
  /signature_request/bulk_create_embedded_with_template:
    post:
      tags:
        - 'Signature Request'
      summary: 'Embedded Bulk Send with Template'
      description: |-
        Creates BulkSendJob which sends up to 250 SignatureRequests in bulk based off of the provided Template(s) specified with the `template_ids` parameter to be signed in an embedded iFrame. These embedded signature requests can only be signed in embedded iFrames whereas normal signature requests can only be signed on HelloSign.

        **NOTE**: Only available for Gold plan and higher.
      operationId: signatureRequestBulkCreateEmbeddedWithTemplate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignatureRequestBulkCreateEmbeddedWithTemplateRequest'
            examples:
              default_example:
                $ref: '#/components/examples/SignatureRequestBulkCreateEmbeddedWithTemplateRequestDefaultExample'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SignatureRequestBulkCreateEmbeddedWithTemplateRequest'
            examples:
              default_example:
                $ref: '#/components/examples/SignatureRequestBulkCreateEmbeddedWithTemplateRequestFormDataExample'
      responses:
        200:
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkSendJobSendResponse'
              examples:
                default_example:
                  $ref: '#/components/examples/SignatureRequestBulkCreateEmbeddedWithTemplateResponseExample'
        400:
          $ref: '#/components/responses/Error400Response'
      security:
        -
          api_key: []
      x-codeSamples:
        -
          lang: PHP
          label: PHP
          source:
            $ref: examples/SignatureRequestBulkCreateEmbeddedWithTemplate.php
        -
          lang: JavaScript
          label: JavaScript
          source:
            $ref: examples/SignatureRequestBulkCreateEmbeddedWithTemplate.js
        -
          lang: TypeScript
          label: TypeScript
          source:
            $ref: examples/SignatureRequestBulkCreateEmbeddedWithTemplate.ts
        -
          lang: Java
          label: Java
          source:
            $ref: examples/SignatureRequestBulkCreateEmbeddedWithTemplate.java
        -
          lang: Ruby
          label: Ruby
          source:
            $ref: examples/SignatureRequestBulkCreateEmbeddedWithTemplate.rb
        -
          lang: Python
          label: Python
          source:
            $ref: examples/SignatureRequestBulkCreateEmbeddedWithTemplate.py
  /signature_request/bulk_send_with_template:
    post:
      tags:
        - 'Signature Request'
      summary: 'Bulk Send with Template'
      description: |-
        Creates BulkSendJob which sends up to 250 SignatureRequests in bulk based off of the provided Template(s) specified with the `template_ids` parameter.

        **NOTE**: Only available for Gold plan and higher.
      operationId: signatureRequestBulkSendWithTemplate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignatureRequestBulkSendWithTemplateRequest'
            examples:
              default_example:
                $ref: '#/components/examples/SignatureRequestBulkSendWithTemplateRequestDefaultExample'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SignatureRequestBulkSendWithTemplateRequest'
            examples:
              default_example:
                $ref: '#/components/examples/SignatureRequestBulkSendWithTemplateRequestFormDataExample'
      responses:
        200:
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkSendJobSendResponse'
              examples:
                default_example:
                  $ref: '#/components/examples/SignatureRequestBulkSendWithTemplateResponseExample'
        400:
          $ref: '#/components/responses/Error400Response'
      security:
        -
          api_key: []
        -
          oauth2:
            - request_signature
            - signature_request_access
      x-codeSamples:
        -
          lang: PHP
          label: PHP
          source:
            $ref: examples/SignatureRequestBulkSendWithTemplate.php
        -
          lang: JavaScript
          label: JavaScript
          source:
            $ref: examples/SignatureRequestBulkSendWithTemplate.js
        -
          lang: TypeScript
          label: TypeScript
          source:
            $ref: examples/SignatureRequestBulkSendWithTemplate.ts
        -
          lang: Java
          label: Java
          source:
            $ref: examples/SignatureRequestBulkSendWithTemplate.java
        -
          lang: Ruby
          label: Ruby
          source:
            $ref: examples/SignatureRequestBulkSendWithTemplate.rb
        -
          lang: Python
          label: Python
          source:
            $ref: examples/SignatureRequestBulkSendWithTemplate.py
  '/signature_request/cancel/{signature_request_id}':
    post:
      tags:
        - 'Signature Request'
      summary: 'Cancel Incomplete Signature Request'
      description: |-
        Cancels an incomplete signature request. This action is **not reversible**.

        The request will be canceled and signers will no longer be able to sign. If they try to access the signature request they will receive a HTTP 410 status code indicating that the resource has been deleted. Cancelation is asynchronous and a successful call to this endpoint will return an empty 200 OK response if the signature request is eligible to be canceled and has been successfully queued.

        This 200 OK response does not indicate a successful cancelation of the signature request itself. The cancelation is confirmed via the `signature_request_canceled` event. It is recommended that a  [callback handler](https://app.hellosign.com/api/eventsAndCallbacksWalkthrough) be implemented to listen for the `signature_request_canceled` event. This callback will be sent only when the cancelation has completed successfully. If a callback handler has been configured and the event has not been received within 60 minutes of making the call, check the status of the request in the [API Dashboard](https://app.hellosign.com/apidashboard) and retry the cancelation if necessary.

        To be eligible for cancelation, a signature request must have been sent successfully, must not yet have been signed by all signers, and you must either be the sender or own the API app under which it was sent. A partially signed signature request can be canceled.

        **NOTE**: To remove your access to a completed signature request, use the endpoint: `POST /signature_request/remove/[:signature_request_id]`.
      operationId: signatureRequestCancel
      parameters:
        -
          name: signature_request_id
          in: path
          description: 'The id of the incomplete SignatureRequest to cancel.'
          required: true
          schema:
            type: string
          example: 2f9781e1a8e2045224d808c153c2e1d3df6f8f2f
      responses:
        200:
          description: 'successful operation'
          content:
            application/json: {}
        400:
          $ref: '#/components/responses/Error400Response'
      security:
        -
          api_key: []
        -
          oauth2:
            - request_signature
            - signature_request_access
      x-codeSamples:
        -
          lang: PHP
          label: PHP
          source:
            $ref: examples/SignatureRequestCancel.php
        -
          lang: JavaScript
          label: JavaScript
          source:
            $ref: examples/SignatureRequestCancel.js
        -
          lang: TypeScript
          label: TypeScript
          source:
            $ref: examples/SignatureRequestCancel.ts
        -
          lang: Java
          label: Java
          source:
            $ref: examples/SignatureRequestCancel.java
        -
          lang: Ruby
          label: Ruby
          source:
            $ref: examples/SignatureRequestCancel.rb
        -
          lang: Python
          label: Python
          source:
            $ref: examples/SignatureRequestCancel.py
  /signature_request/create_embedded:
    post:
      tags:
        - 'Signature Request'
      summary: 'Create Embedded Signature Request'
      description: 'Creates a new SignatureRequest with the submitted documents to be signed in an embedded iFrame. If form_fields_per_document is not specified, a signature page will be affixed where all signers will be required to add their signature, signifying their agreement to all contained documents. <u>Note</u> that embedded signature requests can only be signed in embedded iFrames whereas normal signature requests can only be signed on HelloSign.'
      operationId: signatureRequestCreateEmbedded
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignatureRequestCreateEmbeddedRequest'
            examples:
              default_example:
                $ref: '#/components/examples/SignatureRequestCreateEmbeddedRequestDefaultExample'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SignatureRequestCreateEmbeddedRequest'
            examples:
              default_example:
                $ref: '#/components/examples/SignatureRequestCreateEmbeddedRequestFormDataExample'
      responses:
        200:
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureRequestGetResponse'
              examples:
                default_example:
                  $ref: '#/components/examples/SignatureRequestCreateEmbeddedResponseExample'
        400:
          $ref: '#/components/responses/Error400Response'
      security:
        -
          api_key: []
        -
          oauth2:
            - signature_request_access
      x-codeSamples:
        -
          lang: PHP
          label: PHP
          source:
            $ref: examples/SignatureRequestCreateEmbedded.php
        -
          lang: JavaScript
          label: JavaScript
          source:
            $ref: examples/SignatureRequestCreateEmbedded.js
        -
          lang: TypeScript
          label: TypeScript
          source:
            $ref: examples/SignatureRequestCreateEmbedded.ts
        -
          lang: Java
          label: Java
          source:
            $ref: examples/SignatureRequestCreateEmbedded.java
        -
          lang: Ruby
          label: Ruby
          source:
            $ref: examples/SignatureRequestCreateEmbedded.rb
        -
          lang: Python
          label: Python
          source:
            $ref: examples/SignatureRequestCreateEmbedded.py
  /signature_request/create_embedded_with_template:
    post:
      tags:
        - 'Signature Request'
      summary: 'Create Embedded Signature Request with Template'
      description: 'Creates a new SignatureRequest based on the given Template(s) to be signed in an embedded iFrame. <u>Note</u> that embedded signature requests can only be signed in embedded iFrames whereas normal signature requests can only be signed on HelloSign.'
      operationId: signatureRequestCreateEmbeddedWithTemplate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignatureRequestCreateEmbeddedWithTemplateRequest'
            examples:
              default_example:
                $ref: '#/components/examples/SignatureRequestCreateEmbeddedWithTemplateRequestDefaultExample'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SignatureRequestCreateEmbeddedWithTemplateRequest'
            examples:
              default_example:
                $ref: '#/components/examples/SignatureRequestCreateEmbeddedWithTemplateRequestFormDataExample'
      responses:
        200:
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureRequestGetResponse'
              examples:
                default_example:
                  $ref: '#/components/examples/SignatureRequestCreateEmbeddedWithTemplateResponseExample'
        400:
          $ref: '#/components/responses/Error400Response'
      security:
        -
          api_key: []
        -
          oauth2:
            - signature_request_access
      x-codeSamples:
        -
          lang: PHP
          label: PHP
          source:
            $ref: examples/SignatureRequestCreateEmbeddedWithTemplate.php
        -
          lang: JavaScript
          label: JavaScript
          source:
            $ref: examples/SignatureRequestCreateEmbeddedWithTemplate.js
        -
          lang: TypeScript
          label: TypeScript
          source:
            $ref: examples/SignatureRequestCreateEmbeddedWithTemplate.ts
        -
          lang: Java
          label: Java
          source:
            $ref: examples/SignatureRequestCreateEmbeddedWithTemplate.java
        -
          lang: Ruby
          label: Ruby
          source:
            $ref: examples/SignatureRequestCreateEmbeddedWithTemplate.rb
        -
          lang: Python
          label: Python
          source:
            $ref: examples/SignatureRequestCreateEmbeddedWithTemplate.py
  '/signature_request/files/{signature_request_id}':
    get:
      tags:
        - 'Signature Request'
      summary: 'Download Files'
      description: |-
        Obtain a copy of the current documents specified by the `signature_request_id` parameter.

        Returns a PDF or ZIP file, or if `get_url` is set, a JSON object with a url to the file (PDFs only). If `get_data_uri` is set, a JSON object with a `data_uri` representing the base64 encoded file (PDFs only) is returned.

        If the files are currently being prepared, a status code of `409` will be returned instead.
      operationId: signatureRequestFiles
      parameters:
        -
          name: signature_request_id
          in: path
          description: 'The id of the SignatureRequest to retrieve.'
          required: true
          schema:
            type: string
          example: fa5c8a0b0f492d768749333ad6fcc214c111e967
        -
          name: file_type
          in: query
          description: 'Set to `pdf` for a single merged document or `zip` for a collection of individual documents.'
          schema:
            type: string
            default: pdf
            enum:
              - pdf
              - zip
        -
          name: get_url
          in: query
          description: 'If `true`, the response will contain a url link to the file instead. Links are only available for PDFs and have a TTL of 3 days.'
          schema:
            type: boolean
            default: false
        -
          name: get_data_uri
          in: query
          description: 'If `true`, the response will contain the file as base64 encoded string. Base64 encoding is only available for PDFs.'
          schema:
            type: boolean
            default: false
      responses:
        200:
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileResponse'
              examples:
                default_example:
                  $ref: '#/components/examples/SignatureRequestFilesResponseExample'
        400:
          $ref: '#/components/responses/Error400Response'
      security:
        -
          api_key: []
        -
          oauth2:
            - signature_request_access
            - request_signature
      x-codeSamples:
        -
          lang: PHP
          label: PHP
          source:
            $ref: examples/SignatureRequestFiles.php
        -
          lang: JavaScript
          label: JavaScript
          source:
            $ref: examples/SignatureRequestFiles.js
        -
          lang: TypeScript
          label: TypeScript
          source:
            $ref: examples/SignatureRequestFiles.ts
        -
          lang: Java
          label: Java
          source:
            $ref: examples/SignatureRequestFiles.java
        -
          lang: Ruby
          label: Ruby
          source:
            $ref: examples/SignatureRequestFiles.rb
        -
          lang: Python
          label: Python
          source:
            $ref: examples/SignatureRequestFiles.py
  '/signature_request/{signature_request_id}':
    get:
      tags:
        - 'Signature Request'
      summary: 'Get Signature Request'
      description: 'Returns the status of the SignatureRequest specified by the `signature_request_id` parameter.'
      operationId: signatureRequestGet
      parameters:
        -
          name: signature_request_id
          in: path
          description: 'The id of the SignatureRequest to retrieve.'
          required: true
          schema:
            type: string
          example: fa5c8a0b0f492d768749333ad6fcc214c111e967
      responses:
        200:
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureRequestGetResponse'
              examples:
                default_example:
                  $ref: '#/components/examples/SignatureRequestGetResponseExample'
        400:
          $ref: '#/components/responses/Error400Response'
      security:
        -
          api_key: []
        -
          oauth2:
            - request_signature
            - signature_request_access
      x-codeSamples:
        -
          lang: PHP
          label: PHP
          source:
            $ref: examples/SignatureRequestGet.php
        -
          lang: JavaScript
          label: JavaScript
          source:
            $ref: examples/SignatureRequestGet.js
        -
          lang: TypeScript
          label: TypeScript
          source:
            $ref: examples/SignatureRequestGet.ts
        -
          lang: Java
          label: Java
          source:
            $ref: examples/SignatureRequestGet.java
        -
          lang: Ruby
          label: Ruby
          source:
            $ref: examples/SignatureRequestGet.rb
        -
          lang: Python
          label: Python
          source:
            $ref: examples/SignatureRequestGet.py
  /signature_request/list:
    get:
      tags:
        - 'Signature Request'
      summary: 'List Signature Requests'
      description: |-
        Returns a list of SignatureRequests that you can access. This includes SignatureRequests you have sent as well as received, but not ones that you have been CCed on.

        Take a look at our [search guide](https://app.hellosign.com/api/reference#Search) to learn more about querying signature requests.
      operationId: signatureRequestList
      parameters:
        -
          name: account_id
          in: query
          description: 'Which account to return SignatureRequests for. Must be a team member. Use `all` to indicate all team members. Defaults to your account.'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'Which page number of the SignatureRequest List to return. Defaults to `1`.'
          schema:
            type: integer
            default: 1
            example: 1
        -
          name: page_size
          in: query
          description: 'Number of objects to be returned per page. Must be between `1` and `100`. Default is `20`.'
          schema:
            type: integer
            default: 20
        -
          name: query
          in: query
          description: 'String that includes search terms and/or fields to be used to filter the SignatureRequest objects.'
          schema:
            type: string
      responses:
        200:
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureRequestListResponse'
              examples:
                default_example:
                  $ref: '#/components/examples/SignatureRequestListResponseExample'
        400:
          $ref: '#/components/responses/Error400Response'
      security:
        -
          api_key: []
        -
          oauth2:
            - request_signature
            - signature_request_access
      x-codeSamples:
        -
          lang: PHP
          label: PHP
          source:
            $ref: examples/SignatureRequestList.php
        -
          lang: JavaScript
          label: JavaScript
          source:
            $ref: examples/SignatureRequestList.js
        -
          lang: TypeScript
          label: TypeScript
          source:
            $ref: examples/SignatureRequestList.ts
        -
          lang: Java
          label: Java
          source:
            $ref: examples/SignatureRequestList.java
        -
          lang: Ruby
          label: Ruby
          source:
            $ref: examples/SignatureRequestList.rb
        -
          lang: Python
          label: Python
          source:
            $ref: examples/SignatureRequestList.py
  '/signature_request/release_hold/{signature_request_id}':
    post:
      tags:
        - 'Signature Request'
      summary: 'Release On-Hold Signature Request'
      description: 'Releases a held SignatureRequest that was claimed and prepared from an [UnclaimedDraft](https://app.hellosign.com/api/reference#UnclaimedDraft). The owner of the Draft must indicate at Draft creation that the SignatureRequest created from the Draft should be held. Releasing the SignatureRequest will send requests to all signers.'
      operationId: signatureRequestReleaseHold
      parameters:
        -
          name: signature_request_id
          in: path
          description: 'The id of the SignatureRequest to release.'
          required: true
          schema:
            type: string
          example: 2f9781e1a8e2045224d808c153c2e1d3df6f8f2f
      responses:
        200:
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureRequestGetResponse'
              examples:
                default_example:
                  $ref: '#/components/examples/SignatureRequestReleaseHoldResponseExample'
        400:
          $ref: '#/components/responses/Error400Response'
      security:
        -
          api_key: []
        -
          oauth2:
            - signature_request_access
      x-codeSamples:
        -
          lang: PHP
          label: PHP
          source:
            $ref: examples/SignatureRequestReleaseHold.php
        -
          lang: JavaScript
          label: JavaScript
          source:
            $ref: examples/SignatureRequestReleaseHold.js
        -
          lang: TypeScript
          label: TypeScript
          source:
            $ref: examples/SignatureRequestReleaseHold.ts
        -
          lang: Java
          label: Java
          source:
            $ref: examples/SignatureRequestReleaseHold.java
        -
          lang: Ruby
          label: Ruby
          source:
            $ref: examples/SignatureRequestReleaseHold.rb
        -
          lang: Python
          label: Python
          source:
            $ref: examples/SignatureRequestReleaseHold.py
  '/signature_request/remind/{signature_request_id}':
    post:
      tags:
        - 'Signature Request'
      summary: 'Send Request Reminder'
      description: |-
        Sends an email to the signer reminding them to sign the signature request. You cannot send a reminder within 1 hour of the last reminder that was sent. This includes manual AND automatic reminders.

        **NOTE**: This action can **not** be used with embedded signature requests.
      operationId: signatureRequestRemind
      parameters:
        -
          name: signature_request_id
          in: path
          description: 'The id of the SignatureRequest to send a reminder for.'
          required: true
          schema:
            type: string
          example: 2f9781e1a8e2045224d808c153c2e1d3df6f8f2f
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignatureRequestRemindRequest'
            examples:
              default_example:
                $ref: '#/components/examples/SignatureRequestRemindRequestDefaultExample'
      responses:
        200:
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureRequestGetResponse'
              examples:
                default_example:
                  $ref: '#/components/examples/SignatureRequestRemindResponseExample'
        400:
          $ref: '#/components/responses/Error400Response'
      security:
        -
          api_key: []
        -
          oauth2:
            - request_signature
            - signature_request_access
      x-codeSamples:
        -
          lang: PHP
          label: PHP
          source:
            $ref: examples/SignatureRequestRemind.php
        -
          lang: JavaScript
          label: JavaScript
          source:
            $ref: examples/SignatureRequestRemind.js
        -
          lang: TypeScript
          label: TypeScript
          source:
            $ref: examples/SignatureRequestRemind.ts
        -
          lang: Java
          label: Java
          source:
            $ref: examples/SignatureRequestRemind.java
        -
          lang: Ruby
          label: Ruby
          source:
            $ref: examples/SignatureRequestRemind.rb
        -
          lang: Python
          label: Python
          source:
            $ref: examples/SignatureRequestRemind.py
  '/signature_request/remove/{signature_request_id}':
    post:
      tags:
        - 'Signature Request'
      summary: 'Remove Signature Request Access'
      description: |-
        Removes your access to a completed signature request. This action is **not reversible**.

        The signature request must be fully executed by all parties (signed or declined to sign). Other parties will continue to maintain access to the completed signature request document(s).

        Unlike /signature_request/cancel, this endpoint is synchronous and your access will be immediately removed. Upon successful removal, this endpoint will return a 200 OK response.
      operationId: signatureRequestRemove
      parameters:
        -
          name: signature_request_id
          in: path
          description: 'The id of the SignatureRequest to remove.'
          required: true
          schema:
            type: string
          example: 2f9781e1a8e2045224d808c153c2e1d3df6f8f2f
      responses:
        200:
          description: 'successful operation'
          content:
            application/json: {}
        400:
          $ref: '#/components/responses/Error400Response'
      security:
        -
          api_key: []
      x-codeSamples:
        -
          lang: PHP
          label: PHP
          source:
            $ref: examples/SignatureRequestRemove.php
        -
          lang: JavaScript
          label: JavaScript
          source:
            $ref: examples/SignatureRequestRemove.js
        -
          lang: TypeScript
          label: TypeScript
          source:
            $ref: examples/SignatureRequestRemove.ts
        -
          lang: Java
          label: Java
          source:
            $ref: examples/SignatureRequestRemove.java
        -
          lang: Ruby
          label: Ruby
          source:
            $ref: examples/SignatureRequestRemove.rb
        -
          lang: Python
          label: Python
          source:
            $ref: examples/SignatureRequestRemove.py
  /signature_request/send:
    post:
      tags:
        - 'Signature Request'
      summary: 'Send Signature Request'
      description: 'Creates and sends a new SignatureRequest with the submitted documents. If `form_fields_per_document` is not specified, a signature page will be affixed where all signers will be required to add their signature, signifying their agreement to all contained documents.'
      operationId: signatureRequestSend
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignatureRequestSendRequest'
            examples:
              default_example:
                $ref: '#/components/examples/SignatureRequestSendRequestDefaultExample'
              grouped_signers:
                $ref: '#/components/examples/SignatureRequestSendRequestGroupedSignersExample'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SignatureRequestSendRequest'
            examples:
              default_example:
                $ref: '#/components/examples/SignatureRequestSendFormDataExample'
      responses:
        200:
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureRequestGetResponse'
              examples:
                default_example:
                  $ref: '#/components/examples/SignatureRequestSendResponseExample'
        400:
          $ref: '#/components/responses/Error400Response'
      security:
        -
          api_key: []
        -
          oauth2:
            - request_signature
            - signature_request_access
      x-codeSamples:
        -
          lang: PHP
          label: PHP
          source:
            $ref: examples/SignatureRequestSend.php
        -
          lang: JavaScript
          label: JavaScript
          source:
            $ref: examples/SignatureRequestSend.js
        -
          lang: TypeScript
          label: TypeScript
          source:
            $ref: examples/SignatureRequestSend.ts
        -
          lang: Java
          label: Java
          source:
            $ref: examples/SignatureRequestSend.java
        -
          lang: Ruby
          label: Ruby
          source:
            $ref: examples/SignatureRequestSend.rb
        -
          lang: Python
          label: Python
          source:
            $ref: examples/SignatureRequestSend.py
  /signature_request/send_with_template:
    post:
      tags:
        - 'Signature Request'
      summary: 'Send with Template'
      description: 'Creates and sends a new SignatureRequest based off of the Template(s) specified with the `template_ids` parameter.'
      operationId: signatureRequestSendWithTemplate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignatureRequestSendWithTemplateRequest'
            examples:
              default_example:
                $ref: '#/components/examples/SignatureRequestSendWithTemplateRequestDefaultExample'
              grouped_signers:
                $ref: '#/components/examples/SignatureRequestSendWithTemplateRequestGroupedSignersExample'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SignatureRequestSendWithTemplateRequest'
            examples:
              default_example:
                $ref: '#/components/examples/SignatureRequestSendWithTemplateRequestFormDataExample'
      responses:
        200:
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureRequestGetResponse'
              examples:
                default_example:
                  $ref: '#/components/examples/SignatureRequestSendWithTemplateResponseExample'
        400:
          $ref: '#/components/responses/Error400Response'
      security:
        -
          api_key: []
        -
          oauth2:
            - request_signature
            - signature_request_access
      x-codeSamples:
        -
          lang: PHP
          label: PHP
          source:
            $ref: examples/SignatureRequestSendWithTemplate.php
        -
          lang: JavaScript
          label: JavaScript
          source:
            $ref: examples/SignatureRequestSendWithTemplate.js
        -
          lang: TypeScript
          label: TypeScript
          source:
            $ref: examples/SignatureRequestSendWithTemplate.ts
        -
          lang: Java
          label: Java
          source:
            $ref: examples/SignatureRequestSendWithTemplate.java
        -
          lang: Ruby
          label: Ruby
          source:
            $ref: examples/SignatureRequestSendWithTemplate.rb
        -
          lang: Python
          label: Python
          source:
            $ref: examples/SignatureRequestSendWithTemplate.py
  '/signature_request/update/{signature_request_id}':
    post:
      tags:
        - 'Signature Request'
      summary: 'Update Signature Request'
      description: |-
        Updates the email address and/or the name for a given signer on a signature request. You can listen for the `signature_request_email_bounce` event on your app or account to detect bounced emails, and respond with this method.

        **NOTE**: This action cannot be performed on a signature request with an appended signature page.
      operationId: signatureRequestUpdate
      parameters:
        -
          name: signature_request_id
          in: path
          description: 'The id of the SignatureRequest to update.'
          required: true
          schema:
            type: string
          example: 2f9781e1a8e2045224d808c153c2e1d3df6f8f2f
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignatureRequestUpdateRequest'
            examples:
              default_example:
                $ref: '#/components/examples/SignatureRequestUpdateRequestDefaultExample'
      responses:
        200:
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureRequestGetResponse'
              examples:
                default_example:
                  $ref: '#/components/examples/SignatureRequestUpdateResponseExample'
        400:
          $ref: '#/components/responses/Error400Response'
      security:
        -
          api_key: []
        -
          oauth2:
            - signature_request_access
      x-codeSamples:
        -
          lang: PHP
          label: PHP
          source:
            $ref: examples/SignatureRequestUpdate.php
        -
          lang: JavaScript
          label: JavaScript
          source:
            $ref: examples/SignatureRequestUpdate.js
        -
          lang: TypeScript
          label: TypeScript
          source:
            $ref: examples/SignatureRequestUpdate.ts
        -
          lang: Java
          label: Java
          source:
            $ref: examples/SignatureRequestUpdate.java
        -
          lang: Ruby
          label: Ruby
          source:
            $ref: examples/SignatureRequestUpdate.rb
        -
          lang: Python
          label: Python
          source:
            $ref: examples/SignatureRequestUpdate.py
  /team/add_member:
    put:
      tags:
        - Team
      summary: 'Add User to Team'
      description: 'Invites a user (specified using the `email_address` parameter) to your Team. If the user does not currently have a HelloSign Account, a new one will be created for them. If a user is already a part of another Team, a `team_invite_failed` error will be returned.'
      operationId: teamAddMember
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamAddMemberRequest'
            examples:
              email_address:
                $ref: '#/components/examples/TeamAddMemberRequestEmailAddressExample'
              account_id:
                $ref: '#/components/examples/TeamAddMemberRequestAccountIdExample'
      responses:
        200:
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamGetResponse'
              examples:
                default_example:
                  $ref: '#/components/examples/TeamAddMemberResponseExample'
        400:
          $ref: '#/components/responses/Error400Response'
      security:
        -
          api_key: []
        -
          oauth2:
            - team_access
      x-codeSamples:
        -
          lang: PHP
          label: PHP
          source:
            $ref: examples/TeamAddMember.php
        -
          lang: JavaScript
          label: JavaScript
          source:
            $ref: examples/TeamAddMember.js
        -
          lang: TypeScript
          label: TypeScript
          source:
            $ref: examples/TeamAddMember.ts
        -
          lang: Java
          label: Java
          source:
            $ref: examples/TeamAddMember.java
        -
          lang: Ruby
          label: Ruby
          source:
            $ref: examples/TeamAddMember.rb
        -
          lang: Python
          label: Python
          source:
            $ref: examples/TeamAddMember.py
  /team/create:
    post:
      tags:
        - Team
      summary: 'Create Team'
      description: 'Creates a new Team and makes you a member. You must not currently belong to a Team to invoke.'
      operationId: teamCreate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamCreateRequest'
            examples:
              default_example:
                $ref: '#/components/examples/TeamCreateRequestDefaultExample'
      responses:
        200:
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamGetResponse'
              examples:
                default_example:
                  $ref: '#/components/examples/TeamCreateResponseExample'
        400:
          $ref: '#/components/responses/Error400Response'
      security:
        -
          api_key: []
        -
          oauth2:
            - team_access
      x-codeSamples:
        -
          lang: PHP
          label: PHP
          source:
            $ref: examples/TeamCreate.php
        -
          lang: JavaScript
          label: JavaScript
          source:
            $ref: examples/TeamCreate.js
        -
          lang: TypeScript
          label: TypeScript
          source:
            $ref: examples/TeamCreate.ts
        -
          lang: Java
          label: Java
          source:
            $ref: examples/TeamCreate.java
        -
          lang: Ruby
          label: Ruby
          source:
            $ref: examples/TeamCreate.rb
        -
          lang: Python
          label: Python
          source:
            $ref: examples/TeamCreate.py
  /team/destroy:
    delete:
      tags:
        - Team
      summary: 'Delete Team'
      description: 'Deletes your Team. Can only be invoked when you have a Team with only one member (yourself).'
      operationId: teamDelete
      responses:
        200:
          description: 'successful operation'
        400:
          $ref: '#/components/responses/Error400Response'
      security:
        -
          api_key: []
        -
          oauth2:
            - team_access
      x-codeSamples:
        -
          lang: PHP
          label: PHP
          source:
            $ref: examples/TeamDelete.php
        -
          lang: JavaScript
          label: JavaScript
          source:
            $ref: examples/TeamDelete.js
        -
          lang: TypeScript
          label: TypeScript
          source:
            $ref: examples/TeamDelete.ts
        -
          lang: Java
          label: Java
          source:
            $ref: examples/TeamDelete.java
        -
          lang: Ruby
          label: Ruby
          source:
            $ref: examples/TeamDelete.rb
        -
          lang: Python
          label: Python
          source:
            $ref: examples/TeamDelete.py
  /team:
    get:
      tags:
        - Team
      summary: 'Get Team'
      description: 'Returns information about your Team as well as a list of its members. If you do not belong to a Team, a 404 error with an error_name of "not_found" will be returned.'
      operationId: teamGet
      responses:
        200:
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamGetResponse'
              examples:
                default_example:
                  $ref: '#/components/examples/TeamGetResponseExample'
        400:
          $ref: '#/components/responses/Error400Response'
        404:
          description: 'not found'
          content:
            application/json:
              examples:
                default_example:
                  $ref: '#/components/examples/TeamDoesNotExistResponseExample'
      security:
        -
          api_key: []
        -
          oauth2:
            - team_access
      x-codeSamples:
        -
          lang: PHP
          label: PHP
          source:
            $ref: examples/TeamGet.php
        -
          lang: JavaScript
          label: JavaScript
          source:
            $ref: examples/TeamGet.js
        -
          lang: TypeScript
          label: TypeScript
          source:
            $ref: examples/TeamGet.ts
        -
          lang: Java
          label: Java
          source:
            $ref: examples/TeamGet.java
        -
          lang: Ruby
          label: Ruby
          source:
            $ref: examples/TeamGet.rb
        -
          lang: Python
          label: Python
          source:
            $ref: examples/TeamGet.py
    put:
      tags:
        - Team
      summary: 'Update Team'
      description: 'Updates the name of your Team.'
      operationId: teamUpdate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamUpdateRequest'
            examples:
              default_example:
                $ref: '#/components/examples/TeamUpdateRequestDefaultExample'
      responses:
        200:
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamGetResponse'
              examples:
                default_example:
                  $ref: '#/components/examples/TeamUpdateResponseExample'
        400:
          $ref: '#/components/responses/Error400Response'
      security:
        -
          api_key: []
        -
          oauth2:
            - team_access
      x-codeSamples:
        -
          lang: PHP
          label: PHP
          source:
            $ref: examples/TeamUpdate.php
        -
          lang: JavaScript
          label: JavaScript
          source:
            $ref: examples/TeamUpdate.js
        -
          lang: TypeScript
          label: TypeScript
          source:
            $ref: examples/TeamUpdate.ts
        -
          lang: Java
          label: Java
          source:
            $ref: examples/TeamUpdate.java
        -
          lang: Ruby
          label: Ruby
          source:
            $ref: examples/TeamUpdate.rb
        -
          lang: Python
          label: Python
          source:
            $ref: examples/TeamUpdate.py
  /team/remove_member:
    post:
      tags:
        - Team
      summary: 'Remove User from Team'
      description: 'Removes the provided user Account from your Team. If the Account had an outstanding invitation to your Team, the invitation will be expired. If you choose to transfer documents from the removed Account to an Account provided in the `new_owner_email_address` parameter (available only for Enterprise plans), the response status code will be 201, which indicates that your request has been queued but not fully executed.'
      operationId: teamRemoveMember
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamRemoveMemberRequest'
            examples:
              email_address:
                $ref: '#/components/examples/TeamRemoveMemberRequestEmailAddressExample'
              account_id:
                $ref: '#/components/examples/TeamRemoveMemberRequestAccountIdExample'
      responses:
        200:
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamGetResponse'
              examples:
                default_example:
                  $ref: '#/components/examples/TeamRemoveMemberResponseExample'
        400:
          $ref: '#/components/responses/Error400Response'
      security:
        -
          api_key: []
        -
          oauth2:
            - team_access
      x-codeSamples:
        -
          lang: PHP
          label: PHP
          source:
            $ref: examples/TeamRemoveMember.php
        -
          lang: JavaScript
          label: JavaScript
          source:
            $ref: examples/TeamRemoveMember.js
        -
          lang: TypeScript
          label: TypeScript
          source:
            $ref: examples/TeamRemoveMember.ts
        -
          lang: Java
          label: Java
          source:
            $ref: examples/TeamRemoveMember.java
        -
          lang: Ruby
          label: Ruby
          source:
            $ref: examples/TeamRemoveMember.rb
        -
          lang: Python
          label: Python
          source:
            $ref: examples/TeamRemoveMember.py
  '/template/add_user/{template_id}':
    post:
      tags:
        - Template
      summary: 'Add User to Template'
      description: 'Gives the specified Account access to the specified Template. The specified Account must be a part of your Team.'
      operationId: templateAddUser
      parameters:
        -
          name: template_id
          in: path
          description: 'The id of the Template to give the Account access to.'
          required: true
          schema:
            type: string
          example: f57db65d3f933b5316d398057a36176831451a35
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateAddUserRequest'
            examples:
              default_example:
                $ref: '#/components/examples/TemplateAddUserRequestDefaultExample'
      responses:
        200:
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateGetResponse'
              examples:
                default_example:
                  $ref: '#/components/examples/TemplateAddUserResponseExample'
        400:
          $ref: '#/components/responses/Error400Response'
      security:
        -
          api_key: []
        -
          oauth2:
            - template_access
      x-codeSamples:
        -
          lang: PHP
          label: PHP
          source:
            $ref: examples/TemplateAddUser.php
        -
          lang: JavaScript
          label: JavaScript
          source:
            $ref: examples/TemplateAddUser.js
        -
          lang: TypeScript
          label: TypeScript
          source:
            $ref: examples/TemplateAddUser.ts
        -
          lang: Java
          label: Java
          source:
            $ref: examples/TemplateAddUser.java
        -
          lang: Ruby
          label: Ruby
          source:
            $ref: examples/TemplateAddUser.rb
        -
          lang: Python
          label: Python
          source:
            $ref: examples/TemplateAddUser.py
  /template/create_embedded_draft:
    post:
      tags:
        - Template
      summary: 'Create Embedded Template Draft'
      description: 'The first step in an embedded template workflow. Creates a draft template that can then be further set up in the template ''edit'' stage.'
      operationId: templateCreateEmbeddedDraft
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateCreateEmbeddedDraftRequest'
            examples:
              default_example:
                $ref: '#/components/examples/TemplateCreateEmbeddedDraftRequestDefaultExample'
              form_fields_per_document:
                $ref: '#/components/examples/TemplateCreateEmbeddedDraftRequestFormFieldsPerDocumentExample'
              form_field_groups:
                $ref: '#/components/examples/TemplateCreateEmbeddedDraftRequestFormFieldGroupsExample'
              form_field_rules:
                $ref: '#/components/examples/TemplateCreateEmbeddedDraftRequestFormFieldRulesExample'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TemplateCreateEmbeddedDraftRequest'
            examples:
              default_example:
                $ref: '#/components/examples/TemplateCreateEmbeddedDraftRequestFormDataExample'
      responses:
        200:
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateCreateEmbeddedDraftResponse'
              examples:
                default_example:
                  $ref: '#/components/examples/TemplateCreateEmbeddedDraftResponseExample'
        400:
          $ref: '#/components/responses/Error400Response'
      security:
        -
          api_key: []
        -
          oauth2:
            - template_access
      x-codeSamples:
        -
          lang: PHP
          label: PHP
          source:
            $ref: examples/TemplateCreateEmbeddedDraft.php
        -
          lang: JavaScript
          label: JavaScript
          source:
            $ref: examples/TemplateCreateEmbeddedDraft.js
        -
          lang: TypeScript
          label: TypeScript
          source:
            $ref: examples/TemplateCreateEmbeddedDraft.ts
        -
          lang: Java
          label: Java
          source:
            $ref: examples/TemplateCreateEmbeddedDraft.java
        -
          lang: Ruby
          label: Ruby
          source:
            $ref: examples/TemplateCreateEmbeddedDraft.rb
        -
          lang: Python
          label: Python
          source:
            $ref: examples/TemplateCreateEmbeddedDraft.py
  '/template/delete/{template_id}':
    post:
      tags:
        - Template
      summary: 'Delete Template'
      description: 'Completely deletes the template specified from the account.'
      operationId: templateDelete
      parameters:
        -
          name: template_id
          in: path
          description: 'The id of the Template to delete.'
          required: true
          schema:
            type: string
          example: 5de8179668f2033afac48da1868d0093bf133266
      responses:
        200:
          description: 'successful operation'
          content:
            application/json: {}
        400:
          $ref: '#/components/responses/Error400Response'
      security:
        -
          api_key: []
        -
          oauth2:
            - template_access
      x-codeSamples:
        -
          lang: PHP
          label: PHP
          source:
            $ref: examples/TemplateDelete.php
        -
          lang: JavaScript
          label: JavaScript
          source:
            $ref: examples/TemplateDelete.js
        -
          lang: TypeScript
          label: TypeScript
          source:
            $ref: examples/TemplateDelete.ts
        -
          lang: Java
          label: Java
          source:
            $ref: examples/TemplateDelete.java
        -
          lang: Ruby
          label: Ruby
          source:
            $ref: examples/TemplateDelete.rb
        -
          lang: Python
          label: Python
          source:
            $ref: examples/TemplateDelete.py
  '/template/files/{template_id}':
    get:
      tags:
        - Template
      summary: 'Get Template Files'
      description: |-
        Obtain a copy of the current documents specified by the `template_id` parameter.

        Returns a PDF or ZIP file, or if `get_url` is set, a JSON object with a url to the file (PDFs only). If `get_data_uri` is set, a JSON object with a `data_uri` representing the base64 encoded file (PDFs only) is returned.

        If the files are currently being prepared, a status code of `409` will be returned instead.
      operationId: templateFiles
      parameters:
        -
          name: template_id
          in: path
          description: 'The id of the Template to delete.'
          required: true
          schema:
            type: string
          example: 5de8179668f2033afac48da1868d0093bf133266
        -
          name: file_type
          in: query
          description: 'Set to `pdf` for a single merged document or `zip` for a collection of individual documents.'
          schema:
            type: string
            enum:
              - pdf
              - zip
        -
          name: get_url
          in: query
          description: 'If `true`, the response will contain a url link to the file instead. Links are only available for PDFs and have a TTL of 3 days.'
          schema:
            type: boolean
            default: false
        -
          name: get_data_uri
          in: query
          description: 'If `true`, the response will contain the file as base64 encoded string. Base64 encoding is only available for PDFs.'
          schema:
            type: boolean
            default: false
      responses:
        200:
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileResponse'
              examples:
                default_example:
                  $ref: '#/components/examples/TemplateFilesResponseExample'
        400:
          $ref: '#/components/responses/Error400Response'
      security:
        -
          api_key: []
        -
          oauth2:
            - template_access
      x-codeSamples:
        -
          lang: PHP
          label: PHP
          source:
            $ref: examples/TemplateFiles.php
        -
          lang: JavaScript
          label: JavaScript
          source:
            $ref: examples/TemplateFiles.js
        -
          lang: TypeScript
          label: TypeScript
          source:
            $ref: examples/TemplateFiles.ts
        -
          lang: Java
          label: Java
          source:
            $ref: examples/TemplateFiles.java
        -
          lang: Ruby
          label: Ruby
          source:
            $ref: examples/TemplateFiles.rb
        -
          lang: Python
          label: Python
          source:
            $ref: examples/TemplateFiles.py
  '/template/{template_id}':
    get:
      tags:
        - Template
      summary: 'Get Template'
      description: 'Returns the Template specified by the id parameter.'
      operationId: templateGet
      parameters:
        -
          name: template_id
          in: path
          description: 'The id of the Template to retrieve.'
          required: true
          schema:
            type: string
          example: f57db65d3f933b5316d398057a36176831451a35
      responses:
        200:
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateGetResponse'
              examples:
                default_example:
                  $ref: '#/components/examples/TemplateGetResponseExample'
        400:
          $ref: '#/components/responses/Error400Response'
      security:
        -
          api_key: []
        -
          oauth2:
            - template_access
      x-codeSamples:
        -
          lang: PHP
          label: PHP
          source:
            $ref: examples/TemplateGet.php
        -
          lang: JavaScript
          label: JavaScript
          source:
            $ref: examples/TemplateGet.js
        -
          lang: TypeScript
          label: TypeScript
          source:
            $ref: examples/TemplateGet.ts
        -
          lang: Java
          label: Java
          source:
            $ref: examples/TemplateGet.java
        -
          lang: Ruby
          label: Ruby
          source:
            $ref: examples/TemplateGet.rb
        -
          lang: Python
          label: Python
          source:
            $ref: examples/TemplateGet.py
  /template/list:
    get:
      tags:
        - Template
      summary: 'List Templates'
      description: |-
        Returns a list of the Templates that are accessible by you.

        Take a look at our [search guide](https://app.hellosign.com/api/reference#Search) to learn more about querying templates.
      operationId: templateList
      parameters:
        -
          name: account_id
          in: query
          description: 'Which account to return Templates for. Must be a team member. Use `all` to indicate all team members. Defaults to your account.'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'Which page number of the Template List to return. Defaults to `1`.'
          schema:
            type: integer
            default: 1
        -
          name: page_size
          in: query
          description: '`Number of objects to be returned per page. Must be between `1` and `100`. Default is `20`.'
          schema:
            type: integer
            default: 20
            maximum: 100
            minimum: 1
        -
          name: query
          in: query
          description: 'String that includes search terms and/or fields to be used to filter the Template objects.'
          schema:
            type: string
      responses:
        200:
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateListResponse'
              examples:
                default_example:
                  $ref: '#/components/examples/TemplateListResponseExample'
        400:
          $ref: '#/components/responses/Error400Response'
      security:
        -
          api_key: []
        -
          oauth2:
            - template_access
      x-codeSamples:
        -
          lang: PHP
          label: PHP
          source:
            $ref: examples/TemplateList.php
        -
          lang: JavaScript
          label: JavaScript
          source:
            $ref: examples/TemplateList.js
        -
          lang: TypeScript
          label: TypeScript
          source:
            $ref: examples/TemplateList.ts
        -
          lang: Java
          label: Java
          source:
            $ref: examples/TemplateList.java
        -
          lang: Ruby
          label: Ruby
          source:
            $ref: examples/TemplateList.rb
        -
          lang: Python
          label: Python
          source:
            $ref: examples/TemplateList.py
  '/template/remove_user/{template_id}':
    post:
      tags:
        - Template
      summary: 'Remove User from Template'
      description: 'Removes the specified Account''s access to the specified Template.'
      operationId: templateRemoveUser
      parameters:
        -
          name: template_id
          in: path
          description: 'The id of the Template to remove the Account''s access to.'
          required: true
          schema:
            type: string
          example: 21f920ec2b7f4b6bb64d3ed79f26303843046536
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateRemoveUserRequest'
            examples:
              default_example:
                $ref: '#/components/examples/TemplateRemoveUserRequestDefaultExample'
      responses:
        200:
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateGetResponse'
              examples:
                default_example:
                  $ref: '#/components/examples/TemplateRemoveUserResponseExample'
        400:
          $ref: '#/components/responses/Error400Response'
      security:
        -
          api_key: []
        -
          oauth2:
            - template_access
      x-codeSamples:
        -
          lang: PHP
          label: PHP
          source:
            $ref: examples/TemplateRemoveUser.php
        -
          lang: JavaScript
          label: JavaScript
          source:
            $ref: examples/TemplateRemoveUser.js
        -
          lang: TypeScript
          label: TypeScript
          source:
            $ref: examples/TemplateRemoveUser.ts
        -
          lang: Java
          label: Java
          source:
            $ref: examples/TemplateRemoveUser.java
        -
          lang: Ruby
          label: Ruby
          source:
            $ref: examples/TemplateRemoveUser.rb
        -
          lang: Python
          label: Python
          source:
            $ref: examples/TemplateRemoveUser.py
  '/template/update_files/{template_id}':
    post:
      tags:
        - Template
      summary: 'Update Template Files'
      description: |-
        Overlays a new file with the overlay of an existing template. The new file(s) must:

        1. have the same or higher page count
        2. the same orientation as the file(s) being replaced.

        This will not overwrite or in any way affect the existing template. Both the existing template and new template will be available for use after executing this endpoint. Also note that this will decrement your template quota.

        Overlaying new files is asynchronous and a successful call to this endpoint will return an empty 200 OK response if the request passes initial validation checks.

        It is recommended that a callback be implemented to listen for the callback event. A `template_created` event will be sent when the files are updated or a `template_error` event will be sent if there was a problem while updating the files. If a callback handler has been configured and the event has not been received within 60 minutes of making the call, check the status of the request in the API dashboard and retry the request if necessary.

        If the page orientation or page count is different from the original template document, we will notify you with a `template_error` [callback event](https://app.hellosign.com/api/eventsAndCallbacksWalkthrough).
      operationId: templateUpdateFiles
      parameters:
        -
          name: template_id
          in: path
          description: 'The ID of the template whose files to update.'
          required: true
          schema:
            type: string
          example: 5de8179668f2033afac48da1868d0093bf133266
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateUpdateFilesRequest'
            examples:
              default_example:
                $ref: '#/components/examples/TemplateUpdateFilesRequestDefaultExample'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TemplateUpdateFilesRequest'
            examples:
              default_example:
                $ref: '#/components/examples/TemplateUpdateFilesRequestFormDataExample'
      responses:
        200:
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateUpdateFilesResponse'
              examples:
                default_example:
                  $ref: '#/components/examples/TemplateUpdateFilesResponseExample'
        400:
          $ref: '#/components/responses/Error400Response'
      security:
        -
          api_key: []
        -
          oauth2:
            - template_access
      x-codeSamples:
        -
          lang: PHP
          label: PHP
          source:
            $ref: examples/TemplateUpdateFiles.php
        -
          lang: JavaScript
          label: JavaScript
          source:
            $ref: examples/TemplateUpdateFiles.js
        -
          lang: TypeScript
          label: TypeScript
          source:
            $ref: examples/TemplateUpdateFiles.ts
        -
          lang: Java
          label: Java
          source:
            $ref: examples/TemplateUpdateFiles.java
        -
          lang: Ruby
          label: Ruby
          source:
            $ref: examples/TemplateUpdateFiles.rb
        -
          lang: Python
          label: Python
          source:
            $ref: examples/TemplateUpdateFiles.py
  /unclaimed_draft/create:
    post:
      tags:
        - 'Unclaimed Draft'
      summary: 'Create Unclaimed Draft'
      description: 'Creates a new Draft that can be claimed using the claim URL. The first authenticated user to access the URL will claim the Draft and will be shown either the "Sign and send" or the "Request signature" page with the Draft loaded. Subsequent access to the claim URL will result in a 404.'
      operationId: unclaimedDraftCreate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnclaimedDraftCreateRequest'
            examples:
              default_example:
                $ref: '#/components/examples/UnclaimedDraftCreateRequestDefaultExample'
              form_fields_per_document:
                $ref: '#/components/examples/UnclaimedDraftCreateRequestFormFieldsPerDocumentExample'
              form_field_groups:
                $ref: '#/components/examples/UnclaimedDraftCreateRequestFormFieldGroupsExample'
              form_field_rules:
                $ref: '#/components/examples/UnclaimedDraftCreateRequestFormFieldRulesExample'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UnclaimedDraftCreateRequest'
            examples:
              default_example:
                $ref: '#/components/examples/UnclaimedDraftCreateRequestFormDataExample'
      responses:
        200:
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnclaimedDraftCreateResponse'
              examples:
                default_example:
                  $ref: '#/components/examples/UnclaimedDraftCreateResponseExample'
        400:
          $ref: '#/components/responses/Error400Response'
      security:
        -
          api_key: []
        -
          oauth2:
            - signature_request_access
      x-codeSamples:
        -
          lang: PHP
          label: PHP
          source:
            $ref: examples/UnclaimedDraftCreate.php
        -
          lang: JavaScript
          label: JavaScript
          source:
            $ref: examples/UnclaimedDraftCreate.js
        -
          lang: TypeScript
          label: TypeScript
          source:
            $ref: examples/UnclaimedDraftCreate.ts
        -
          lang: Java
          label: Java
          source:
            $ref: examples/UnclaimedDraftCreate.java
        -
          lang: Ruby
          label: Ruby
          source:
            $ref: examples/UnclaimedDraftCreate.rb
        -
          lang: Python
          label: Python
          source:
            $ref: examples/UnclaimedDraftCreate.py
  /unclaimed_draft/create_embedded:
    post:
      tags:
        - 'Unclaimed Draft'
      summary: 'Create Embedded Unclaimed Draft'
      description: |-
        Creates a new Draft that can be claimed and used in an embedded iFrame. The first authenticated user to access the URL will claim the Draft and will be shown the "Request signature" page with the Draft loaded. Subsequent access to the claim URL will result in a `404`. For this embedded endpoint the `requester_email_address` parameter is required.

        **NOTE**: Embedded unclaimed drafts can only be accessed in embedded iFrames whereas normal drafts can be used and accessed on HelloSign.
      operationId: unclaimedDraftCreateEmbedded
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnclaimedDraftCreateEmbeddedRequest'
            examples:
              default_example:
                $ref: '#/components/examples/UnclaimedDraftCreateEmbeddedRequestDefaultExample'
              form_fields_per_document:
                $ref: '#/components/examples/UnclaimedDraftCreateEmbeddedRequestFormFieldsPerDocumentExample'
              form_field_groups:
                $ref: '#/components/examples/UnclaimedDraftCreateEmbeddedRequestFormFieldGroupsExample'
              form_field_rules:
                $ref: '#/components/examples/UnclaimedDraftCreateEmbeddedRequestFormFieldRulesExample'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UnclaimedDraftCreateEmbeddedRequest'
            examples:
              default_example:
                $ref: '#/components/examples/UnclaimedDraftCreateEmbeddedRequestFormDataExample'
      responses:
        200:
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnclaimedDraftCreateResponse'
              examples:
                default_example:
                  $ref: '#/components/examples/UnclaimedDraftCreateEmbeddedResponseExample'
        400:
          $ref: '#/components/responses/Error400Response'
      security:
        -
          api_key: []
        -
          oauth2:
            - request_signature
            - signature_request_access
      x-codeSamples:
        -
          lang: PHP
          label: PHP
          source:
            $ref: examples/UnclaimedDraftCreateEmbedded.php
        -
          lang: JavaScript
          label: JavaScript
          source:
            $ref: examples/UnclaimedDraftCreateEmbedded.js
        -
          lang: TypeScript
          label: TypeScript
          source:
            $ref: examples/UnclaimedDraftCreateEmbedded.ts
        -
          lang: Java
          label: Java
          source:
            $ref: examples/UnclaimedDraftCreateEmbedded.java
        -
          lang: Ruby
          label: Ruby
          source:
            $ref: examples/UnclaimedDraftCreateEmbedded.rb
        -
          lang: Python
          label: Python
          source:
            $ref: examples/UnclaimedDraftCreateEmbedded.py
  /unclaimed_draft/create_embedded_with_template:
    post:
      tags:
        - 'Unclaimed Draft'
      summary: 'Create Embedded Unclaimed Draft with Template'
      description: |-
        Creates a new Draft with a previously saved template(s) that can be claimed and used in an embedded iFrame. The first authenticated user to access the URL will claim the Draft and will be shown the "Request signature" page with the Draft loaded. Subsequent access to the claim URL will result in a `404`. For this embedded endpoint the `requester_email_address` parameter is required.

        **NOTE**: Embedded unclaimed drafts can only be accessed in embedded iFrames whereas normal drafts can be used and accessed on HelloSign.
      operationId: unclaimedDraftCreateEmbeddedWithTemplate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnclaimedDraftCreateEmbeddedWithTemplateRequest'
            examples:
              default_example:
                $ref: '#/components/examples/UnclaimedDraftCreateEmbeddedWithTemplateRequestDefaultExample'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UnclaimedDraftCreateEmbeddedWithTemplateRequest'
            examples:
              default_example:
                $ref: '#/components/examples/UnclaimedDraftCreateEmbeddedWithTemplateRequestFormDataExample'
      responses:
        200:
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnclaimedDraftCreateResponse'
              examples:
                default_example:
                  $ref: '#/components/examples/UnclaimedDraftCreateEmbeddedWithTemplateResponseExample'
        400:
          $ref: '#/components/responses/Error400Response'
      security:
        -
          api_key: []
        -
          oauth2:
            - signature_request_access
      x-codeSamples:
        -
          lang: PHP
          label: PHP
          source:
            $ref: examples/UnclaimedDraftCreateEmbeddedWithTemplate.php
        -
          lang: JavaScript
          label: JavaScript
          source:
            $ref: examples/UnclaimedDraftCreateEmbeddedWithTemplate.js
        -
          lang: TypeScript
          label: TypeScript
          source:
            $ref: examples/UnclaimedDraftCreateEmbeddedWithTemplate.ts
        -
          lang: Java
          label: Java
          source:
            $ref: examples/UnclaimedDraftCreateEmbeddedWithTemplate.java
        -
          lang: Ruby
          label: Ruby
          source:
            $ref: examples/UnclaimedDraftCreateEmbeddedWithTemplate.rb
        -
          lang: Python
          label: Python
          source:
            $ref: examples/UnclaimedDraftCreateEmbeddedWithTemplate.py
  '/unclaimed_draft/edit_and_resend/{signature_request_id}':
    post:
      tags:
        - 'Unclaimed Draft'
      summary: 'Edit and Resend Unclaimed Draft'
      description: |-
        Creates a new signature request from an embedded request that can be edited prior to being sent to the recipients. Parameter `test_mode` can be edited prior to request. Signers can be edited in embedded editor. Requester's email address will remain unchanged if `requester_email_address` parameter is not set.

        **NOTE**: Embedded unclaimed drafts can only be accessed in embedded iFrames whereas normal drafts can be used and accessed on HelloSign.
      operationId: unclaimedDraftEditAndResend
      parameters:
        -
          name: signature_request_id
          in: path
          description: 'The ID of the signature request to edit and resend.'
          required: true
          schema:
            type: string
          example: 2f9781e1a83jdja934d808c153c2e1d3df6f8f2f
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnclaimedDraftEditAndResendRequest'
            examples:
              default_example:
                $ref: '#/components/examples/UnclaimedDraftEditAndResendRequestDefaultExample'
      responses:
        200:
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnclaimedDraftCreateResponse'
              examples:
                default_example:
                  $ref: '#/components/examples/UnclaimedDraftEditAndResendExample'
        400:
          $ref: '#/components/responses/Error400Response'
      security:
        -
          api_key: []
        -
          oauth2:
            - request_signature
            - signature_request_access
      x-codeSamples:
        -
          lang: PHP
          label: PHP
          source:
            $ref: examples/UnclaimedDraftEditAndResend.php
        -
          lang: JavaScript
          label: JavaScript
          source:
            $ref: examples/UnclaimedDraftEditAndResend.js
        -
          lang: TypeScript
          label: TypeScript
          source:
            $ref: examples/UnclaimedDraftEditAndResend.ts
        -
          lang: Java
          label: Java
          source:
            $ref: examples/UnclaimedDraftEditAndResend.java
        -
          lang: Ruby
          label: Ruby
          source:
            $ref: examples/UnclaimedDraftEditAndResend.rb
        -
          lang: Python
          label: Python
          source:
            $ref: examples/UnclaimedDraftEditAndResend.py
components:
  schemas:
    AccountCreateRequest:
      required:
        - email_address
      properties:
        client_id:
          description: |-
            Used when creating a new account and requesting OAuth authorization.

            See [OAuth 2.0 Authorization](https://app.hellosign.com/api/oauthWalkthrough#OAuthAuthorization)
          type: string
        client_secret:
          description: |-
            Used when creating a new account and requesting OAuth authorization.

            See [OAuth 2.0 Authorization](https://app.hellosign.com/api/oauthWalkthrough#OAuthAuthorization)
          type: string
        email_address:
          description: 'The email address to create a new Account for.'
          type: string
          format: email
      type: object
    AccountUpdateRequest:
      properties:
        callback_url:
          description: 'The URL that HelloSign should POST events to.'
          type: string
      type: object
    AccountVerifyRequest:
      required:
        - email_address
      properties:
        email_address:
          description: 'Email address to run the verification for.'
          type: string
          format: email
      type: object
    ApiAppCreateRequest:
      required:
        - name
        - domains
      properties:
        callback_url:
          description: 'The URL at which the ApiApp should receive event callbacks.'
          type: string
        custom_logo_file:
          description: 'An image file to use as a custom logo in embedded contexts. (Only applies to some API plans)'
          type: string
          format: binary
        domains:
          description: 'The domain names the ApiApp will be associated with.'
          type: array
          items:
            type: string
          maxItems: 2
          minItems: 1
        name:
          description: 'The name you want to assign to the ApiApp.'
          type: string
        oauth:
          $ref: '#/components/schemas/SubOAuth'
        options:
          $ref: '#/components/schemas/SubOptions'
        white_labeling_options:
          $ref: '#/components/schemas/SubWhiteLabelingOptions'
      type: object
    ApiAppUpdateRequest:
      properties:
        callback_url:
          description: 'The URL at which the ApiApp should receive event callbacks.'
          type: string
        custom_logo_file:
          description: 'An image file to use as a custom logo in embedded contexts. (Only applies to some API plans)'
          type: string
          format: binary
        domains:
          description: 'The domain names the ApiApp will be associated with.'
          type: array
          items:
            type: string
          maxItems: 2
        name:
          description: 'The name you want to assign to the ApiApp.'
          type: string
        oauth:
          $ref: '#/components/schemas/SubOAuth'
        options:
          $ref: '#/components/schemas/SubOptions'
        white_labeling_options:
          $ref: '#/components/schemas/SubWhiteLabelingOptions'
      type: object
    EmbeddedEditUrlRequest:
      properties:
        allow_edit_ccs:
          description: 'This allows the requester to enable/disable to add or change CC roles when editing the template.'
          type: boolean
          default: false
        cc_roles:
          description: 'The CC roles that must be assigned when using the template to send a signature request. To remove all CC roles, pass in a single role with no name. For use in a POST request.'
          type: array
          items:
            type: string
        editor_options:
          $ref: '#/components/schemas/SubEditorOptions'
        force_signer_roles:
          description: 'Provide users the ability to review/edit the template signer roles.'
          type: boolean
          default: false
        force_subject_message:
          description: 'Provide users the ability to review/edit the template subject and message.'
          type: boolean
          default: false
        merge_fields:
          type: array
          items:
            $ref: '#/components/schemas/SubMergeField'
        preview_only:
          description: |-
            This allows the requester to enable the preview experience experience.

            **Note**: This parameter overwrites `show_preview=true` (if set).
          type: boolean
          default: false
        show_preview:
          description: 'This allows the requester to enable the editor/preview experience.'
          type: boolean
          default: false
        skip_signer_roles:
          description: |-
            If signer roles are already provided, the user will not be prompted to edit them.

            **Note**: this parameter will be deprecated in May 2020 and skipping the signer roles screen will become the default behavior. To enforce showing the signer roles screen, use the `force_signer_roles` parameter.
          type: boolean
          default: false
        skip_subject_message:
          description: |-
            If the subject and message has already been provided, the user will not be prompted to edit them.

            **Note**: this parameter will be deprecated in May 2020 and skipping the subject message screen will become the default behavior. To enforce showing the subject message screen, use the `force_subject_message` parameter.
          type: boolean
          default: false
        test_mode:
          description: 'Whether this is a test, locked templates will only be available for editing if this is set to `true`. Defaults to `false`.'
          type: boolean
          default: false
      type: object
    SubBulkSignerListCustomField:
      required:
        - name
        - value
      properties:
        name:
          description: 'The name of the custom field. Must be the field''s `name` or `api_id`.'
          type: string
        value:
          description: 'The value of the custom field.'
          type: string
      type: object
    SubBulkSignerListSigner:
      required:
        - role
        - name
        - email_address
      properties:
        role:
          description: 'Must match the single existing role in chosen Template(s). Currently only templates with a single role are supported. All signers must have the same `role` value.'
          type: string
        name:
          description: 'The name of the signer.'
          type: string
        email_address:
          description: 'The email address of the signer.'
          type: string
          format: email
        pin:
          description: 'The 4- to 12-character access code that will secure this signer''s signature page.'
          type: string
          maxLength: 12
          minLength: 4
        sms_phone_number:
          description: |-
            An E.164 formatted phone number that will receive a code via SMS to access this signer's signature page.

            **Note**: Not available in test mode and requires a Standard plan or higher.
          type: string
      type: object
    SubFormFieldsPerDocumentTypeEnum:
      type: string
      enum:
        - checkbox
        - checkbox-merge
        - date_signed
        - dropdown
        - hyperlink
        - initials
        - signature
        - radio
        - text
        - text-merge
    SubFormFieldsPerDocumentText:
      description: 'This class extends `SubFormFieldsPerDocumentBase`.'
      type: object
      allOf:
        -
          $ref: '#/components/schemas/SubFormFieldsPerDocumentBase'
        -
          required:
            - type
            - options
          properties:
            type:
              description: 'A text input field. Use the `SubFormFieldsPerDocumentText` class.'
              type: string
              default: text
            placeholder:
              description: 'Placeholder value for text field.'
              type: string
            auto_fill_type:
              description: 'Auto fill type for populating fields automatically. Check out the list of [auto fill types](https://app.hellosign.com/api/reference#AutoFillTypes) to learn more about the possible values.'
              type: string
            masked:
              description: 'Masks entered data. For more information see [Masking sensitive information](https://app.hellosign.com/api/reference#:~:text=Masking%20sensitive%20information). `true` for masking the data in a text field, otherwise `false`.'
              type: boolean
            validation_type:
              description: |-
                Each text field may contain a `validation_type` parameter. Check out the list of [validation types](https://faq.hellosign.com/hc/en-us/articles/217115577) to learn more about the possible values.

                **NOTE**: When using `custom_regex` you are required to pass a second parameter `validation_custom_regex` and you can optionally provide `validation_custom_regex_format_label` for the error message the user will see in case of an invalid value.
              type: string
              enum:
                - numbers_only
                - letters_only
                - phone_number
                - bank_routing_number
                - bank_account_number
                - email_address
                - zip_code
                - social_security_number
                - employer_identification_number
                - custom_regex
            validation_custom_regex:
              type: string
            validation_custom_regex_format_label:
              type: string
          type: object
    SubFormFieldsPerDocumentDropdown:
      description: 'This class extends `SubFormFieldsPerDocumentBase`.'
      type: object
      allOf:
        -
          $ref: '#/components/schemas/SubFormFieldsPerDocumentBase'
        -
          required:
            - type
            - options
          properties:
            type:
              description: 'An input field for dropdowns. Use the `SubFormFieldsPerDocumentDropdown` class.'
              type: string
              default: dropdown
            options:
              description: 'Array of string values representing dropdown values.'
              type: array
              items:
                type: string
              minItems: 1
            content:
              description: 'Selected value in `options` array. Value must exist in array.'
              type: string
          type: object
    SubFormFieldsPerDocumentHyperlink:
      description: 'This class extends `SubFormFieldsPerDocumentBase`.'
      type: object
      allOf:
        -
          $ref: '#/components/schemas/SubFormFieldsPerDocumentBase'
        -
          required:
            - type
            - content
            - content_url
          properties:
            type:
              description: 'A hyperlink field. Use the `SubFormFieldsPerDocumentHyperlink` class.'
              type: string
              default: hyperlink
            content:
              description: 'Link Text.'
              type: string
            content_url:
              description: 'Link URL.'
              type: string
          type: object
    SubFormFieldsPerDocumentCheckbox:
      description: 'This class extends `SubFormFieldsPerDocumentBase`.'
      type: object
      allOf:
        -
          $ref: '#/components/schemas/SubFormFieldsPerDocumentBase'
        -
          required:
            - type
            - checked
          properties:
            type:
              description: 'A yes/no checkbox. Use the `SubFormFieldsPerDocumentCheckbox` class.'
              type: string
              default: checkbox
            group:
              description: 'String referencing group defined in `form_field_groups` parameter.'
              type: string
            checked:
              description: '`true` for checking the checkbox field by default, otherwise `false`.'
              type: boolean
          type: object
    SubFormFieldsPerDocumentRadio:
      description: 'This class extends `SubFormFieldsPerDocumentBase`.'
      type: object
      allOf:
        -
          $ref: '#/components/schemas/SubFormFieldsPerDocumentBase'
        -
          required:
            - type
            - group
            - checked
          properties:
            type:
              description: 'An input field for radios. Use the `SubFormFieldsPerDocumentRadio` class.'
              type: string
              default: radio
            group:
              description: 'String referencing group defined in `form_field_groups` parameter.'
              type: string
            checked:
              description: '`true` for checking the radio field by default, otherwise `false`. Only one radio field per group can be `true`.'
              type: boolean
          type: object
    SubFormFieldsPerDocumentSignature:
      description: 'This class extends `SubFormFieldsPerDocumentBase`.'
      type: object
      allOf:
        -
          $ref: '#/components/schemas/SubFormFieldsPerDocumentBase'
        -
          required:
            - type
          properties:
            type:
              description: 'A signature input field. Use the `SubFormFieldsPerDocumentSignature` class.'
              type: string
              default: signature
          type: object
    SubFormFieldsPerDocumentDateSigned:
      description: 'This class extends `SubFormFieldsPerDocumentBase`.'
      type: object
      allOf:
        -
          $ref: '#/components/schemas/SubFormFieldsPerDocumentBase'
        -
          required:
            - type
          properties:
            type:
              description: 'A date. Use the `SubFormFieldsPerDocumentDateSigned` class.'
              type: string
              default: date_signed
          type: object
    SubFormFieldsPerDocumentInitials:
      description: 'This class extends `SubFormFieldsPerDocumentBase`.'
      type: object
      allOf:
        -
          $ref: '#/components/schemas/SubFormFieldsPerDocumentBase'
        -
          required:
            - type
          properties:
            type:
              description: 'An input field for initials. Use the `SubFormFieldsPerDocumentInitials` class.'
              type: string
              default: initials
          type: object
    SubFormFieldsPerDocumentTextMerge:
      description: 'This class extends `SubFormFieldsPerDocumentBase`.'
      type: object
      allOf:
        -
          $ref: '#/components/schemas/SubFormFieldsPerDocumentBase'
        -
          required:
            - type
          properties:
            type:
              description: 'A text field that has default text set by the api. Use the `SubFormFieldsPerDocumentTextMerge` class.'
              type: string
              default: text-merge
          type: object
    SubFormFieldsPerDocumentCheckboxMerge:
      description: 'This class extends `SubFormFieldsPerDocumentBase`.'
      type: object
      allOf:
        -
          $ref: '#/components/schemas/SubFormFieldsPerDocumentBase'
        -
          required:
            - type
          properties:
            type:
              description: 'A checkbox field that has default value set by the api. Use the `SubFormFieldsPerDocumentCheckboxMerge` class.'
              type: string
              default: checkbox-merge
          type: object
    SubSignatureRequestSigner:
      required:
        - name
        - email_address
      properties:
        name:
          description: 'The name of the signer.'
          type: string
        email_address:
          description: 'The email address of the signer.'
          type: string
          format: email
        group:
          description: |-
            Name of group. Use this value across multiple signers to group them together. Any of the signers is eligible to sign for the entire group.

            Grouped signers will not use the `order`, `pin`, or `sms_phone_number` fields.
          type: string
        order:
          description: 'The order the signer is required to sign in.'
          type: integer
        pin:
          description: 'The 4- to 12-character access code that will secure this signer''s signature page.'
          type: string
          maxLength: 12
          minLength: 4
        sms_phone_number:
          description: |-
            An E.164 formatted phone number that will receive a code via SMS to access this signer's signature page.

            **Note**: Not available in test mode and requires a Standard plan or higher.
          type: string
      type: object
    SubSignatureRequestEmbeddedSigner:
      required:
        - name
        - email_address
      properties:
        name:
          description: 'The name of the signer.'
          type: string
        email_address:
          description: 'The email address of the signer.'
          type: string
          format: email
        order:
          description: 'The order the signer is required to sign in.'
          type: integer
        pin:
          description: 'The 4- to 12-character access code that will secure this signer''s signature page.'
          type: string
          maxLength: 12
          minLength: 4
        sms_phone_number:
          description: |-
            An E.164 formatted phone number that will receive a code via SMS to access this signer's signature page.

            **Note**: Not available in test mode and requires a Standard plan or higher.
          type: string
      type: object
    SubSignatureRequestTemplateSigner:
      required:
        - role
        - name
        - email_address
      properties:
        role:
          description: |-
            Must match an existing role in chosen Template(s). If multiple signers share the same `role` name they will be grouped together. Any of these grouped signers is eligible to sign for the entire group.

            Grouped signers will not use the `pin` or `sms_phone_number` fields.
          type: string
        name:
          description: 'The name of the signer.'
          type: string
        email_address:
          description: 'The email address of the signer.'
          type: string
          format: email
        pin:
          description: 'The 4- to 12-character access code that will secure this signer''s signature page.'
          type: string
          maxLength: 12
          minLength: 4
        sms_phone_number:
          description: |-
            An E.164 formatted phone number that will receive a code via SMS to access this signer's signature page.

            **Note**: Not available in test mode and requires a Standard plan or higher.
          type: string
      type: object
    SubSignatureRequestEmbeddedTemplateSigner:
      required:
        - role
        - name
        - email_address
      properties:
        role:
          description: 'Must match an existing role in chosen Template(s). Multiple signers cannot share the same role.'
          type: string
        name:
          description: 'The name of the signer.'
          type: string
        email_address:
          description: 'The email address of the signer.'
          type: string
          format: email
        pin:
          description: 'The 4- to 12-character access code that will secure this signer''s signature page.'
          type: string
          maxLength: 12
          minLength: 4
        sms_phone_number:
          description: |-
            An E.164 formatted phone number that will receive a code via SMS to access this signer's signature page.

            **Note**: Not available in test mode and requires a Standard plan or higher.
          type: string
      type: object
    SubUnclaimedDraftSigner:
      required:
        - name
        - email_address
      properties:
        email_address:
          description: 'The email address of the signer.'
          type: string
          format: email
        name:
          description: 'The name of the signer.'
          type: string
        order:
          description: 'The order the signer is required to sign in.'
          type: integer
      type: object
    SubUnclaimedDraftEmbeddedSigner:
      required:
        - name
        - email_address
      properties:
        email_address:
          description: 'The email address of the signer.'
          type: string
          format: email
        name:
          description: 'The name of the signer.'
          type: string
        order:
          description: 'The order the signer is required to sign in.'
          type: integer
      type: object
    SubUnclaimedDraftEmbeddedTemplateSigner:
      required:
        - role
        - name
        - email_address
      properties:
        role:
          description: 'Must match an existing role in chosen Template(s). Multiple signers cannot share the same `role`.'
          type: string
        name:
          description: 'The name of the signer filling the role of `role`.'
          type: string
        email_address:
          description: 'The email address of the signer filling the role of `role`.'
          type: string
          format: email
      type: object
    OAuthTokenGenerateRequest:
      required:
        - client_id
        - client_secret
        - code
        - state
        - grant_type
      properties:
        client_id:
          description: 'The client id of your app.'
          type: string
        client_secret:
          description: 'The secret token of your app.'
          type: string
        code:
          description: 'The code passed to your callback when the user granted access.'
          type: string
        grant_type:
          description: 'When generating a new token use `authorization_code`.'
          type: string
          default: authorization_code
        state:
          description: 'Same as the state you specified earlier.'
          type: string
      type: object
    OAuthTokenRefreshRequest:
      required:
        - grant_type
        - refresh_token
      properties:
        grant_type:
          description: 'When refreshing an existing token use `refresh_token`.'
          type: string
          default: refresh_token
        refresh_token:
          description: 'The token provided when you got the expired access token.'
          type: string
      type: object
    ReportCreateRequest:
      required:
        - start_date
        - end_date
        - report_type
      properties:
        end_date:
          description: 'The (inclusive) end date for the report data in `MM/DD/YYYY` format.'
          type: string
        report_type:
          description: 'The type(s) of the report you are requesting. Allowed values are `user_activity` and `document_status`. User activity reports contain list of all users and their activity during the specified date range. Document status report contain a list of signature requests created in the specified time range (and their status).'
          type: array
          items:
            type: string
            enum:
              - user_activity
              - document_status
          maxItems: 2
          minItems: 1
        start_date:
          description: 'The (inclusive) start date for the report data in `MM/DD/YYYY` format.'
          type: string
      type: object
    SignatureRequestBulkCreateEmbeddedWithTemplateRequest:
      description: 'Calls SignatureRequestBulkSendWithTemplate in controller'
      required:
        - client_id
        - template_ids
      properties:
        template_ids:
          description: 'Use `template_ids` to create a SignatureRequest from one or more templates, in the order in which the template will be used.'
          type: array
          items:
            type: string
        signer_file:
          description: |-
            `signer_file` is a CSV file defining values and options for signer fields. Required unless a `signer_list` is used, you may not use both. The CSV can have the following columns:

            - `name`: the name of the signer filling the role of RoleName
            - `email_address`: email address of the signer filling the role of RoleName
            - `pin`: the 4- to 12-character access code that will secure this signer's signature page (optional)
            - `sms_phone_number`: An E.164 formatted phone number that will receive a code via SMS to access this signer's signature page. (optional)

                **Note**: Not available in test mode and requires a Standard plan or higher.
            - `*_field`: any column with a _field" suffix will be treated as a custom field (optional)

                You may only specify field values here, any other options should be set in the custom_fields request parameter.

            Example CSV:

            ```
            name, email_address, pin, company_field
            George, george@example.com, d79a3td, ABC Corp
            Mary, mary@example.com, gd9as5b, 123 LLC
            ```
          type: string
          format: binary
        signer_list:
          description: '`signer_list` is an array defining values and options for signer fields. Required unless a `signer_file` is used, you may not use both.'
          type: array
          items:
            $ref: '#/components/schemas/SubBulkSignerList'
        allow_decline:
          description: 'Allows signers to decline to sign a document if `true`. Defaults to `false`.'
          type: boolean
          default: false
        ccs:
          description: 'Add CC email recipients. Required when a CC role exists for the Template.'
          type: array
          items:
            $ref: '#/components/schemas/SubCC'
        client_id:
          description: 'Client id of the app you''re using to create this embedded signature request. Visit our [embedded page](https://app.hellosign.com/api/embeddedSigningWalkthrough) to learn more about this parameter.'
          type: string
        custom_fields:
          description: 'An array defining values and options for custom fields. Required when defining pre-set values in `form_fields_per_document` or [Text Tags](https://app.hellosign.com/api/textTagsWalkthrough#TextTagIntro).'
          type: array
          items:
            $ref: '#/components/schemas/SubCustomField'
        message:
          description: 'The custom message in the email that will be sent to the signers.'
          type: string
          maxLength: 5000
        metadata:
          description: |-
            Key-value data that should be attached to the signature request. This metadata is included in all API responses and events involving the signature request. For example, use the metadata field to store a signer's order number for look up when receiving events for the signature request.

            Each request can include up to 10 metadata keys, with key names up to 40 characters long and values up to 1000 characters long.
          type: object
          maxItems: 10
          additionalProperties: {}
        signing_redirect_url:
          description: 'The URL you want signers redirected to after they successfully sign.'
          type: string
        subject:
          description: 'The subject in the email that will be sent to the signers.'
          type: string
          maxLength: 255
        test_mode:
          description: 'Whether this is a test, the signature request will not be legally binding if set to `true`. Defaults to `false`.'
          type: boolean
          default: false
        title:
          description: 'The title you want to assign to the SignatureRequest.'
          type: string
          maxLength: 255
      type: object
    SignatureRequestBulkSendWithTemplateRequest:
      required:
        - template_ids
      properties:
        template_ids:
          description: 'Use `template_ids` to create a SignatureRequest from one or more templates, in the order in which the template will be used.'
          type: array
          items:
            type: string
        signer_file:
          description: |-
            `signer_file` is a CSV file defining values and options for signer fields. Required unless a `signer_list` is used, you may not use both. The CSV can have the following columns:

            - `name`: the name of the signer filling the role of RoleName
            - `email_address`: email address of the signer filling the role of RoleName
            - `pin`: the 4- to 12-character access code that will secure this signer's signature page (optional)
            - `sms_phone_number`: An E.164 formatted phone number that will receive a code via SMS to access this signer's signature page. (optional)

                **Note**: Not available in test mode and requires a Standard plan or higher.
            - `*_field`: any column with a _field" suffix will be treated as a custom field (optional)

                You may only specify field values here, any other options should be set in the custom_fields request parameter.

            Example CSV:

            ```
            name, email_address, pin, company_field
            George, george@example.com, d79a3td, ABC Corp
            Mary, mary@example.com, gd9as5b, 123 LLC
            ```
          type: string
          format: binary
        signer_list:
          description: '`signer_list` is an array defining values and options for signer fields. Required unless a `signer_file` is used, you may not use both.'
          type: array
          items:
            $ref: '#/components/schemas/SubBulkSignerList'
        allow_decline:
          description: 'Allows signers to decline to sign a document if `true`. Defaults to `false`.'
          type: boolean
          default: false
        ccs:
          description: 'Add CC email recipients. Required when a CC role exists for the Template.'
          type: array
          items:
            $ref: '#/components/schemas/SubCC'
        custom_fields:
          description: 'An array defining values and options for custom fields. Required when defining pre-set values in `form_fields_per_document` or [Text Tags](https://app.hellosign.com/api/textTagsWalkthrough#TextTagIntro).'
          type: array
          items:
            $ref: '#/components/schemas/SubCustomField'
        message:
          description: 'The custom message in the email that will be sent to the signers.'
          type: string
          maxLength: 5000
        metadata:
          description: |-
            Key-value data that should be attached to the signature request. This metadata is included in all API responses and events involving the signature request. For example, use the metadata field to store a signer's order number for look up when receiving events for the signature request.

            Each request can include up to 10 metadata keys, with key names up to 40 characters long and values up to 1000 characters long.
          type: object
          maxItems: 10
          additionalProperties: {}
        signing_redirect_url:
          description: 'The URL you want signers redirected to after they successfully sign.'
          type: string
        subject:
          description: 'The subject in the email that will be sent to the signers.'
          type: string
          maxLength: 255
        test_mode:
          description: 'Whether this is a test, the signature request will not be legally binding if set to `true`. Defaults to `false`.'
          type: boolean
          default: false
        title:
          description: 'The title you want to assign to the SignatureRequest.'
          type: string
          maxLength: 255
      type: object
    SignatureRequestCreateEmbeddedRequest:
      description: 'Calls SignatureRequestSend in controller'
      required:
        - client_id
      properties:
        file:
          description: |-
            **file** or **file_url** is required, but not both.

            Use `file[]` to indicate the uploaded file(s) to send for signature.

            Currently we only support use of either the `file[]` parameter or `file_url[]` parameter, not both.
          type: array
          items:
            type: string
            format: binary
        file_url:
          description: |-
            **file_url** or **file** is required, but not both.

            Use `file_url[]` to have HelloSign download the file(s) to send for signature.

            Currently we only support use of either the `file[]` parameter or `file_url[]` parameter, not both.
          type: array
          items:
            type: string
        allow_decline:
          description: 'Allows signers to decline to sign a document if `true`. Defaults to `false`.'
          type: boolean
          default: false
        allow_reassign:
          description: |-
            Allows signers to reassign their signature requests to other signers if set to `true`. Defaults to `false`.

            **Note**: Only available for Gold plan and higher.
          type: boolean
          default: false
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/SubAttachment'
        cc_email_addresses:
          description: 'The email addresses that should be CCed.'
          type: array
          items:
            type: string
            format: email
        client_id:
          description: 'Client id of the app you''re using to create this embedded signature request. Visit our [embedded page](https://app.hellosign.com/api/embeddedSigningWalkthrough) to learn more about this parameter.'
          type: string
        custom_fields:
          description: 'An array defining values and options for custom fields. Required when defining pre-set values in `form_fields_per_document` or [Text Tags](https://app.hellosign.com/api/textTagsWalkthrough#TextTagIntro).'
          type: array
          items:
            $ref: '#/components/schemas/SubCustomField'
        field_options:
          $ref: '#/components/schemas/SubFieldOptions'
        form_field_groups:
          description: 'Group information for fields defined in `form_fields_per_document`. String-indexed JSON array with `group_label` and `requirement` keys. `form_fields_per_document` must contain fields referencing a group defined in `form_field_groups`.'
          type: array
          items:
            $ref: '#/components/schemas/SubFormFieldGroup'
        form_field_rules:
          description: 'Conditional Logic rules for fields defined in `form_fields_per_document`.'
          type: array
          items:
            $ref: '#/components/schemas/SubFormFieldRule'
        form_fields_per_document:
          description: |-
            The fields that should appear on the document, expressed as a 2-dimensional JSON array serialized to a string. The main array represents documents, with each containing an array of form fields. One document array is required for each file provided by the `file[]` parameter. In the case of a file with no fields, an empty list must be specified.

            **NOTE**: Fields like **text**, **dropdown**, **checkbox**, **radio**, and **hyperlink** have additional required and optional parameters. Check out the list of [additional parameters](https://app.hellosign.com/api/reference#FormFieldsPerDocument) for these field types.

            * Text Field use `SubFormFieldsPerDocumentText`
            * Dropdown Field use `SubFormFieldsPerDocumentDropdown`
            * Hyperlink Field use `SubFormFieldsPerDocumentHyperlink`
            * Checkbox Field use `SubFormFieldsPerDocumentCheckbox`
            * Radio Field use `SubFormFieldsPerDocumentRadio`
            * Signature Field use `SubFormFieldsPerDocumentSignature`
            * Date Signed Field use `SubFormFieldsPerDocumentDateSigned`
            * Initials Field use `SubFormFieldsPerDocumentInitials`
            * Text Merge Field use `SubFormFieldsPerDocumentTextMerge`
            * Checkbox Merge Field use `SubFormFieldsPerDocumentCheckboxMerge`
          type: array
          items:
            type: array
            items:
              $ref: '#/components/schemas/SubFormFieldsPerDocumentBase'
        message:
          description: 'The custom message in the email that will be sent to the signers.'
          type: string
          maxLength: 5000
        metadata:
          description: |-
            Key-value data that should be attached to the signature request. This metadata is included in all API responses and events involving the signature request. For example, use the metadata field to store a signer's order number for look up when receiving events for the signature request.

            Each request can include up to 10 metadata keys, with key names up to 40 characters long and values up to 1000 characters long.
          type: object
          maxItems: 10
          additionalProperties: {}
        signers:
          description: 'Add Signers to your Signature Request.'
          type: array
          items:
            $ref: '#/components/schemas/SubSignatureRequestEmbeddedSigner'
        signing_options:
          $ref: '#/components/schemas/SubSigningOptions'
        subject:
          description: 'The subject in the email that will be sent to the signers.'
          type: string
          maxLength: 255
        test_mode:
          description: 'Whether this is a test, the signature request will not be legally binding if set to `true`. Defaults to `false`.'
          type: boolean
          default: false
        title:
          description: 'The title you want to assign to the SignatureRequest.'
          type: string
          maxLength: 255
        use_text_tags:
          description: 'Send with a value of `true` if you wish to enable [Text Tags](https://app.hellosign.com/api/textTagsWalkthrough#TextTagIntro) parsing in your document. Defaults to disabled, or `false`.'
          type: boolean
          default: false
      type: object
    SignatureRequestCreateEmbeddedWithTemplateRequest:
      description: 'Calls SignatureRequestSend in controller'
      required:
        - client_id
        - template_ids
      properties:
        template_ids:
          description: 'Use `template_ids` to create a SignatureRequest from one or more templates, in the order in which the template will be used.'
          type: array
          items:
            type: string
        allow_decline:
          description: 'Allows signers to decline to sign a document if `true`. Defaults to `false`.'
          type: boolean
          default: false
        ccs:
          description: 'Add CC email recipients. Required when a CC role exists for the Template.'
          type: array
          items:
            $ref: '#/components/schemas/SubCC'
        client_id:
          description: 'Client id of the app you''re using to create this embedded signature request. Visit our [embedded page](https://app.hellosign.com/api/embeddedSigningWalkthrough) to learn more about this parameter.'
          type: string
        custom_fields:
          description: 'An array defining values and options for custom fields. Required when defining when a custom field exists in the Template.'
          type: array
          items:
            $ref: '#/components/schemas/SubCustomField'
        file:
          description: |-
            **file** or **file_url** is required, but not both.

            Use `file[]` to indicate the uploaded file(s) to send for signature.

            Currently we only support use of either the `file[]` parameter or `file_url[]` parameter, not both.
          type: array
          items:
            type: string
            format: binary
        file_url:
          description: |-
            **file_url** or **file** is required, but not both.

            Use `file_url[]` to have HelloSign download the file(s) to send for signature.

            Currently we only support use of either the `file[]` parameter or `file_url[]` parameter, not both.
          type: array
          items:
            type: string
        message:
          description: 'The custom message in the email that will be sent to the signers.'
          type: string
          maxLength: 5000
        metadata:
          description: |-
            Key-value data that should be attached to the signature request. This metadata is included in all API responses and events involving the signature request. For example, use the metadata field to store a signer's order number for look up when receiving events for the signature request.

            Each request can include up to 10 metadata keys, with key names up to 40 characters long and values up to 1000 characters long.
          type: object
          maxItems: 10
          additionalProperties: {}
        signers:
          description: 'Add Signers to your Templated-based Signature Request.'
          type: array
          items:
            $ref: '#/components/schemas/SubSignatureRequestEmbeddedTemplateSigner'
        signing_options:
          $ref: '#/components/schemas/SubSigningOptions'
        subject:
          description: 'The subject in the email that will be sent to the signers.'
          type: string
          maxLength: 255
        test_mode:
          description: 'Whether this is a test, the signature request will not be legally binding if set to `true`. Defaults to `false`.'
          type: boolean
          default: false
        title:
          description: 'The title you want to assign to the SignatureRequest.'
          type: string
          maxLength: 255
      type: object
    SignatureRequestRemindRequest:
      required:
        - email_address
      properties:
        email_address:
          description: 'The email address of the signer to send a reminder to.'
          type: string
          format: email
        name:
          description: 'The name of the signer to send a reminder to. Include if two or more signers share an email address.'
          type: string
      type: object
    SignatureRequestSendRequest:
      required:
        - signers
      properties:
        file:
          description: |-
            **file** or **file_url** is required, but not both.

            Use `file[]` to indicate the uploaded file(s) to send for signature.

            Currently we only support use of either the `file[]` parameter or `file_url[]` parameter, not both.
          type: array
          items:
            type: string
            format: binary
        file_url:
          description: |-
            **file_url** or **file** is required, but not both.

            Use `file_url[]` to have HelloSign download the file(s) to send for signature.

            Currently we only support use of either the `file[]` parameter or `file_url[]` parameter, not both.
          type: array
          items:
            type: string
        allow_decline:
          description: 'Allows signers to decline to sign a document if `true`. Defaults to `false`.'
          type: boolean
          default: false
        allow_reassign:
          description: |-
            Allows signers to reassign their signature requests to other signers if set to `true`. Defaults to `false`.

            **Note**: Only available for Gold plan and higher.
          type: boolean
          default: false
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/SubAttachment'
        cc_email_addresses:
          description: 'The email addresses that should be CCed.'
          type: array
          items:
            type: string
            format: email
        client_id:
          description: 'The client ID of the ApiApp you want to associate with this request.'
          type: string
        custom_fields:
          description: 'An array defining values and options for custom fields. Required when defining pre-set values in `form_fields_per_document` or [Text Tags](https://app.hellosign.com/api/textTagsWalkthrough#TextTagIntro).'
          type: array
          items:
            $ref: '#/components/schemas/SubCustomField'
        field_options:
          $ref: '#/components/schemas/SubFieldOptions'
        form_field_groups:
          description: 'Group information for fields defined in `form_fields_per_document`. String-indexed JSON array with `group_label` and `requirement` keys. `form_fields_per_document` must contain fields referencing a group defined in `form_field_groups`.'
          type: array
          items:
            $ref: '#/components/schemas/SubFormFieldGroup'
        form_field_rules:
          description: 'Conditional Logic rules for fields defined in `form_fields_per_document`.'
          type: array
          items:
            $ref: '#/components/schemas/SubFormFieldRule'
        form_fields_per_document:
          description: |-
            The fields that should appear on the document, expressed as a 2-dimensional JSON array serialized to a string. The main array represents documents, with each containing an array of form fields. One document array is required for each file provided by the `file[]` parameter. In the case of a file with no fields, an empty list must be specified.

            **NOTE**: Fields like **text**, **dropdown**, **checkbox**, **radio**, and **hyperlink** have additional required and optional parameters. Check out the list of [additional parameters](https://app.hellosign.com/api/reference#FormFieldsPerDocument) for these field types.

            * Text Field use `SubFormFieldsPerDocumentText`
            * Dropdown Field use `SubFormFieldsPerDocumentDropdown`
            * Hyperlink Field use `SubFormFieldsPerDocumentHyperlink`
            * Checkbox Field use `SubFormFieldsPerDocumentCheckbox`
            * Radio Field use `SubFormFieldsPerDocumentRadio`
            * Signature Field use `SubFormFieldsPerDocumentSignature`
            * Date Signed Field use `SubFormFieldsPerDocumentDateSigned`
            * Initials Field use `SubFormFieldsPerDocumentInitials`
            * Text Merge Field use `SubFormFieldsPerDocumentTextMerge`
            * Checkbox Merge Field use `SubFormFieldsPerDocumentCheckboxMerge`
          type: array
          items:
            type: array
            items:
              $ref: '#/components/schemas/SubFormFieldsPerDocumentBase'
        hide_text_tags:
          description: 'Send with a value of `true` if you wish to enable automatic Text Tag removal. Defaults to `false`. When using Text Tags it is preferred that you set this to `false` and hide your tags with white text or something similar because the automatic removal system can cause unwanted clipping. See the [Text Tags](https://app.hellosign.com/api/textTagsWalkthrough#TextTagIntro) walkthrough for more details.'
          type: boolean
          default: false
        is_qualified_signature:
          description: |-
            Send with a value of `true` if you wish to enable
            [Qualified Electronic Signatures](https://www.hellosign.com/features/qualified-electronic-signatures) (QES),
            which requires a face-to-face call to verify the signer's identity.<br>
            **Note**: QES is only available on the Premium API plan as an add-on purchase.
            Cannot be used in `test_mode`. Only works on requests with one signer.
          type: boolean
          default: false
        message:
          description: 'The custom message in the email that will be sent to the signers.'
          type: string
          maxLength: 5000
        metadata:
          description: |-
            Key-value data that should be attached to the signature request. This metadata is included in all API responses and events involving the signature request. For example, use the metadata field to store a signer's order number for look up when receiving events for the signature request.

            Each request can include up to 10 metadata keys, with key names up to 40 characters long and values up to 1000 characters long.
          type: object
          maxItems: 10
          additionalProperties: {}
        signers:
          description: 'Add Signers to your Signature Request.'
          type: array
          items:
            $ref: '#/components/schemas/SubSignatureRequestSigner'
        signing_options:
          $ref: '#/components/schemas/SubSigningOptions'
        signing_redirect_url:
          description: 'The URL you want signers redirected to after they successfully sign.'
          type: string
        subject:
          description: 'The subject in the email that will be sent to the signers.'
          type: string
          maxLength: 255
        test_mode:
          description: 'Whether this is a test, the signature request will not be legally binding if set to `true`. Defaults to `false`.'
          type: boolean
          default: false
        title:
          description: 'The title you want to assign to the SignatureRequest.'
          type: string
          maxLength: 255
        use_text_tags:
          description: 'Send with a value of `true` if you wish to enable [Text Tags](https://app.hellosign.com/api/textTagsWalkthrough#TextTagIntro) parsing in your document. Defaults to disabled, or `false`.'
          type: boolean
          default: false
      type: object
    SignatureRequestSendWithTemplateRequest:
      description: ''
      required:
        - signers
        - template_ids
      properties:
        template_ids:
          description: 'Use `template_ids` to create a SignatureRequest from one or more templates, in the order in which the template will be used.'
          type: array
          items:
            type: string
        allow_decline:
          description: 'Allows signers to decline to sign a document if `true`. Defaults to `false`.'
          type: boolean
          default: false
        ccs:
          description: 'Add CC email recipients. Required when a CC role exists for the Template.'
          type: array
          items:
            $ref: '#/components/schemas/SubCC'
        client_id:
          description: 'The client ID of the ApiApp you want to associate with this request.'
          type: string
        custom_fields:
          description: 'An array defining values and options for custom fields. Required when defining when a custom field exists in the Template.'
          type: array
          items:
            $ref: '#/components/schemas/SubCustomField'
        file:
          description: |-
            **file** or **file_url** is required, but not both.

            Use `file[]` to indicate the uploaded file(s) to send for signature.

            Currently we only support use of either the `file[]` parameter or `file_url[]` parameter, not both.
          type: array
          items:
            type: string
            format: binary
        file_url:
          description: |-
            **file_url** or **file** is required, but not both.

            Use `file_url[]` to have HelloSign download the file(s) to send for signature.

            Currently we only support use of either the `file[]` parameter or `file_url[]` parameter, not both.
          type: array
          items:
            type: string
        is_qualified_signature:
          description: |-
            Send with a value of `true` if you wish to enable
            [Qualified Electronic Signatures](https://www.hellosign.com/features/qualified-electronic-signatures) (QES),
            which requires a face-to-face call to verify the signer's identity.<br>
            **Note**: QES is only available on the Premium API plan as an add-on purchase.
            Cannot be used in `test_mode`. Only works on requests with one signer.
          type: boolean
          default: false
        message:
          description: 'The custom message in the email that will be sent to the signers.'
          type: string
          maxLength: 5000
        metadata:
          description: |-
            Key-value data that should be attached to the signature request. This metadata is included in all API responses and events involving the signature request. For example, use the metadata field to store a signer's order number for look up when receiving events for the signature request.

            Each request can include up to 10 metadata keys, with key names up to 40 characters long and values up to 1000 characters long.
          type: object
          maxItems: 10
          additionalProperties: {}
        signers:
          description: 'Add Signers to your Templated-based Signature Request.'
          type: array
          items:
            $ref: '#/components/schemas/SubSignatureRequestTemplateSigner'
        signing_options:
          $ref: '#/components/schemas/SubSigningOptions'
        signing_redirect_url:
          description: 'The URL you want signers redirected to after they successfully sign.'
          type: string
        subject:
          description: 'The subject in the email that will be sent to the signers.'
          type: string
          maxLength: 255
        test_mode:
          description: 'Whether this is a test, the signature request will not be legally binding if set to `true`. Defaults to `false`.'
          type: boolean
          default: false
        title:
          description: 'The title you want to assign to the SignatureRequest.'
          type: string
          maxLength: 255
      type: object
    SignatureRequestUpdateRequest:
      required:
        - signature_id
      properties:
        email_address:
          description: |-
            The new email address for the recipient.

            **NOTE**: Optional if `name` is provided.
          type: string
          format: email
        name:
          description: |-
            The new name for the recipient.

            **NOTE**: Optional if `email_address` is provided.
          type: string
        signature_id:
          description: 'The signature ID for the recipient.'
          type: string
      type: object
    SubAttachment:
      required:
        - name
        - signer_index
      properties:
        instructions:
          description: 'The instructions for uploading the attachment.'
          type: string
        name:
          description: 'The name of attachment.'
          type: string
        required:
          description: 'Determines if the attachment must be uploaded.'
          type: boolean
          default: false
        signer_index:
          description: |-
            The signer's unique number, see `signers[%i%][name]` for more details.

            **NOTE**: Only one signer can be assigned per attachment.
          type: integer
      type: object
    SubBulkSignerList:
      properties:
        custom_fields:
          description: 'An array of custom field values.'
          type: array
          items:
            $ref: '#/components/schemas/SubBulkSignerListCustomField'
        signers:
          description: 'Add Signers to your Templated-based Signature Request. Allows the requester to specify editor options when a preparing a document'
          type: array
          items:
            $ref: '#/components/schemas/SubBulkSignerListSigner'
      type: object
    SubCC:
      required:
        - role
        - email_address
      properties:
        role:
          description: 'Must match an existing CC role in chosen Template(s). Multiple CC recipients cannot share the same CC role.'
          type: string
        email_address:
          description: 'The email address of the CC recipient.'
          type: string
          format: email
      type: object
    SubCustomField:
      description: 'An array defining values and options for custom fields. Required when defining pre-set values in `form_fields_per_document` or [Text Tags](https://app.hellosign.com/api/textTagsWalkthrough#TextTagIntro).'
      required:
        - name
      properties:
        editor:
          description: |-
            The RoleName allowed to edit the custom field (optional, but required if `required = true`).

            **Note**: Editable `custom_fields` are only supported for single signer requests or the first signer of ordered signature requests. If more than one signer is assigned to the unordered signature request, any editor value is ignored and the field will not be editable.
          type: string
        name:
          description: 'The name, or "Field Label," of the custom field (the field''s API ID can be used here as well).'
          type: string
        required:
          description: 'A boolean describing if this field is required'
          type: boolean
          default: false
        value:
          description: 'The value of the custom field'
          type: string
      type: object
    SubEditorOptions:
      description: 'This allows the requester to specify editor options when a preparing a document'
      properties:
        allow_edit_signers:
          description: 'Allows requesters to edit the list of signers'
          type: boolean
          default: false
        allow_edit_documents:
          description: 'Allows requesters to edit documents, including delete and add'
          type: boolean
          default: false
      type: object
    SubFieldOptions:
      description: 'This allows the requester to specify field options for a signature request.'
      required:
        - date_format
      properties:
        date_format:
          description: |-
            Allows requester to specify the date format (see list of allowed [formats](https://app.hellosign.com/api/reference#DateFormats))

            **Note**: Only available for Premium and higher.
          type: string
          enum:
            - 'MM / DD / YYYY'
            - 'MM - DD - YYYY'
            - 'DD / MM / YYYY'
            - 'DD - MM - YYYY'
            - 'YYYY / MM / DD'
            - 'YYYY - MM - DD'
          x-enum-varnames:
            - MMDDYYYY
            - MM_DD_YYYY
            - DDMMYYYY
            - DD_MM_YYYY
            - YYYYMMDD
            - YYYY_MM_DD
      type: object
    SubFormFieldGroup:
      required:
        - group_id
        - group_label
        - requirement
      properties:
        group_id:
          description: 'ID of group. Use this to reference a specific group from the `group` value in `form_fields_per_document`.'
          type: string
        group_label:
          description: 'Name of the group'
          type: string
        requirement:
          description: |-
            Examples: `require_0-1` `require_1` `require_1-ormore`

            - Check out the list of [acceptable `requirement` checkbox type values](https://app.hellosign.com/api/reference#CheckboxFieldGrouping).
            - Check out the list of [acceptable `requirement` radio type fields](https://app.hellosign.com/api/reference#RadioFieldGrouping).
            - Radio groups require **at least** two fields per group.
          type: string
      type: object
    SubFormFieldRule:
      required:
        - id
        - trigger_operator
        - triggers
        - actions
      properties:
        id:
          description: 'Must be unique across all defined rules.'
          type: string
        trigger_operator:
          description: 'Currently only `AND` is supported. Support for `OR` is being worked on.'
          type: string
          default: AND
        triggers:
          description: 'An array of trigger definitions, the "if this" part of "**if this**, then that". Currently only a single trigger per rule is allowed.'
          type: array
          items:
            $ref: '#/components/schemas/SubFormFieldRuleTrigger'
          maxItems: 1
          minItems: 1
        actions:
          description: 'An array of action definitions, the "then that" part of "if this, **then that**". Any number of actions may be attached to a single rule.'
          type: array
          items:
            $ref: '#/components/schemas/SubFormFieldRuleAction'
          minItems: 1
      type: object
    SubFormFieldRuleAction:
      required:
        - hidden
        - type
      properties:
        field_id:
          description: |-
            **field_id** or **group_id** is required, but not both.

            Must reference the `api_id` of an existing field defined within `form_fields_per_document`.

            Cannot use with `group_id`. Trigger and action fields must belong to the same signer.
          type: string
        group_id:
          description: |-
            **group_id** or **field_id** is required, but not both.

            Must reference the ID of an existing group defined within `form_field_groups`.

            Cannot use with `field_id`. Trigger and action fields and groups must belong to the same signer.
          type: string
        hidden:
          description: '`true` to hide the target field when rule is satisfied, otherwise `false`.'
          type: boolean
        type:
          type: string
          enum:
            - change-field-visibility
            - change-group-visibility
      type: object
    SubFormFieldRuleTrigger:
      required:
        - id
        - operator
      properties:
        id:
          description: 'Must reference the `api_id` of an existing field defined within `form_fields_per_document`. Trigger and action fields and groups must belong to the same signer.'
          type: string
        operator:
          description: |-
            Different field types allow different `operator` values:
            - Field type of **text**:
              - **is**: exact match
              - **not**: not exact match
              - **match**: regular expression, without /. Example:
                - OK `[a-zA-Z0-9]`
                - Not OK `/[a-zA-Z0-9]/`
            - Field type of **dropdown**:
              - **is**: exact match, single value
              - **not**: not exact match, single value
              - **any**: exact match, array of values.
              - **none**: not exact match, array of values.
            - Field type of **checkbox**:
              - **is**: exact match, single value
              - **not**: not exact match, single value
            - Field type of **radio**:
              - **is**: exact match, single value
              - **not**: not exact match, single value
          type: string
          enum:
            - any
            - is
            - match
            - none
            - not
        value:
          description: |-
            **value** or **values** is required, but not both.

            The value to match against **operator**.

            - When **operator** is one of the following, **value** must be `String`:
              - `is`
              - `not`
              - `match`

            Otherwise,
            - **checkbox**: When **type** of trigger is **checkbox**, **value** must be `0` or `1`
            - **radio**: When **type** of trigger is **radio**, **value** must be `1`
          type: string
        values:
          description: |-
            **values** or **value** is required, but not both.

            The values to match against **operator** when it is one of the following:

            - `any`
            - `none`
          type: array
          items:
            type: string
      type: object
    SubFormFieldsPerDocumentBase:
      description: |-
        The fields that should appear on the document, expressed as a 2-dimensional JSON array serialized to a string. The main array represents documents, with each containing an array of form fields. One document array is required for each file provided by the `file[]` parameter. In the case of a file with no fields, an empty list must be specified.

        **NOTE**: Fields like **text**, **dropdown**, **checkbox**, **radio**, and **hyperlink** have additional required and optional parameters. Check out the list of [additional parameters](https://app.hellosign.com/api/reference#FormFieldsPerDocument) for these field types.

        * Text Field use `SubFormFieldsPerDocumentText`
        * Dropdown Field use `SubFormFieldsPerDocumentDropdown`
        * Hyperlink Field use `SubFormFieldsPerDocumentHyperlink`
        * Checkbox Field use `SubFormFieldsPerDocumentCheckbox`
        * Radio Field use `SubFormFieldsPerDocumentRadio`
        * Signature Field use `SubFormFieldsPerDocumentSignature`
        * Date Signed Field use `SubFormFieldsPerDocumentDateSigned`
        * Initials Field use `SubFormFieldsPerDocumentInitials`
        * Text Merge Field use `SubFormFieldsPerDocumentTextMerge`
        * Checkbox Merge Field use `SubFormFieldsPerDocumentCheckboxMerge`
      required:
        - type
        - signer
        - width
        - height
        - x
        - 'y'
      properties:
        api_id:
          description: 'An identifier for the field that is unique across all documents in the request.'
          type: string
        height:
          description: 'Size of the field in pixels.'
          type: integer
        name:
          description: 'Display name for the field.'
          type: string
        page:
          description: |-
            Page in the document where the field should be placed (requires documents be PDF files).

            - When the page number parameter is supplied, the API will use the new coordinate system.
            - Check out the differences between both [coordinate systems](https://faq.hellosign.com/hc/en-us/articles/217115577) and how to use them.
          type: integer
        required:
          description: 'Whether this field is required.'
          type: boolean
        signer:
          description: 'Signer index identified by the offset `%i%` in the `signers[%i%]` parameter, indicating which signer should fill out the field. If your type is `text-merge` you can set this to `sender`, so the field is non-editable by any signer.'
          type: string
        type:
          type: string
        width:
          description: 'Size of the field in pixels.'
          type: integer
        x:
          description: 'Location coordinates of the field in pixels.'
          type: integer
        'y':
          description: 'Location coordinates of the field in pixels.'
          type: integer
      type: object
      discriminator:
        propertyName: type
        mapping:
          text: '#/components/schemas/SubFormFieldsPerDocumentText'
          dropdown: '#/components/schemas/SubFormFieldsPerDocumentDropdown'
          hyperlink: '#/components/schemas/SubFormFieldsPerDocumentHyperlink'
          checkbox: '#/components/schemas/SubFormFieldsPerDocumentCheckbox'
          radio: '#/components/schemas/SubFormFieldsPerDocumentRadio'
          signature: '#/components/schemas/SubFormFieldsPerDocumentSignature'
          date_signed: '#/components/schemas/SubFormFieldsPerDocumentDateSigned'
          initials: '#/components/schemas/SubFormFieldsPerDocumentInitials'
          text-merge: '#/components/schemas/SubFormFieldsPerDocumentTextMerge'
          checkbox-merge: '#/components/schemas/SubFormFieldsPerDocumentCheckboxMerge'
      x-internal: true
      x-base-class: true
    SubMergeField:
      description: 'The merge fields that can be placed on the template''s document(s) by the user editing the template. These are typically fields that can be pre-populated by your application when using the resulting template to send a signature request. Each merge field object must have two parameters: name and type. Names must be unique and type can only be "text" or "checkbox". Existing fields for removed merge fields will not be removed from the document, but will default to empty if no custom field is supplied with the signature request. To remove all merge fields, pass in an empty json array. For use in a POST request.'
      properties:
        name:
          type: string
        type:
          type: string
          enum:
            - text
            - checkbox
      type: object
    SubOAuth:
      properties:
        callback_url:
          description: 'The callback URL to be used for OAuth flows. (Required if `oauth[scopes]` is provided)'
          type: string
        scopes:
          description: 'A list of OAuth scopes to be granted to the app. (Required if `oauth[callback_url]` is provided).'
          type: array
          items:
            type: string
            enum:
              - access_docs
              - access_reusable_forms
              - manage_docs
              - request_signature
              - send_docs
              - basic_account_info
              - signatures
              - account_access
              - signature_request_access
              - template_access
              - team_access
              - api_app_access
              - universal_signature_request_access
              - ''
      type: object
    SubOptions:
      properties:
        can_insert_everywhere:
          description: 'Determines if signers can use "Insert Everywhere" when signing a document.'
          type: boolean
          default: false
      type: object
    SubTemplateRole:
      properties:
        name:
          description: 'The role name of the signer that will be displayed when the template is used to create a signature request.'
          type: string
        order:
          description: 'The order in which this signer role is required to sign.'
          type: integer
      type: object
    SubSigningOptions:
      description: |-
        This allows the requester to specify the types allowed for creating a signature.

        **Note**: If `signing_options` are not defined in the request, the allowed types will default to those specified in the account settings.
      required:
        - default_type
      properties:
        default_type:
          description: 'The default type shown (limited to the listed types)'
          type: string
          enum:
            - draw
            - phone
            - type
            - upload
        draw:
          description: 'Allows drawing the signature'
          type: boolean
          default: false
        phone:
          description: 'Allows using a smartphone to email the signature'
          type: boolean
          default: false
        type:
          description: 'Allows typing the signature'
          type: boolean
          default: false
        upload:
          description: 'Allows uploading the signature'
          type: boolean
          default: false
      type: object
    SubWhiteLabelingOptions:
      description: |-
        An array of elements and values serialized to a string, to be used to customize the app's signer page. (Only applies to some API plans)

        Take a look at our [white labeling guide](https://app.hellosign.com/api/reference#WhiteLabeling) to learn more.
      properties:
        header_background_color:
          type: string
          default: '#1A1A1A'
        legal_version:
          type: string
          default: terms1
          enum:
            - terms1
            - terms2
        link_color:
          type: string
          default: '#00B3E6'
        page_background_color:
          type: string
          default: '#F7F8F9'
        primary_button_color:
          type: string
          default: '#00B3E6'
        primary_button_color_hover:
          type: string
          default: '#00B3E6'
        primary_button_text_color:
          type: string
          default: '#FFFFFF'
        primary_button_text_color_hover:
          type: string
          default: '#FFFFFF'
        secondary_button_color:
          type: string
          default: '#FFFFFF'
        secondary_button_color_hover:
          type: string
          default: '#FFFFFF'
        secondary_button_text_color:
          type: string
          default: '#00B3E6'
        secondary_button_text_color_hover:
          type: string
          default: '#00B3E6'
        text_color1:
          type: string
          default: '#808080'
        text_color2:
          type: string
          default: '#FFFFFF'
      type: object
    TeamAddMemberRequest:
      properties:
        account_id:
          description: 'The id or email address of the Account of the user to invite to your Team. The account id prevails if both are provided.'
          type: string
        email_address:
          description: 'The id or email address of the Account of the user to invite to your Team. The account id prevails if both are provided.'
          type: string
          format: email
      type: object
    TeamCreateRequest:
      properties:
        name:
          description: 'The name of your Team.'
          type: string
          default: 'Untitled Team'
      type: object
    TeamRemoveMemberRequest:
      properties:
        account_id:
          description: 'The ID or email address of the Account to remove from your Team. The account ID prevails if both are provided.'
          type: string
        email_address:
          description: 'The ID or email address of the Account to remove from your Team. The account ID prevails if both are provided.'
          type: string
          format: email
        new_owner_email_address:
          description: |-
            The email address of an Account on this Team to receive all documents, templates, and API apps (if applicable) from the removed Account. If not provided, and on an Enterprise plan, this data will remain with the removed Account.

            **Note**: Only available for Enterprise plans.
          type: string
          format: email
      type: object
    TeamUpdateRequest:
      properties:
        name:
          description: 'The name of your Team.'
          type: string
      type: object
    TemplateAddUserRequest:
      properties:
        account_id:
          description: 'The id or email address of the Account to give access to the Template. The account id prevails if both are provided.'
          type: string
        email_address:
          description: 'The id or email address of the Account to give access to the Template. The account id prevails if both are provided.'
          type: string
          format: email
      type: object
    TemplateCreateEmbeddedDraftRequest:
      required:
        - client_id
      properties:
        file:
          description: |-
            **file** or **file_url** is required, but not both.

            Use `file[]` to indicate the uploaded file(s) to use for the template

            Currently we only support use of either the `file[]` parameter or `file_url[]` parameter, not both.
          type: array
          items:
            type: string
            format: binary
        file_url:
          description: |-
            **file_url** or **file** is required, but not both.

            Use `file_url[]` to have HelloSign download the file(s) to use for the template.

            Currently we only support use of either the `file[]` parameter or `file_url[]` parameter, not both.
          type: array
          items:
            type: string
        allow_ccs:
          description: 'This allows the requester to specify whether the user is allowed to provide email addresses to CC when creating a template.'
          type: boolean
          default: false
        allow_reassign:
          description: |-
            Allows signers to reassign their signature requests to other signers if set to `true`. Defaults to `false`.

            **Note**: Only available for Gold plan and higher.
          type: boolean
          default: false
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/SubAttachment'
        cc_roles:
          description: 'The CC roles that must be assigned when using the template to send a signature request'
          type: array
          items:
            type: string
        client_id:
          description: 'Client id of the app you''re using to create this draft.'
          type: string
        editor_options:
          $ref: '#/components/schemas/SubEditorOptions'
        field_options:
          $ref: '#/components/schemas/SubFieldOptions'
        form_field_groups:
          description: 'Group information for fields defined in `form_fields_per_document`. String-indexed JSON array with `group_label` and `requirement` keys. `form_fields_per_document` must contain fields referencing a group defined in `form_field_groups`.'
          type: array
          items:
            $ref: '#/components/schemas/SubFormFieldGroup'
        form_field_rules:
          description: 'Conditional Logic rules for fields defined in `form_fields_per_document`.'
          type: array
          items:
            $ref: '#/components/schemas/SubFormFieldRule'
        form_fields_per_document:
          description: |-
            The fields that should appear on the document, expressed as a 2-dimensional JSON array serialized to a string. The main array represents documents, with each containing an array of form fields. One document array is required for each file provided by the `file[]` parameter. In the case of a file with no fields, an empty list must be specified.

            **NOTE**: Fields like **text**, **dropdown**, **checkbox**, **radio**, and **hyperlink** have additional required and optional parameters. Check out the list of [additional parameters](https://app.hellosign.com/api/reference#FormFieldsPerDocument) for these field types.

            * Text Field use `SubFormFieldsPerDocumentText`
            * Dropdown Field use `SubFormFieldsPerDocumentDropdown`
            * Hyperlink Field use `SubFormFieldsPerDocumentHyperlink`
            * Checkbox Field use `SubFormFieldsPerDocumentCheckbox`
            * Radio Field use `SubFormFieldsPerDocumentRadio`
            * Signature Field use `SubFormFieldsPerDocumentSignature`
            * Date Signed Field use `SubFormFieldsPerDocumentDateSigned`
            * Initials Field use `SubFormFieldsPerDocumentInitials`
            * Text Merge Field use `SubFormFieldsPerDocumentTextMerge`
            * Checkbox Merge Field use `SubFormFieldsPerDocumentCheckboxMerge`
          type: array
          items:
            type: array
            items:
              $ref: '#/components/schemas/SubFormFieldsPerDocumentBase'
        merge_fields:
          type: array
          items:
            $ref: '#/components/schemas/SubMergeField'
        message:
          description: 'The default template email message.'
          type: string
          maxLength: 5000
        metadata:
          description: |-
            Key-value data that should be attached to the signature request. This metadata is included in all API responses and events involving the signature request. For example, use the metadata field to store a signer's order number for look up when receiving events for the signature request.

            Each request can include up to 10 metadata keys, with key names up to 40 characters long and values up to 1000 characters long.
          type: object
          maxItems: 10
          additionalProperties: {}
        show_preview:
          description: |-
            This allows the requester to enable the editor/preview experience.

            - `show_preview=true`: Allows requesters to enable the editor/preview experience.
            - `show_preview=false`: Allows requesters to disable the editor/preview experience.
          type: boolean
          default: false
        signer_roles:
          type: array
          items:
            $ref: '#/components/schemas/SubTemplateRole'
        skip_me_now:
          description: 'Disables the "Me (Now)" option for the person preparing the document. Does not work with type `send_document`. Defaults to `false`.'
          type: boolean
          default: false
        subject:
          description: 'The template title (alias).'
          type: string
          maxLength: 200
        test_mode:
          description: 'Whether this is a test, the signature request created from this draft will not be legally binding if set to `true`. Defaults to `false`.'
          type: boolean
          default: false
        title:
          description: 'The title you want to assign to the SignatureRequest.'
          type: string
        use_preexisting_fields:
          description: 'Enable the detection of predefined PDF fields by setting the `use_preexisting_fields` to `true` (defaults to disabled, or `false`).'
          type: boolean
          default: false
      type: object
    TemplateRemoveUserRequest:
      properties:
        account_id:
          description: 'The id or email address of the Account to remove access to the Template. The account id prevails if both are provided.'
          type: string
        email_address:
          description: 'The id or email address of the Account to remove access to the Template. The account id prevails if both are provided.'
          type: string
          format: email
      type: object
    TemplateUpdateFilesRequest:
      properties:
        client_id:
          description: 'Client ID of the app you''re using to create this template.'
          type: string
        file:
          description: |-
            **file** or **file_url** is required, but not both.

            Use `file[]` to indicate the uploaded file(s) to use for the template

            Currently we only support use of either the `file[]` parameter or `file_url[]` parameter, not both.
          type: array
          items:
            type: string
            format: binary
        file_url:
          description: |-
            **file_url** or **file** is required, but not both.

            Use `file_url[]` to have HelloSign download the file(s) to use for
            the template.

            Currently we only support use of either the `file[]` parameter or `file_url[]` parameter, not both.
          type: array
          items:
            type: string
        message:
          description: 'The new default template email message.'
          type: string
          maxLength: 5000
        subject:
          description: 'The new default template email subject.'
          type: string
          maxLength: 100
        test_mode:
          description: 'Whether this is a test, the signature request created from this draft will not be legally binding if set to `true`. Defaults to `false`.'
          type: boolean
          default: false
      type: object
    UnclaimedDraftCreateRequest:
      properties:
        file:
          description: |-
            **file** or **file_url** is required, but not both.

            Use `file[]` to indicate the uploaded file(s) to send for signature.

            Currently we only support use of either the `file[]` parameter or `file_url[]` parameter, not both.
          type: array
          items:
            type: string
            format: binary
        file_url:
          description: |-
            **file_url** or **file** is required, but not both.

            Use `file_url[]` to have HelloSign download the file(s) to send for signature.

            Currently we only support use of either the `file[]` parameter or `file_url[]` parameter, not both.
          type: array
          items:
            type: string
        allow_decline:
          description: 'Allows signers to decline to sign a document if `true`. Defaults to `false`.'
          type: boolean
          default: false
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/SubAttachment'
        cc_email_addresses:
          description: 'The email addresses that should be CCed.'
          type: array
          items:
            type: string
            format: email
        custom_fields:
          description: 'An array defining values and options for custom fields. Required when defining pre-set values in `form_fields_per_document` or [Text Tags](https://app.hellosign.com/api/textTagsWalkthrough#TextTagIntro).'
          type: array
          items:
            $ref: '#/components/schemas/SubCustomField'
        field_options:
          $ref: '#/components/schemas/SubFieldOptions'
        form_field_groups:
          description: 'Group information for fields defined in `form_fields_per_document`. String-indexed JSON array with `group_label` and `requirement` keys. `form_fields_per_document` must contain fields referencing a group defined in `form_field_groups`.'
          type: array
          items:
            $ref: '#/components/schemas/SubFormFieldGroup'
        form_field_rules:
          description: 'Conditional Logic rules for fields defined in `form_fields_per_document`.'
          type: array
          items:
            $ref: '#/components/schemas/SubFormFieldRule'
        form_fields_per_document:
          description: |-
            The fields that should appear on the document, expressed as a 2-dimensional JSON array serialized to a string. The main array represents documents, with each containing an array of form fields. One document array is required for each file provided by the `file[]` parameter. In the case of a file with no fields, an empty list must be specified.

            **NOTE**: Fields like **text**, **dropdown**, **checkbox**, **radio**, and **hyperlink** have additional required and optional parameters. Check out the list of [additional parameters](https://app.hellosign.com/api/reference#FormFieldsPerDocument) for these field types.

            * Text Field use `SubFormFieldsPerDocumentText`
            * Dropdown Field use `SubFormFieldsPerDocumentDropdown`
            * Hyperlink Field use `SubFormFieldsPerDocumentHyperlink`
            * Checkbox Field use `SubFormFieldsPerDocumentCheckbox`
            * Radio Field use `SubFormFieldsPerDocumentRadio`
            * Signature Field use `SubFormFieldsPerDocumentSignature`
            * Date Signed Field use `SubFormFieldsPerDocumentDateSigned`
            * Initials Field use `SubFormFieldsPerDocumentInitials`
            * Text Merge Field use `SubFormFieldsPerDocumentTextMerge`
            * Checkbox Merge Field use `SubFormFieldsPerDocumentCheckboxMerge`
          type: array
          items:
            type: array
            items:
              $ref: '#/components/schemas/SubFormFieldsPerDocumentBase'
        hide_text_tags:
          description: 'Send with a value of `true` if you wish to enable automatic Text Tag removal. Defaults to `false`. When using Text Tags it is preferred that you set this to `false` and hide your tags with white text or something similar because the automatic removal system can cause unwanted clipping. See the [Text Tags](https://app.hellosign.com/api/textTagsWalkthrough#TextTagIntro) walkthrough for more details.'
          type: boolean
          default: false
        message:
          description: 'The custom message in the email that will be sent to the signers.'
          type: string
          maxLength: 5000
        metadata:
          description: |-
            Key-value data that should be attached to the signature request. This metadata is included in all API responses and events involving the signature request. For example, use the metadata field to store a signer's order number for look up when receiving events for the signature request.

            Each request can include up to 10 metadata keys, with key names up to 40 characters long and values up to 1000 characters long.
          type: object
          maxItems: 10
          additionalProperties: {}
        signers:
          description: 'Add Signers to your Unclaimed Draft Signature Request.'
          type: array
          items:
            $ref: '#/components/schemas/SubUnclaimedDraftSigner'
        signing_options:
          $ref: '#/components/schemas/SubSigningOptions'
        signing_redirect_url:
          description: 'The URL you want signers redirected to after they successfully sign.'
          type: string
        subject:
          description: 'The subject in the email that will be sent to the signers.'
          type: string
          maxLength: 200
        test_mode:
          description: 'Whether this is a test, the signature request created from this draft will not be legally binding if set to `true`. Defaults to `false`.'
          type: boolean
          default: false
        type:
          description: 'The type of unclaimed draft to create. Use `send_document` to create a claimable file, and `request_signature` for a claimable signature request. If the type is `request_signature` then signers name and email_address are not optional.'
          type: string
          enum:
            - send_document
            - request_signature
        use_preexisting_fields:
          description: 'Set `use_text_tags` to `true` to enable [Text Tags](https://app.hellosign.com/api/textTagsWalkthrough#TextTagIntro) parsing in your document (defaults to disabled, or `false`). Alternatively, if your PDF contains pre-defined fields, enable the detection of these fields by setting the `use_preexisting_fields` to `true` (defaults to disabled, or `false`). Currently we only support use of either `use_text_tags` or `use_preexisting_fields` parameter, not both.'
          type: boolean
          default: false
        use_text_tags:
          description: 'Set `use_text_tags` to `true` to enable [Text Tags](https://app.hellosign.com/api/textTagsWalkthrough#TextTagIntro) parsing in your document (defaults to disabled, or `false`). Alternatively, if your PDF contains pre-defined fields, enable the detection of these fields by setting the `use_preexisting_fields` to `true` (defaults to disabled, or `false`). Currently we only support use of either `use_text_tags` or `use_preexisting_fields` parameter, not both.'
          type: boolean
          default: false
      type: object
    UnclaimedDraftCreateEmbeddedRequest:
      description: ''
      required:
        - client_id
        - requester_email_address
      properties:
        file:
          description: |-
            **file** or **file_url** is required, but not both.

            Use `file[]` to indicate the uploaded file(s) to send for signature.

            Currently we only support use of either the `file[]` parameter or `file_url[]` parameter, not both.
          type: array
          items:
            type: string
            format: binary
        file_url:
          description: |-
            **file_url** or **file** is required, but not both.

            Use `file_url[]` to have HelloSign download the file(s) to send for signature.

            Currently we only support use of either the `file[]` parameter or `file_url[]` parameter, not both.
          type: array
          items:
            type: string
        allow_ccs:
          description: 'This allows the requester to specify whether the user is allowed to provide email addresses to CC when claiming the draft.'
          type: boolean
          default: false
        allow_decline:
          description: 'Allows signers to decline to sign a document if `true`. Defaults to `false`.'
          type: boolean
          default: false
        allow_reassign:
          description: |-
            Allows signers to reassign their signature requests to other signers if set to `true`. Defaults to `false`.

            **Note**: Only available for Gold plan and higher.
          type: boolean
          default: false
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/SubAttachment'
        cc_email_addresses:
          description: 'The email addresses that should be CCed.'
          type: array
          items:
            type: string
            format: email
        client_id:
          description: 'Client id of the app you''re using to create this draft. Visit our [embedded page](https://app.hellosign.com/api/embeddedSigningWalkthrough) to learn more about this parameter.'
          type: string
        custom_fields:
          description: 'An array defining values and options for custom fields. Required when defining pre-set values in `form_fields_per_document` or [Text Tags](https://app.hellosign.com/api/textTagsWalkthrough#TextTagIntro).'
          type: array
          items:
            $ref: '#/components/schemas/SubCustomField'
        editor_options:
          $ref: '#/components/schemas/SubEditorOptions'
        field_options:
          $ref: '#/components/schemas/SubFieldOptions'
        form_field_groups:
          description: 'Group information for fields defined in `form_fields_per_document`. String-indexed JSON array with `group_label` and `requirement` keys. `form_fields_per_document` must contain fields referencing a group defined in `form_field_groups`.'
          type: array
          items:
            $ref: '#/components/schemas/SubFormFieldGroup'
        form_field_rules:
          description: 'Conditional Logic rules for fields defined in `form_fields_per_document`.'
          type: array
          items:
            $ref: '#/components/schemas/SubFormFieldRule'
        form_fields_per_document:
          description: |-
            The fields that should appear on the document, expressed as a 2-dimensional JSON array serialized to a string. The main array represents documents, with each containing an array of form fields. One document array is required for each file provided by the `file[]` parameter. In the case of a file with no fields, an empty list must be specified.

            **NOTE**: Fields like **text**, **dropdown**, **checkbox**, **radio**, and **hyperlink** have additional required and optional parameters. Check out the list of [additional parameters](https://app.hellosign.com/api/reference#FormFieldsPerDocument) for these field types.

            * Text Field use `SubFormFieldsPerDocumentText`
            * Dropdown Field use `SubFormFieldsPerDocumentDropdown`
            * Hyperlink Field use `SubFormFieldsPerDocumentHyperlink`
            * Checkbox Field use `SubFormFieldsPerDocumentCheckbox`
            * Radio Field use `SubFormFieldsPerDocumentRadio`
            * Signature Field use `SubFormFieldsPerDocumentSignature`
            * Date Signed Field use `SubFormFieldsPerDocumentDateSigned`
            * Initials Field use `SubFormFieldsPerDocumentInitials`
            * Text Merge Field use `SubFormFieldsPerDocumentTextMerge`
            * Checkbox Merge Field use `SubFormFieldsPerDocumentCheckboxMerge`
          type: array
          items:
            type: array
            items:
              $ref: '#/components/schemas/SubFormFieldsPerDocumentBase'
        hide_text_tags:
          description: 'Send with a value of `true` if you wish to enable automatic Text Tag removal. Defaults to `false`. When using Text Tags it is preferred that you set this to `false` and hide your tags with white text or something similar because the automatic removal system can cause unwanted clipping. See the [Text Tags](https://app.hellosign.com/api/textTagsWalkthrough#TextTagIntro) walkthrough for more details.'
          type: boolean
          default: false
        hold_request:
          description: 'The request from this draft will not automatically send to signers post-claim if set to 1. Requester must [release](https://app.hellosign.com/api/reference#release_on-hold_signature_request) the request from hold when ready to send. Defaults to `false`.'
          type: boolean
          default: false
        is_for_embedded_signing:
          description: 'The request created from this draft will also be signable in embedded mode if set to `true`. Defaults to `false`.'
          type: boolean
          default: false
        message:
          description: 'The custom message in the email that will be sent to the signers.'
          type: string
          maxLength: 5000
        metadata:
          description: |-
            Key-value data that should be attached to the signature request. This metadata is included in all API responses and events involving the signature request. For example, use the metadata field to store a signer's order number for look up when receiving events for the signature request.

            Each request can include up to 10 metadata keys, with key names up to 40 characters long and values up to 1000 characters long.
          type: object
          maxItems: 10
          additionalProperties: {}
        requester_email_address:
          description: 'The email address of the user that should be designated as the requester of this draft, if the draft type is `request_signature`.'
          type: string
          format: email
        show_preview:
          description: |-
            This allows the requester to enable the editor/preview experience.

            - `show_preview=true`: Allows requesters to enable the editor/preview experience.
            - `show_preview=false`: Allows requesters to disable the editor/preview experience.
          type: boolean
        signers:
          description: 'Add Signers to your Unclaimed Draft Signature Request.'
          type: array
          items:
            $ref: '#/components/schemas/SubUnclaimedDraftEmbeddedSigner'
        signing_options:
          $ref: '#/components/schemas/SubSigningOptions'
        signing_redirect_url:
          description: 'The URL you want signers redirected to after they successfully sign.'
          type: string
        skip_me_now:
          description: 'Disables the "Me (Now)" option for the person preparing the document. Does not work with type `send_document`. Defaults to `false`.'
          type: boolean
          default: false
        subject:
          description: 'The subject in the email that will be sent to the signers.'
          type: string
          maxLength: 200
        test_mode:
          description: 'Whether this is a test, the signature request created from this draft will not be legally binding if set to `true`. Defaults to `false`.'
          type: boolean
          default: false
        type:
          description: 'The type of the draft. By default this is `request_signature`, but you can set it to `send_document` if you want to self sign a document and download it.'
          type: string
          default: request_signature
          enum:
            - send_document
            - request_signature
        use_preexisting_fields:
          description: 'Set `use_text_tags` to `true` to enable [Text Tags](https://app.hellosign.com/api/textTagsWalkthrough#TextTagIntro) parsing in your document (defaults to disabled, or `false`). Alternatively, if your PDF contains pre-defined fields, enable the detection of these fields by setting the `use_preexisting_fields` to `true` (defaults to disabled, or `false`). Currently we only support use of either `use_text_tags` or `use_preexisting_fields` parameter, not both.'
          type: boolean
          default: false
        use_text_tags:
          description: 'Set `use_text_tags` to `true` to enable [Text Tags](https://app.hellosign.com/api/textTagsWalkthrough#TextTagIntro) parsing in your document (defaults to disabled, or `false`). Alternatively, if your PDF contains pre-defined fields, enable the detection of these fields by setting the `use_preexisting_fields` to `true` (defaults to disabled, or `false`). Currently we only support use of either `use_text_tags` or `use_preexisting_fields` parameter, not both.'
          type: boolean
          default: false
      type: object
    UnclaimedDraftCreateEmbeddedWithTemplateRequest:
      required:
        - client_id
        - requester_email_address
        - template_ids
      properties:
        allow_decline:
          description: 'Allows signers to decline to sign a document if `true`. Defaults to `false`.'
          type: boolean
          default: false
        allow_reassign:
          description: |-
            Allows signers to reassign their signature requests to other signers if set to `true`. Defaults to `false`.

            **Note**: Only available for Gold plan and higher.
          type: boolean
          default: false
        ccs:
          description: 'Add CC email recipients. Required when a CC role exists for the Template.'
          type: array
          items:
            $ref: '#/components/schemas/SubCC'
        client_id:
          description: 'Client id of the app you''re using to create this draft. Visit our [embedded page](https://app.hellosign.com/api/embeddedSigningWalkthrough) to learn more about this parameter.'
          type: string
        custom_fields:
          description: 'An array defining values and options for custom fields. Required when defining when a custom field exists in the Template.'
          type: array
          items:
            $ref: '#/components/schemas/SubCustomField'
        editor_options:
          $ref: '#/components/schemas/SubEditorOptions'
        field_options:
          $ref: '#/components/schemas/SubFieldOptions'
        file:
          description: |-
            **file** or **file_url** is required, but not both.

            Append additional files to the signature request. HelloSign will parse the files for [text tags](https://app.hellosign.com/api/textTagsWalkthrough). Text tags for signers not on the template(s) will be ignored.

            Use `file[]` to pass the uploaded file(s).

            Currently we only support use of either the `file[]` parameter or `file_url[]` parameter, not both.
          type: array
          items:
            type: string
            format: binary
        file_url:
          description: |-
            **file** or **file_url** is required, but not both.

            Append additional files to the signature request. HelloSign will parse the files for [text tags](https://app.hellosign.com/api/textTagsWalkthrough). Text tags for signers not on the template(s) will be ignored.

            Use `file_url[]` to have HelloSign download the file(s).

            Currently we only support use of either the `file[]` parameter or `file_url[]` parameter, not both.
          type: array
          items:
            type: string
        hold_request:
          description: 'The request from this draft will not automatically send to signers post-claim if set to 1. Requester must [release](https://app.hellosign.com/api/reference#release_on-hold_signature_request) the request from hold when ready to send. Defaults to `false`.'
          type: boolean
          default: false
        is_for_embedded_signing:
          description: 'The request created from this draft will also be signable in embedded mode if set to `true`. Defaults to `false`.'
          type: boolean
          default: false
        message:
          description: 'The custom message in the email that will be sent to the signers.'
          type: string
          maxLength: 5000
        metadata:
          description: |-
            Key-value data that should be attached to the signature request. This metadata is included in all API responses and events involving the signature request. For example, use the metadata field to store a signer's order number for look up when receiving events for the signature request.

            Each request can include up to 10 metadata keys, with key names up to 40 characters long and values up to 1000 characters long.
          type: object
          maxItems: 10
          additionalProperties: {}
        preview_only:
          description: |-
            This allows the requester to enable the preview experience experience.

            - `preview_only=true`: Allows requesters to enable the preview only experience.
            - `preview_only=false`: Allows requesters to disable the preview only experience.

            **Note**: This parameter overwrites `show_preview=1` (if set).
          type: boolean
          default: false
        requester_email_address:
          description: 'The email address of the user that should be designated as the requester of this draft, if the draft type is `request_signature`.'
          type: string
          format: email
        requesting_redirect_url:
          description: 'The URL you want signers redirected to after they successfully request a signature.'
          type: string
        show_preview:
          description: |-
            This allows the requester to enable the editor/preview experience.

            - `show_preview=true`: Allows requesters to enable the editor/preview experience.
            - `show_preview=false`: Allows requesters to disable the editor/preview experience.
          type: boolean
          default: false
        signers:
          description: 'Add Signers to your Templated-based Signature Request.'
          type: array
          items:
            $ref: '#/components/schemas/SubUnclaimedDraftEmbeddedTemplateSigner'
        signing_options:
          $ref: '#/components/schemas/SubSigningOptions'
        signing_redirect_url:
          description: 'The URL you want signers redirected to after they successfully sign.'
          type: string
        skip_me_now:
          description: 'Disables the "Me (Now)" option for the person preparing the document. Does not work with type `send_document`. Defaults to `false`.'
          type: boolean
          default: false
        subject:
          description: 'The subject in the email that will be sent to the signers.'
          type: string
          maxLength: 255
        template_ids:
          description: 'Use `template_ids` to create a SignatureRequest from one or more templates, in the order in which the templates will be used.'
          type: array
          items:
            type: string
        test_mode:
          description: 'Whether this is a test, the signature request created from this draft will not be legally binding if set to `true`. Defaults to `false`.'
          type: boolean
          default: false
        title:
          description: 'The title you want to assign to the SignatureRequest.'
          type: string
          maxLength: 255
      type: object
    UnclaimedDraftEditAndResendRequest:
      required:
        - client_id
      properties:
        client_id:
          description: 'Client id of the app you''re using to create this draft. Visit our [embedded page](https://app.hellosign.com/api/embeddedSigningWalkthrough) to learn more about this parameter.'
          type: string
        editor_options:
          $ref: '#/components/schemas/SubEditorOptions'
        is_for_embedded_signing:
          description: 'The request created from this draft will also be signable in embedded mode if set to `true`. Defaults to `false`.'
          type: boolean
          default: false
        requester_email_address:
          description: 'The email address of the user that should be designated as the requester of this draft. If not set, original requester''s email address will be used.'
          type: string
          format: email
        requesting_redirect_url:
          description: 'The URL you want signers redirected to after they successfully request a signature.'
          type: string
        signing_redirect_url:
          description: 'The URL you want signers redirected to after they successfully sign.'
          type: string
        test_mode:
          description: 'Whether this is a test, the signature request created from this draft will not be legally binding if set to `true`. Defaults to `false`.'
          type: boolean
          default: false
      type: object
    AccountResponse:
      properties:
        account_id:
          type: string
        email_address:
          type: string
        is_locked:
          type: boolean
        is_paid_hs:
          type: boolean
        is_paid_hf:
          type: boolean
        quotas:
          $ref: '#/components/schemas/AccountResponseQuotas'
        callback_url:
          nullable: true
          type: string
        role_code:
          nullable: true
          type: string
      type: object
      x-internal: true
    AccountCreateResponse:
      properties:
        account:
          $ref: '#/components/schemas/AccountResponse'
        oauth_data:
          $ref: '#/components/schemas/OAuthTokenResponse'
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/WarningResponse'
      type: object
      x-internal: true
    AccountGetResponse:
      properties:
        account:
          $ref: '#/components/schemas/AccountResponse'
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/WarningResponse'
      type: object
      x-internal: true
    AccountVerifyResponse:
      properties:
        account:
          $ref: '#/components/schemas/AccountVerifyResponseAccount'
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/WarningResponse'
      type: object
      x-internal: true
    AccountVerifyResponseAccount:
      properties:
        email_address:
          type: string
      type: object
      x-internal: true
    AccountResponseQuotas:
      properties:
        api_signature_requests_left:
          nullable: true
          type: integer
        documents_left:
          nullable: true
          type: integer
        templates_left:
          nullable: true
          type: integer
      type: object
      x-internal: true
    ApiAppResponse:
      properties:
        callback_url:
          nullable: true
          description: 'The app''s callback URL (for events)'
          type: string
        client_id:
          description: 'The app''s client ID'
          type: string
        created_at:
          description: 'The time that the app was created'
          type: integer
        domain:
          description: 'The domain name associated with the app'
          type: string
        name:
          description: 'The name of the app'
          type: string
        is_approved:
          description: 'Boolean to indicate if the app has been approved'
          type: boolean
        oauth:
          $ref: '#/components/schemas/ApiAppResponseOAuth'
        options:
          $ref: '#/components/schemas/ApiAppResponseOptions'
        owner_account:
          $ref: '#/components/schemas/ApiAppResponseOwnerAccount'
        white_labeling_options:
          $ref: '#/components/schemas/ApiAppResponseWhiteLabelingOptions'
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/WarningResponse'
      type: object
      x-internal: true
    ApiAppGetResponse:
      properties:
        api_app:
          $ref: '#/components/schemas/ApiAppResponse'
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/WarningResponse'
      type: object
      x-internal: true
    ApiAppListResponse:
      properties:
        api_apps:
          type: array
          items:
            $ref: '#/components/schemas/ApiAppResponse'
        list_info:
          $ref: '#/components/schemas/ListInfoResponse'
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/WarningResponse'
      type: object
      x-internal: true
    ApiAppResponseOAuth:
      description: 'An object describing the app''s OAuth properties, or null if OAuth is not configured for the app.'
      properties:
        callback_url:
          description: 'The app''s OAuth callback URL.'
          type: string
        secret:
          description: 'The app''s OAuth secret, or null if the app does not belong to user.'
          type: string
        scopes:
          description: 'Array of OAuth scopes used by the app.'
          type: array
          items:
            type: string
        charges_users:
          description: 'Boolean indicating whether the app owner or the account granting permission is billed for OAuth requests.'
          type: boolean
      type: object
      nullable: true
      x-internal: true
    ApiAppResponseOptions:
      description: 'An object with options that override account settings.'
      properties:
        can_insert_everywhere:
          description: 'Boolean denoting if signers can "Insert Everywhere" in one click while signing a document'
          type: boolean
      type: object
      nullable: true
      x-internal: true
    ApiAppResponseOwnerAccount:
      description: 'An object describing the app''s owner'
      properties:
        account_id:
          description: 'The owner account''s ID'
          type: string
        email_address:
          description: 'The owner account''s email address'
          type: string
      type: object
      x-internal: true
    ApiAppResponseWhiteLabelingOptions:
      description: 'An object with options to customize the app''s signer page'
      properties:
        header_background_color:
          type: string
        legal_version:
          type: string
        link_color:
          type: string
        page_background_color:
          type: string
        primary_button_color:
          type: string
        primary_button_color_hover:
          type: string
        primary_button_text_color:
          type: string
        primary_button_text_color_hover:
          type: string
        secondary_button_color:
          type: string
        secondary_button_color_hover:
          type: string
        secondary_button_text_color:
          type: string
        secondary_button_text_color_hover:
          type: string
        text_color1:
          type: string
        text_color2:
          type: string
      type: object
      x-internal: true
    BulkSendJobResponse:
      properties:
        bulk_send_job_id:
          nullable: true
          description: 'The id of the BulkSendJob.'
          type: string
        total:
          description: 'The total amount of SignatureRequests queued for sending.'
          type: integer
        is_creator:
          description: 'True if you are the owner of this BulkSendJob, false if it''s been shared with you by a team member.'
          type: boolean
        created_at:
          description: 'Time that the BulkSendJob was created.'
          type: integer
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/WarningResponse'
      type: object
      x-internal: true
    BulkSendJobGetResponse:
      properties:
        bulk_send_job:
          $ref: '#/components/schemas/BulkSendJobResponse'
        list_info:
          $ref: '#/components/schemas/ListInfoResponse'
        signature_requests:
          type: array
          items:
            $ref: '#/components/schemas/BulkSendJobGetResponseSignatureRequests'
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/WarningResponse'
      type: object
      x-internal: true
    BulkSendJobGetResponseSignatureRequests:
      title: BulkSendJobGetResponseSignatureRequests
      type: object
      allOf:
        -
          $ref: '#/components/schemas/SignatureRequestResponse'
        -
          properties:
            bulk_send_job_id:
              description: 'The id of the BulkSendJob.'
              type: string
      x-internal: true
    BulkSendJobListResponse:
      properties:
        bulk_send_jobs:
          type: array
          items:
            $ref: '#/components/schemas/BulkSendJobResponse'
        list_info:
          $ref: '#/components/schemas/ListInfoResponse'
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/WarningResponse'
      type: object
      x-internal: true
    BulkSendJobSendResponse:
      properties:
        bulk_send_job:
          $ref: '#/components/schemas/BulkSendJobResponse'
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/WarningResponse'
      type: object
      x-internal: true
    EmbeddedEditUrlResponse:
      properties:
        embedded:
          $ref: '#/components/schemas/EmbeddedEditUrlResponseEmbedded'
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/WarningResponse'
      type: object
      x-internal: true
    EmbeddedEditUrlResponseEmbedded:
      properties:
        edit_url:
          type: string
        expires_at:
          type: integer
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/WarningResponse'
      type: object
      x-internal: true
    EmbeddedSignUrlResponse:
      properties:
        embedded:
          $ref: '#/components/schemas/EmbeddedSignUrlResponseEmbedded'
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/WarningResponse'
      type: object
      x-internal: true
    EmbeddedSignUrlResponseEmbedded:
      properties:
        sign_url:
          type: string
        expires_at:
          type: integer
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/WarningResponse'
      type: object
      x-internal: true
    ErrorResponse:
      required:
        - error
      properties:
        error:
          $ref: '#/components/schemas/ErrorResponseError'
      type: object
    ErrorResponseError:
      required:
        - error_msg
        - error_name
      properties:
        error_msg:
          type: string
        error_path:
          type: string
        error_name:
          type: string
      type: object
    EventCallbackAccountRequest:
      required:
        - json
      properties:
        json:
          $ref: '#/components/schemas/EventCallbackAccountRequestPayload'
      type: object
    EventCallbackAccountRequestPayload:
      title: EventCallbackAccountRequestPayload
      required:
        - event
      properties:
        account_guid:
          type: string
          deprecated: true
        client_id:
          nullable: true
          type: string
          deprecated: true
        event:
          $ref: '#/components/schemas/EventCallbackRequestEvent'
        signature_request:
          $ref: '#/components/schemas/SignatureRequestResponse'
        template:
          $ref: '#/components/schemas/TemplateResponse'
      type: object
    EventCallbackApiAppRequest:
      required:
        - json
      properties:
        json:
          $ref: '#/components/schemas/EventCallbackApiAppRequestPayload'
      type: object
    EventCallbackApiAppRequestPayload:
      title: EventCallbackApiAppRequestPayload
      required:
        - event
      properties:
        account_guid:
          type: string
          deprecated: true
        client_id:
          nullable: true
          type: string
          deprecated: true
        event:
          $ref: '#/components/schemas/EventCallbackRequestEvent'
        account:
          $ref: '#/components/schemas/AccountResponse'
        signature_request:
          $ref: '#/components/schemas/SignatureRequestResponse'
        template:
          $ref: '#/components/schemas/TemplateResponse'
      type: object
    EventCallbackRequestEvent:
      required:
        - event_time
        - event_type
        - event_hash
        - event_metadata
      properties:
        event_time:
          type: string
        event_type:
          type: string
          enum:
            - account_confirmed
            - unknown_error
            - file_error
            - sign_url_invalid
            - signature_request_viewed
            - signature_request_signed
            - signature_request_sent
            - signature_request_all_signed
            - signature_request_email_bounce
            - signature_request_remind
            - signature_request_incomplete_qes
            - signature_request_destroyed
            - signature_request_canceled
            - signature_request_downloadable
            - signature_request_declined
            - signature_request_reassigned
            - signature_request_invalid
            - signature_request_prepared
            - template_created
            - template_error
        event_hash:
          type: string
        event_metadata:
          $ref: '#/components/schemas/EventCallbackRequestEventMetadata'
      type: object
    EventCallbackRequestEventMetadata:
      properties:
        related_signature_id:
          nullable: true
          type: string
        reported_for_account_id:
          nullable: true
          type: string
        reported_for_app_id:
          nullable: true
          type: string
        event_message:
          nullable: true
          type: string
      type: object
    FileResponse:
      properties:
        file_url:
          type: string
        expires_at:
          type: integer
      type: object
      x-internal: true
    ListInfoResponse:
      properties:
        num_pages:
          description: 'Total number of pages available'
          type: integer
        num_response:
          nullable: true
          description: 'Total number of objects available'
          type: integer
        num_results:
          nullable: true
          description: 'Total number of objects available'
          type: integer
        page:
          description: 'Number of the page being returned'
          type: integer
        page_size:
          description: 'Objects returned per page'
          type: integer
      type: object
      x-internal: true
    OAuthTokenResponse:
      properties:
        access_token:
          type: string
        token_type:
          type: string
        refresh_token:
          type: string
        expires_in:
          description: 'in seconds'
          type: integer
        state:
          nullable: true
          type: string
      type: object
      x-internal: true
    ReportResponse:
      properties:
        success:
          description: 'A message indicating the requested operation''s success'
          type: string
        start_date:
          description: 'The (inclusive) start date for the report data in MM/DD/YYYY format.'
          type: string
        end_date:
          description: 'The (inclusive) end date for the report data in MM/DD/YYYY format.'
          type: string
        report_type:
          description: 'The type(s) of the report you are requesting. Allowed values are "user_activity" and "document_status". User activity reports contain list of all users and their activity during the specified date range. Document status report contain a list of signature requests created in the specified time range (and their status).'
          type: array
          items:
            enum:
              - user_activity
              - document_status
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/WarningResponse'
      type: object
      x-internal: true
    ReportCreateResponse:
      properties:
        report:
          $ref: '#/components/schemas/ReportResponse'
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/WarningResponse'
      type: object
      x-internal: true
    SignatureRequestResponse:
      properties:
        test_mode:
          nullable: true
          description: 'Whether this is a test signature request. Test requests have no legal value. Defaults to `false`.'
          type: boolean
          default: false
        signature_request_id:
          description: 'The id of the SignatureRequest.'
          type: string
        requester_email_address:
          description: 'The email address of the initiator of the SignatureRequest.'
          type: string
        title:
          description: 'The title the specified Account uses for the SignatureRequest.'
          type: string
        original_title:
          description: 'Default Label for account.'
          type: string
        subject:
          description: 'The subject in the email that was initially sent to the signers.'
          type: string
        message:
          nullable: true
          description: 'The custom message in the email that was initially sent to the signers.'
          type: string
        metadata:
          description: 'The metadata attached to the signature request.'
          type: object
        created_at:
          description: 'Time the signature request was created.'
          type: integer
        is_complete:
          description: 'Whether or not the SignatureRequest has been fully executed by all signers.'
          type: boolean
        is_declined:
          description: 'Whether or not the SignatureRequest has been declined by a signer.'
          type: boolean
        has_error:
          description: 'Whether or not an error occurred (either during the creation of the SignatureRequest or during one of the signings).'
          type: boolean
        final_copy_uri:
          description: '(Deprecated) The relative URI where the PDF copy of the finalized documents can be downloaded. Only present when `is_complete = true`. This will be removed at some point; use the files_url instead.'
          type: string
        files_url:
          description: 'The URL where a copy of the request''s documents can be downloaded.'
          type: string
        signing_url:
          nullable: true
          description: 'The URL where a signer, after authenticating, can sign the documents. This should only be used by users with existing HelloSign accounts as they will be required to log in before signing.'
          type: string
        details_url:
          description: 'The URL where the requester and the signers can view the current status of the SignatureRequest.'
          type: string
        cc_email_addresses:
          description: 'A list of email addresses that were CCed on the SignatureRequest. They will receive a copy of the final PDF once all the signers have signed.'
          type: array
          items:
            type: string
        signing_redirect_url:
          nullable: true
          description: 'The URL you want the signer redirected to after they successfully sign.'
          type: string
        custom_fields:
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/SignatureRequestResponseCustomField'
        response_data:
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/SignatureRequestResponseData'
        signatures:
          type: array
          items:
            $ref: '#/components/schemas/SignatureRequestResponseSignatures'
      type: object
      x-internal: true
    SignatureRequestGetResponse:
      properties:
        signature_request:
          $ref: '#/components/schemas/SignatureRequestResponse'
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/WarningResponse'
      type: object
      x-internal: true
    SignatureRequestListResponse:
      properties:
        signature_requests:
          type: array
          items:
            $ref: '#/components/schemas/SignatureRequestResponse'
        list_info:
          $ref: '#/components/schemas/ListInfoResponse'
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/WarningResponse'
      type: object
      x-internal: true
    SignatureRequestResponseCustomField:
      description: 'An array of Custom Field objects containing the name and type of each custom field.'
      properties:
        name:
          description: 'The name of the Custom Field.'
          type: string
        type:
          description: 'The type of this Custom Field. Only ''text'' and ''checkbox'' are currently supported.'
          enum:
            - text
            - checkbox
        value:
          description: 'A text string for text fields or true/false for checkbox fields'
          type: string
        required:
          description: 'A boolean value denoting if this field is required.'
          type: boolean
        api_id:
          description: 'The unique ID for this field.'
          type: string
        editor:
          description: 'The name of the Role that is able to edit this field.'
          type: string
      type: object
      x-internal: true
    SignatureRequestResponseData:
      description: 'An array of form field objects containing the name, value, and type of each textbox or checkmark field filled in by the signers.'
      properties:
        api_id:
          description: 'The unique ID for this field.'
          type: string
        signature_id:
          description: 'The ID of the signature to which this response is linked.'
          type: string
        name:
          description: 'The name of the form field.'
          type: string
        value:
          description: 'The value of the form field.'
          type: string
        required:
          description: 'A boolean value denoting if this field is required.'
          type: boolean
        type:
          description: |-
            - `text`: A text input field
            - `checkbox`: A yes/no checkbox
            - `date_signed`: A date
            - `dropdown`: An input field for dropdowns
            - `initials`: An input field for initials
            - `radio`: An input field for radios
            - `signature`: A signature input field
            - `text-merge`: A text field that has default text set by the api
            - `checkbox-merge`: A checkbox field that has default value set by the api
          enum:
            - text
            - checkbox
            - date_signed
            - dropdown
            - initials
            - radio
            - signature
            - text-merge
            - checkbox-merge
      type: object
      x-internal: true
    SignatureRequestResponseSignatures:
      description: 'An array of signature obects, 1 for each signer.'
      properties:
        signature_id:
          description: 'Signature identifier.'
          type: string
        signer_email_address:
          description: 'The email address of the signer.'
          type: string
        signer_name:
          description: 'The name of the signer.'
          type: string
        signer_role:
          nullable: true
          description: 'The role of the signer.'
          type: string
        order:
          nullable: true
          description: 'If signer order is assigned this is the 0-based index for this signer.'
          type: integer
        status_code:
          description: 'The current status of the signature. eg: awaiting_signature, signed, declined.'
          type: string
        decline_reason:
          nullable: true
          description: 'The reason provided by the signer for declining the request.'
          type: string
        signed_at:
          nullable: true
          description: 'Time that the document was signed or null.'
          type: integer
        last_viewed_at:
          nullable: true
          description: 'The time that the document was last viewed by this signer or null.'
          type: integer
        last_reminded_at:
          nullable: true
          description: 'The time the last reminder email was sent to the signer or null.'
          type: integer
        has_pin:
          description: 'Boolean to indicate whether this signature requires a PIN to access.'
          type: boolean
        has_sms_auth:
          nullable: true
          description: 'Boolean to indicate whether this signature has SMS authentication enabled.'
          type: boolean
        reassigned_by:
          nullable: true
          description: 'Email address of original signer who reassigned to this signer.'
          type: string
        reassignment_reason:
          nullable: true
          description: 'Reason provided by original signer who reassigned to this signer.'
          type: string
        error:
          nullable: true
          description: 'Error message pertaining to this signer, or null.'
          type: string
      type: object
      x-internal: true
    TeamResponse:
      properties:
        name:
          description: 'The name of your Team'
          type: string
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/AccountResponse'
        invited_accounts:
          description: 'A list of all Accounts that have an outstanding invitation to join your Team. Note that this response is a subset of the response parameters found in `GET /account`.'
          type: array
          items:
            $ref: '#/components/schemas/AccountResponse'
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/WarningResponse'
      type: object
      x-internal: true
    TeamGetResponse:
      properties:
        team:
          $ref: '#/components/schemas/TeamResponse'
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/WarningResponse'
      type: object
      x-internal: true
    TemplateResponse:
      properties:
        template_id:
          description: 'The id of the Template.'
          type: string
        title:
          description: 'The title of the Template. This will also be the default subject of the message sent to signers when using this Template to send a SignatureRequest. This can be overridden when sending the SignatureRequest.'
          type: string
        message:
          description: 'The default message that will be sent to signers when using this Template to send a SignatureRequest. This can be overridden when sending the SignatureRequest.'
          type: string
        updated_at:
          description: 'Time the template was last updated.'
          type: integer
        is_embedded:
          nullable: true
          description: '`true` if this template was created using an embedded flow, `false` if it was created on our website.'
          type: boolean
        is_creator:
          nullable: true
          description: '`true` if you are the owner of this template, `false` if it''s been shared with you by a team member.'
          type: boolean
        can_edit:
          nullable: true
          description: 'Indicates whether edit rights have been granted to you by the owner (always `true` if that''s you).'
          type: boolean
        is_locked:
          nullable: true
          description: '`true` if you exceed Template quota; these can only be used in test mode. `false` if the template is included with the Template quota; these can be used at any time.'
          type: boolean
        metadata:
          description: 'The metadata attached to the template.'
          type: object
        signer_roles:
          type: array
          items:
            $ref: '#/components/schemas/TemplateResponseSignerRole'
        cc_roles:
          type: array
          items:
            $ref: '#/components/schemas/TemplateResponseCCRole'
        documents:
          type: array
          items:
            $ref: '#/components/schemas/TemplateResponseDocument'
        custom_fields:
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/TemplateResponseCustomField'
        accounts:
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/TemplateResponseAccount'
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/WarningResponse'
      type: object
      x-internal: true
    TemplateCreateEmbeddedDraftResponse:
      properties:
        template:
          $ref: '#/components/schemas/TemplateCreateEmbeddedDraftResponseTemplate'
      type: object
      x-internal: true
    TemplateCreateEmbeddedDraftResponseTemplate:
      properties:
        template_id:
          description: 'The id of the Template.'
          type: string
        edit_url:
          type: string
        expires_at:
          type: integer
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/WarningResponse'
      type: object
      x-internal: true
    TemplateUpdateFilesResponse:
      properties:
        template:
          $ref: '#/components/schemas/TemplateUpdateFilesResponseTemplate'
      type: object
      x-internal: true
    TemplateUpdateFilesResponseTemplate:
      properties:
        template_id:
          description: 'The id of the Template.'
          type: string
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/WarningResponse'
      type: object
      x-internal: true
    TemplateGetResponse:
      properties:
        template:
          $ref: '#/components/schemas/TemplateResponse'
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/WarningResponse'
      type: object
      x-internal: true
    TemplateListResponse:
      properties:
        templates:
          type: array
          items:
            $ref: '#/components/schemas/TemplateResponse'
        list_info:
          $ref: '#/components/schemas/ListInfoResponse'
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/WarningResponse'
      type: object
      x-internal: true
    TemplateEditResponse:
      properties:
        template_id:
          description: 'The id of the Template.'
          type: string
      type: object
    TemplateResponseAccount:
      description: 'An array of the Accounts that can use this Template.'
      properties:
        account_id:
          description: 'The id of the Account.'
          type: string
        email_address:
          description: 'The email address associated with the Account.'
          type: string
        is_locked:
          description: 'Returns true if the user has been locked out of their account by a team admin.'
          type: boolean
        is_paid_hs:
          description: 'Returns true if the user has a paid HelloSign account.'
          type: boolean
        is_paid_hf:
          description: 'Returns true if the user has a paid HelloFax account.'
          type: boolean
        quotas:
          type: array
          items:
            $ref: '#/components/schemas/TemplateResponseAccountQuota'
      type: object
      x-internal: true
    TemplateResponseAccountQuota:
      description: 'An array of the designated CC roles that must be specified when sending a SignatureRequest using this Template.'
      properties:
        templates_left:
          description: 'API templates remaining.'
          type: integer
        api_signature_requests_left:
          description: 'API signature requests remaining.'
          type: integer
        documents_left:
          description: 'Signature requests remaining.'
          type: integer
      type: object
      x-internal: true
    TemplateResponseCCRole:
      description: 'An array of the designated CC roles that must be specified when sending a SignatureRequest using this Template.'
      properties:
        name:
          description: 'The name of the Role.'
          type: string
      type: object
      x-internal: true
    TemplateResponseCustomField:
      properties:
        name:
          type: string
        type:
          type: string
      type: object
      x-internal: true
    TemplateResponseDocument:
      description: 'An array describing each document associated with this Template. Includes form field data for each document.'
      properties:
        name:
          description: 'Name of the associated file.'
          type: string
        index:
          description: 'Document ordering, the lowest index is displayed first and the highest last.'
          type: integer
        field_groups:
          type: array
          items:
            $ref: '#/components/schemas/TemplateResponseDocumentFieldGroup'
        form_fields:
          type: array
          items:
            $ref: '#/components/schemas/TemplateResponseDocumentFormField'
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/TemplateResponseDocumentCustomField'
      type: object
      x-internal: true
    TemplateResponseDocumentCustomField:
      description: 'An array of the designated CC roles that must be specified when sending a SignatureRequest using this Template.'
      properties:
        name:
          description: 'The name of the Custom Field.'
          type: string
        type:
          description: 'The type of this Custom Field. Only `text` and `checkbox` are currently supported.'
          type: string
          enum:
            - text
            - checkbox
        x:
          description: 'The horizontal offset in pixels for this form field.'
          type: integer
        'y':
          description: 'The vertical offset in pixels for this form field.'
          type: integer
        width:
          description: 'The width in pixels of this form field.'
          type: integer
        height:
          description: 'The height in pixels of this form field.'
          type: integer
        required:
          description: 'Boolean showing whether or not this field is required.'
          type: boolean
        group:
          nullable: true
          description: 'The name of the group this field is in. If this field is not a group, this defaults to `null`.'
          type: string
        avg_text_length:
          $ref: '#/components/schemas/TemplateResponseDocumentCustomFieldAvgTextLength'
        named_form_fields:
          nullable: true
          description: 'Use `form_fields` under the `documents` array instead.'
          type: object
          deprecated: true
        reusable_form_id:
          nullable: true
          type: string
          deprecated: true
      type: object
      x-internal: true
    TemplateResponseDocumentCustomFieldAvgTextLength:
      description: 'Average text length in custom field.'
      properties:
        num_lines:
          description: 'Number of lines.'
          type: integer
        num_chars_per_line:
          description: 'Number of character per line.'
          type: integer
      type: object
      x-internal: true
    TemplateResponseDocumentFieldGroup:
      description: 'An array of Form Field Group objects.'
      properties:
        name:
          description: 'The name of the form field group.'
          type: string
        rule:
          description: 'The rule used to validate checkboxes in the form field group. See [checkbox field grouping](https://app.hellosign.com/api/reference#CheckboxFieldGrouping).'
          type: string
      type: object
      x-internal: true
    TemplateResponseDocumentFormField:
      description: 'An array of Form Field objects containing the name and type of each named textbox and checkmark field.'
      properties:
        api_id:
          description: 'A unique id for the form field.'
          type: string
        name:
          description: 'The name of the form field.'
          type: string
        type:
          description: 'The type of this form field. See [field types](https://app.hellosign.com/api/reference#FieldTypes).'
          type: string
          enum:
            - checkbox
            - checkbox-merge
            - date_signed
            - dropdown
            - hyperlink
            - initials
            - signature
            - radio
            - text
            - text-merge
        x:
          description: 'The horizontal offset in pixels for this form field.'
          type: integer
        'y':
          description: 'The vertical offset in pixels for this form field.'
          type: integer
        width:
          description: 'The width in pixels of this form field.'
          type: integer
        height:
          description: 'The height in pixels of this form field.'
          type: integer
        required:
          description: 'Boolean showing whether or not this field is required.'
          type: boolean
        group:
          nullable: true
          description: 'The name of the group this field is in. If this field is not a group, this defaults to `null`.'
          type: string
      type: object
      x-internal: true
    TemplateResponseSignerRole:
      description: 'An array of the designated signer roles that must be specified when sending a SignatureRequest using this Template.'
      properties:
        name:
          description: 'The name of the Role.'
          type: string
        order:
          description: 'If signer order is assigned this is the 0-based index for this role.'
          type: integer
      type: object
      x-internal: true
    UnclaimedDraftResponse:
      properties:
        signature_request_id:
          nullable: true
          description: 'The ID of the signature request that is represented by this UnclaimedDraft.'
          type: string
        claim_url:
          description: 'The URL to be used to claim this UnclaimedDraft.'
          type: string
        signing_redirect_url:
          nullable: true
          description: 'The URL you want signers redirected to after they successfully sign.'
          type: string
        requesting_redirect_url:
          nullable: true
          description: 'The URL you want signers redirected to after they successfully request a signature (Will only be returned in the response if it is applicable to the request.).'
          type: string
        expires_at:
          nullable: true
          description: 'When the link expires.'
          type: integer
        test_mode:
          description: 'Whether this is a test draft. Signature requests made from test drafts have no legal value.'
          type: boolean
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/WarningResponse'
      type: object
      x-internal: true
    UnclaimedDraftCreateResponse:
      properties:
        unclaimed_draft:
          $ref: '#/components/schemas/UnclaimedDraftResponse'
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/WarningResponse'
      type: object
      x-internal: true
    WarningResponse:
      required:
        - warning_msg
        - warning_name
      properties:
        warning_msg:
          type: string
        warning_name:
          type: string
      type: object
  responses:
    Error400Response:
      description: 'failed operation'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            default_example:
              $ref: '#/components/examples/ErrorResponseExample'
    EventCallbackResponse:
      description: 'successful operation'
      content:
        text/plain:
          schema:
            type: string
            default: 'Hello API Event Received'
  examples:
    AccountCreateRequestDefaultExample:
      summary: 'Default Example'
      value:
        email_address: newuser@hellosign.com
    AccountCreateRequestOAuthExample:
      summary: 'OAuth Example'
      value:
        email_address: newuser@hellosign.com
        client_id: cc91c61d00f8bb2ece1428035716b
        client_secret: 1d14434088507ffa390e6f5528465
    AccountUpdateRequestDefaultExample:
      summary: 'Default Example'
      value:
        callback_url: 'https://www.example.com/callback'
    AccountVerifyRequestDefaultExample:
      summary: 'Default Example'
      value:
        email_address: some_user@hellosign.com
    ApiAppCreateRequestDefaultExample:
      summary: 'Default Example'
      value:
        name: 'My Production App'
        domains:
          - example.com
        oauth:
          callback_url: 'https://example.com/oauth'
          scopes:
            - basic_account_info
            - request_signature
        white_labeling_options:
          primary_button_color: '#00b3e6'
          primary_button_text_color: '#ffffff'
    ApiAppCreateRequestFormDataExample:
      summary: 'With Custom Logo File Example'
      value:
        name: 'My Production App'
        domains:
          - example.com
        oauth:
          callback_url: 'https://example.com/oauth'
          scopes:
            - basic_account_info
            - request_signature
        white_labeling_options:
          primary_button_color: '#00b3e6'
          primary_button_text_color: '#ffffff'
        custom_logo_file: '@CustomLogoFile.png'
    ApiAppUpdateRequestDefaultExample:
      summary: 'Default Example'
      value:
        name: 'New Name'
        callback_url: 'http://example.com/hellosign'
        white_labeling_options:
          primary_button_color: '#00b3e6'
          primary_button_text_color: '#ffffff'
    ApiAppUpdateRequestFormDataExample:
      summary: 'With Custom Logo File Example'
      value:
        name: 'New Name'
        callback_url: 'http://example.com/hellosign'
        white_labeling_options:
          primary_button_color: '#00b3e6'
          primary_button_text_color: '#ffffff'
        custom_logo_file: '@CustomLogoFile.png'
    EmbeddedEditUrlRequestDefaultExample:
      summary: 'Default Example'
      value:
        cc_roles:
          - ''
        merge_fields: []
    OAuthTokenGenerateRequestExample:
      summary: 'OAuth Token Generate Example'
      value:
        state: 900e06e2
        code: 1b0d28d90c86c141
        grant_type: authorization_code
        client_id: cc91c61d00f8bb2ece1428035716b
        client_secret: 1d14434088507ffa390e6f5528465
    OAuthTokenRefreshRequestExample:
      summary: 'OAuth Token Refresh Example'
      value:
        grant_type: refresh_token
        refresh_token: hNTI2MTFmM2VmZDQxZTZjOWRmZmFjZmVmMGMyNGFjMzI2MGI5YzgzNmE3
    ReportCreateRequestDefaultExample:
      summary: 'Default Example'
      value:
        start_date: 09/01/2020
        end_date: 09/01/2020
        report_type:
          - user_activity
          - document_status
    SignatureRequestBulkCreateEmbeddedWithTemplateRequestDefaultExample:
      summary: 'Default Example'
      value:
        client_id: 1a659d9ad95bccd307ecad78d72192f8
        template_ids:
          - c26b8a16784a872da37ea946b9ddec7c1e11dff6
        subject: 'Purchase Order'
        message: 'Glad we could come to an agreement.'
        signer_list:
          -
            signers:
              -
                role: Client
                name: George
                email_address: george@example.com
                pin: d79a3td
            custom_fields:
              -
                name: company
                value: 'ABC Corp'
          -
            signers:
              -
                role: Client
                name: Mary
                email_address: mary@example.com
                pin: gd9as5b
            custom_fields:
              -
                name: company
                value: '123 LLC'
        ccs:
          -
            role: Accounting
            email_address: accounting@example.com
        test_mode: true
    SignatureRequestBulkCreateEmbeddedWithTemplateRequestFormDataExample:
      summary: 'With Signer File Example'
      value:
        client_id: 1a659d9ad95bccd307ecad78d72192f8
        template_ids:
          - c26b8a16784a872da37ea946b9ddec7c1e11dff6
        subject: 'Purchase Order'
        message: 'Glad we could come to an agreement.'
        signer_file: '@SignerFile.csv'
        ccs:
          -
            role: Accounting
            email_address: accounting@example.com
        test_mode: true
    SignatureRequestBulkSendWithTemplateRequestDefaultExample:
      summary: 'Default Example'
      value:
        template_ids:
          - c26b8a16784a872da37ea946b9ddec7c1e11dff6
        subject: 'Purchase Order'
        message: 'Glad we could come to an agreement.'
        signer_list:
          -
            signers:
              -
                role: Client
                name: George
                email_address: george@example.com
                pin: d79a3td
            custom_fields:
              -
                name: company
                value: 'ABC Corp'
          -
            signers:
              -
                role: Client
                name: Mary
                email_address: mary@example.com
                pin: gd9as5b
            custom_fields:
              -
                name: company
                value: '123 LLC'
        ccs:
          -
            role: Accounting
            email_address: accounting@example.com
        test_mode: true
    SignatureRequestBulkSendWithTemplateRequestFormDataExample:
      summary: 'With Signer File Example'
      value:
        template_ids:
          - c26b8a16784a872da37ea946b9ddec7c1e11dff6
        subject: 'Purchase Order'
        message: 'Glad we could come to an agreement.'
        signer_file: '@SignerFile.csv'
        ccs:
          -
            role: Accounting
            email_address: accounting@example.com
        test_mode: true
    SignatureRequestCreateEmbeddedRequestDefaultExample:
      summary: 'Default Example'
      value:
        client_id: b6b8e7deaf8f0b95c029dca049356d4a2cf9710a
        title: 'NDA with Acme Co.'
        subject: 'The NDA we talked about'
        message: |-
          Please sign this NDA and then we can discuss more. Let me know if you
          have any questions.
        signers:
          -
            email_address: jack@example.com
            name: Jack
            order: 0
          -
            email_address: jill@example.com
            name: Jill
            order: 1
        cc_email_addresses:
          - lawyer@hellosign.com
          - lawyer@example.com
        file_url:
          - 'https://app.hellosign.com/docs/example_signature_request.pdf'
        signing_options:
          draw: true
          type: true
          upload: true
          phone: false
          default_type: draw
        test_mode: true
    SignatureRequestCreateEmbeddedRequestFormDataExample:
      summary: 'With File Example'
      value:
        client_id: b6b8e7deaf8f0b95c029dca049356d4a2cf9710a
        title: 'NDA with Acme Co.'
        subject: 'The NDA we talked about'
        message: |-
          Please sign this NDA and then we can discuss more. Let me know if you
          have any questions.
        signers:
          -
            email_address: jack@example.com
            name: Jack
            order: 0
          -
            email_address: jill@example.com
            name: Jill
            order: 1
        cc_email_addresses:
          - lawyer@hellosign.com
          - lawyer@example.com
        file:
          - '@NDA.pdf'
          - '@AppendixA.pdf'
        signing_options:
          draw: true
          type: true
          upload: true
          phone: false
          default_type: draw
        test_mode: true
    SignatureRequestCreateEmbeddedWithTemplateRequestDefaultExample:
      summary: 'Default Example'
      value:
        client_id: b6b8e7deaf8f0b95c029dca049356d4a2cf9710a
        template_ids:
          - c26b8a16784a872da37ea946b9ddec7c1e11dff6
        subject: 'Purchase Order'
        message: 'Glad we could come to an agreement.'
        signers:
          -
            role: Client
            name: George
            email_address: george@example.com
        signing_options:
          draw: true
          type: true
          upload: true
          phone: false
          default_type: draw
        test_mode: true
    SignatureRequestCreateEmbeddedWithTemplateRequestFormDataExample:
      summary: 'With Signer File Example'
      value:
        client_id: b6b8e7deaf8f0b95c029dca049356d4a2cf9710a
        template_ids:
          - c26b8a16784a872da37ea946b9ddec7c1e11dff6
        file:
          - '@NDA.pdf'
          - '@AppendixA.pdf'
        subject: 'Purchase Order'
        message: 'Glad we could come to an agreement.'
        signers:
          -
            role: Client
            name: George
            email_address: george@example.com
        signing_options:
          draw: true
          type: true
          upload: true
          phone: false
          default_type: draw
        test_mode: true
    SignatureRequestRemindRequestDefaultExample:
      summary: 'Default Example'
      value:
        email_address: john@example.com
    SignatureRequestSendRequestDefaultExample:
      summary: 'Default Example'
      value:
        title: 'NDA with Acme Co.'
        subject: 'The NDA we talked about'
        message: |-
          Please sign this NDA and then we can discuss more. Let me know if you
          have any questions.
        signers:
          -
            email_address: jack@example.com
            name: Jack
            order: 0
          -
            email_address: jill@example.com
            name: Jill
            order: 1
        cc_email_addresses:
          - lawyer@hellosign.com
          - lawyer@example.com
        file_url:
          - 'https://app.hellosign.com/docs/example_signature_request.pdf'
        metadata:
          custom_id: 1234
          custom_text: 'NDA #9'
        signing_options:
          draw: true
          type: true
          upload: true
          phone: false
          default_type: draw
        field_options:
          date_format: 'DD - MM - YYYY'
        test_mode: true
    SignatureRequestSendRequestGroupedSignersExample:
      summary: 'Grouped Signers Example'
      value:
        title: 'NDA with Acme Co.'
        subject: 'The NDA we talked about'
        message: |-
          Please sign this NDA and then we can discuss more. Let me know if you
          have any questions.
        signers:
          -
            email_address: owner@example.com
            name: Owner
            order: 0
          -
            group: 'Authorized signatory'
            email_address: jill@example.com
            name: Jill
          -
            group: 'Authorized signatory'
            email_address: jack@example.com
            name: Jack
        cc_email_addresses:
          - lawyer@hellosign.com
          - lawyer@example.com
        file_url:
          - 'https://app.hellosign.com/docs/example_signature_request.pdf'
        metadata:
          custom_id: 1234
          custom_text: 'NDA #9'
        signing_options:
          draw: true
          type: true
          upload: true
          phone: false
          default_type: draw
        field_options:
          date_format: 'DD - MM - YYYY'
        test_mode: true
    SignatureRequestSendFormDataExample:
      summary: 'With File Example'
      value:
        title: 'NDA with Acme Co.'
        subject: 'The NDA we talked about'
        message: |-
          Please sign this NDA and then we can discuss more. Let me know if you
          have any questions.
        signers:
          -
            email_address: jack@example.com
            name: Jack
            order: 0
          -
            email_address: jill@example.com
            name: Jill
            order: 1
        cc_email_addresses:
          - lawyer@hellosign.com
          - lawyer@example.com
        file:
          - '@NDA.pdf'
          - '@AppendixA.pdf'
        metadata:
          custom_id: 1234
          custom_text: 'NDA #9'
        signing_options:
          draw: true
          type: true
          upload: true
          phone: false
          default_type: draw
        field_options:
          date_format: 'DD - MM - YYYY'
        test_mode: true
    SignatureRequestSendWithTemplateRequestDefaultExample:
      summary: 'Default Example'
      value:
        template_ids:
          - 61a832ff0d8423f91d503e76bfbcc750f7417c78
        subject: 'Purchase Order'
        message: 'Glad we could come to an agreement.'
        signers:
          -
            role: Client
            name: George
            email_address: george@example.com
        ccs:
          -
            role: Accounting
            email_address: accounting@example.com
        custom_fields:
          -
            name: Cost
            value: '$20,000'
            editor: Client
            required: true
        signing_options:
          draw: true
          type: true
          upload: true
          phone: false
          default_type: draw
        test_mode: true
    SignatureRequestSendWithTemplateRequestGroupedSignersExample:
      summary: 'Grouped Signers Example'
      value:
        template_ids:
          - 61a832ff0d8423f91d503e76bfbcc750f7417c78
        subject: 'Purchase Order'
        message: 'Glad we could come to an agreement.'
        signers:
          -
            role: Client
            name: George
            email_address: george@example.com
          -
            role: Owner
            name: Jack
            email_address: jill@example.com
          -
            role: Owner
            name: jill
            email_address: jill@example.com
        ccs:
          -
            role: Accounting
            email_address: accounting@example.com
        custom_fields:
          -
            name: Cost
            value: '$20,000'
            editor: Client
            required: true
        signing_options:
          draw: true
          type: true
          upload: true
          phone: false
          default_type: draw
        test_mode: true
    SignatureRequestSendWithTemplateRequestFormDataExample:
      summary: 'With File Example'
      value:
        template_ids:
          - 61a832ff0d8423f91d503e76bfbcc750f7417c78
        subject: 'Purchase Order'
        message: 'Glad we could come to an agreement.'
        signers:
          -
            role: Client
            name: George
            email_address: george@example.com
        file:
          - '@NDA.pdf'
          - '@AppendixA.pdf'
        ccs:
          -
            role: Accounting
            email_address: accounting@example.com
        custom_fields:
          -
            name: Cost
            value: '$20,000'
            editor: Client
            required: true
        signing_options:
          draw: true
          type: true
          upload: true
          phone: false
          default_type: draw
        test_mode: true
    SignatureRequestUpdateRequestDefaultExample:
      summary: 'Default Example'
      value:
        email_address: john@example.com
        signature_id: 2f9781e1a8e2045224d808c153c2e1d3df6f8f2f
    TeamAddMemberRequestEmailAddressExample:
      summary: 'Email Address Example'
      value:
        email_address: george@example.com
    TeamAddMemberRequestAccountIdExample:
      summary: 'Account ID Example'
      value:
        account_id: f57db65d3f933b5316d398057a36176831451a35
    TeamCreateRequestDefaultExample:
      summary: 'Default Example'
      value:
        name: 'New Team Name'
    TeamRemoveMemberRequestEmailAddressExample:
      summary: 'Email Address Example'
      value:
        email_address: teammate@hellosign.com
        new_owner_email_address: new_teammate@hellosign.com
    TeamRemoveMemberRequestAccountIdExample:
      summary: 'Account ID Example'
      value:
        account_id: f57db65d3f933b5316d398057a36176831451a35
    TeamUpdateRequestDefaultExample:
      summary: 'Default Example'
      value:
        name: 'New Team Name'
    TemplateAddUserRequestDefaultExample:
      summary: 'Default Example'
      value:
        email_address: george@hellosign.com
    TemplateCreateEmbeddedDraftRequestDefaultExample:
      summary: 'Default Example'
      value:
        client_id: 37dee8d8440c66d54cfa05d92c160882
        file_url:
          - 'https://app.hellosign.com/docs/example_signature_request.pdf'
        title: 'Test Template'
        subject: 'Please sign this document'
        message: 'For your approval'
        signer_roles:
          -
            name: Client
            order: 0
          -
            name: Witness
            order: 1
        cc_roles:
          - Manager
        merge_fields:
          -
            name: 'Full Name'
            type: text
          -
            name: 'Is Registered?'
            type: checkbox
        field_options:
          date_format: 'DD - MM - YYYY'
        test_mode: true
    TemplateCreateEmbeddedDraftRequestFormFieldsPerDocumentExample:
      summary: 'Form Fields Per Document Example'
      value:
        client_id: 37dee8d8440c66d54cfa05d92c160882
        file_url:
          - 'https://app.hellosign.com/docs/example_signature_request.pdf'
        title: 'Test Template'
        subject: 'Please sign this document'
        message: 'For your approval'
        signer_roles:
          -
            name: Client
            order: 0
          -
            name: Witness
            order: 1
        cc_roles:
          - Manager
        merge_fields:
          -
            name: 'Full Name'
            type: text
          -
            name: 'Is Registered?'
            type: checkbox
        field_options:
          date_format: 'DD - MM - YYYY'
        form_fields_per_document:
          -
            -
              api_id: uniqueIdHere_1
              name: ''
              placeholder: ''
              type: text
              x: 112
              'y': 328
              width: 100
              height: 16
              required: true
              signer: 1
              page: 1
              validation_type: numbers_only
            -
              api_id: uniqueIdHere_2
              name: ''
              type: signature
              x: 530
              'y': 415
              width: 120
              height: 30
              required: true
              signer: 0
              page: 1
        test_mode: true
    TemplateCreateEmbeddedDraftRequestFormFieldGroupsExample:
      summary: 'Form Fields Per Document and Groups Example'
      value:
        client_id: 37dee8d8440c66d54cfa05d92c160882
        file_url:
          - 'https://app.hellosign.com/docs/example_signature_request.pdf'
        title: 'Test Template'
        subject: 'Please sign this document'
        message: 'For your approval'
        signer_roles:
          -
            name: Client
            order: 0
          -
            name: Witness
            order: 1
        cc_roles:
          - Manager
        merge_fields:
          -
            name: 'Full Name'
            type: text
          -
            name: 'Is Registered?'
            type: checkbox
        field_options:
          date_format: 'DD - MM - YYYY'
        form_fields_per_document:
          -
            -
              api_id: uniqueIdHere_1
              name: ''
              type: radio
              x: 112
              'y': 328
              width: 18
              height: 18
              required: false
              group: RadioItemGroup1
              checked: 1
              signer: 0
              page: 1
            -
              api_id: uniqueIdHere_2
              name: ''
              type: radio
              x: 112
              'y': 370
              width: 18
              height: 18
              required: false
              group: RadioItemGroup1
              checked: 0
              signer: 0
              page: 1
        form_field_groups:
          -
            group_id: RadioItemGroup1
            group_label: 'Radio Item Group 1'
            requirement: require_0-1
        test_mode: true
    TemplateCreateEmbeddedDraftRequestFormFieldRulesExample:
      summary: 'Form Fields Per Document and Rules Example'
      value:
        client_id: 37dee8d8440c66d54cfa05d92c160882
        file_url:
          - 'https://app.hellosign.com/docs/example_signature_request.pdf'
        title: 'Test Template'
        subject: 'Please sign this document'
        message: 'For your approval'
        signer_roles:
          -
            name: Client
            order: 0
          -
            name: Witness
            order: 1
        cc_roles:
          - Manager
        merge_fields:
          -
            name: 'Full Name'
            type: text
          -
            name: 'Is Registered?'
            type: checkbox
        field_options:
          date_format: 'DD - MM - YYYY'
        form_fields_per_document:
          -
            -
              api_id: uniqueIdHere_1
              name: ''
              type: text
              x: 112
              'y': 328
              width: 100
              height: 16
              required: true
              signer: 0
              page: 1
              validation_type: numbers_only
            -
              api_id: uniqueIdHere_2
              name: ''
              type: signature
              x: 530
              'y': 415
              width: 120
              height: 30
              required: true
              signer: 0
              page: 1
        form_field_rules:
          -
            id: rule_1
            trigger_operator: AND
            triggers:
              -
                id: uniqueIdHere_1
                operator: is
                value: foo
            actions:
              -
                field_id: uniqueIdHere_2
                hidden: 1
                type: change-field-visibility
        test_mode: true
    TemplateCreateEmbeddedDraftRequestFormDataExample:
      summary: 'With File Example'
      value:
        client_id: 37dee8d8440c66d54cfa05d92c160882
        file:
          - '@NDA.pdf'
        title: 'Test Template'
        subject: 'Please sign this document'
        message: 'For your approval'
        signer_roles:
          -
            name: Client
            order: 0
          -
            name: Witness
            order: 1
        cc_roles:
          - Manager
        merge_fields:
          -
            name: 'Full Name'
            type: text
          -
            name: 'Is Registered?'
            type: checkbox
        field_options:
          date_format: 'DD - MM - YYYY'
        test_mode: true
    TemplateRemoveUserRequestDefaultExample:
      summary: 'Default Example'
      value:
        email_address: george@hellosign.com
    TemplateUpdateFilesRequestDefaultExample:
      summary: 'Default Example'
      value:
        file_url:
          - 'https://app.hellosign.com/docs/example_signature_request.pdf'
    TemplateUpdateFilesRequestFormDataExample:
      summary: 'With File Example'
      value:
        file:
          - '@NDA.pdf'
    UnclaimedDraftCreateRequestDefaultExample:
      summary: 'Default Example'
      value:
        file_url:
          - 'https://app.hellosign.com/docs/example_signature_request.pdf'
        test_mode: false
    UnclaimedDraftCreateRequestFormFieldsPerDocumentExample:
      summary: 'Form Fields Per Document Example'
      value:
        file_url:
          - 'https://app.hellosign.com/docs/example_signature_request.pdf'
        form_fields_per_document:
          -
            -
              api_id: uniqueIdHere_1
              name: ''
              placeholder: ''
              type: text
              x: 112
              'y': 328
              width: 100
              height: 16
              required: true
              signer: 1
              page: 1
              validation_type: numbers_only
            -
              api_id: uniqueIdHere_2
              name: ''
              type: signature
              x: 530
              'y': 415
              width: 120
              height: 30
              required: true
              signer: 0
              page: 1
        test_mode: false
    UnclaimedDraftCreateRequestFormFieldGroupsExample:
      summary: 'Form Fields Per Document and Groups Example'
      value:
        file_url:
          - 'https://app.hellosign.com/docs/example_signature_request.pdf'
        form_fields_per_document:
          -
            -
              api_id: uniqueIdHere_1
              name: ''
              type: radio
              x: 112
              'y': 328
              width: 18
              height: 18
              required: false
              group: RadioItemGroup1
              checked: 1
              signer: 0
              page: 1
            -
              api_id: uniqueIdHere_2
              name: ''
              type: radio
              x: 112
              'y': 370
              width: 18
              height: 18
              required: false
              group: RadioItemGroup1
              checked: 0
              signer: 0
              page: 1
        form_field_groups:
          -
            group_id: RadioItemGroup1
            group_label: 'Radio Item Group 1'
            requirement: require_0-1
        test_mode: false
    UnclaimedDraftCreateRequestFormFieldRulesExample:
      summary: 'Form Fields Per Document and Rules Example'
      value:
        file_url:
          - 'https://app.hellosign.com/docs/example_signature_request.pdf'
        form_fields_per_document:
          -
            -
              api_id: uniqueIdHere_1
              name: ''
              type: text
              x: 112
              'y': 328
              width: 100
              height: 16
              required: true
              signer: 0
              page: 1
              validation_type: numbers_only
            -
              api_id: uniqueIdHere_2
              name: ''
              type: signature
              x: 530
              'y': 415
              width: 120
              height: 30
              required: true
              signer: 0
              page: 1
        form_field_rules:
          -
            id: rule_1
            trigger_operator: AND
            triggers:
              -
                id: uniqueIdHere_1
                operator: is
                value: foo
            actions:
              -
                field_id: uniqueIdHere_2
                hidden: 1
                type: change-field-visibility
        test_mode: false
    UnclaimedDraftCreateRequestFormDataExample:
      summary: 'With File Example'
      value:
        file:
          - '@NDA.pdf'
        test_mode: false
    UnclaimedDraftCreateEmbeddedRequestDefaultExample:
      summary: 'Default Example'
      value:
        client_id: b6b8e7deaf8f0b95c029dca049356d4a2cf9710a
        file_url:
          - 'https://app.hellosign.com/docs/example_signature_request.pdf'
        requester_email_address: jack@hellosign.com
        test_mode: false
    UnclaimedDraftCreateEmbeddedRequestFormFieldsPerDocumentExample:
      summary: 'Form Fields Per Document Example'
      value:
        client_id: b6b8e7deaf8f0b95c029dca049356d4a2cf9710a
        file_url:
          - 'https://app.hellosign.com/docs/example_signature_request.pdf'
        form_fields_per_document:
          -
            -
              api_id: uniqueIdHere_1
              name: ''
              placeholder: ''
              type: text
              x: 112
              'y': 328
              width: 100
              height: 16
              required: true
              signer: 1
              page: 1
              validation_type: numbers_only
            -
              api_id: uniqueIdHere_2
              name: ''
              type: signature
              x: 530
              'y': 415
              width: 120
              height: 30
              required: true
              signer: 0
              page: 1
        requester_email_address: jack@hellosign.com
        test_mode: false
    UnclaimedDraftCreateEmbeddedRequestFormFieldGroupsExample:
      summary: 'Form Fields Per Document and Groups Example'
      value:
        client_id: b6b8e7deaf8f0b95c029dca049356d4a2cf9710a
        file_url:
          - 'https://app.hellosign.com/docs/example_signature_request.pdf'
        form_fields_per_document:
          -
            -
              api_id: uniqueIdHere_1
              name: ''
              type: radio
              x: 112
              'y': 328
              width: 18
              height: 18
              required: false
              group: RadioItemGroup1
              checked: 1
              signer: 0
              page: 1
            -
              api_id: uniqueIdHere_2
              name: ''
              type: radio
              x: 112
              'y': 370
              width: 18
              height: 18
              required: false
              group: RadioItemGroup1
              checked: 0
              signer: 0
              page: 1
        form_field_groups:
          -
            group_id: RadioItemGroup1
            group_label: 'Radio Item Group 1'
            requirement: require_0-1
        requester_email_address: jack@hellosign.com
        test_mode: false
    UnclaimedDraftCreateEmbeddedRequestFormFieldRulesExample:
      summary: 'Form Fields Per Document and Rules Example'
      value:
        client_id: b6b8e7deaf8f0b95c029dca049356d4a2cf9710a
        file_url:
          - 'https://app.hellosign.com/docs/example_signature_request.pdf'
        form_fields_per_document:
          -
            -
              api_id: uniqueIdHere_1
              name: ''
              type: text
              x: 112
              'y': 328
              width: 100
              height: 16
              required: true
              signer: 0
              page: 1
              validation_type: numbers_only
            -
              api_id: uniqueIdHere_2
              name: ''
              type: signature
              x: 530
              'y': 415
              width: 120
              height: 30
              required: true
              signer: 0
              page: 1
        form_field_rules:
          -
            id: rule_1
            trigger_operator: AND
            triggers:
              -
                id: uniqueIdHere_1
                operator: is
                value: foo
            actions:
              -
                field_id: uniqueIdHere_2
                hidden: 1
                type: change-field-visibility
        requester_email_address: jack@hellosign.com
        test_mode: false
    UnclaimedDraftCreateEmbeddedRequestFormDataExample:
      summary: 'With File Example'
      value:
        client_id: b6b8e7deaf8f0b95c029dca049356d4a2cf9710a
        file:
          - '@NDA.pdf'
        requester_email_address: jack@hellosign.com
        test_mode: false
    UnclaimedDraftCreateEmbeddedWithTemplateRequestDefaultExample:
      summary: 'Default Example'
      value:
        client_id: b6b8e7deaf8f0b95c029dca049356d4a2cf9710a
        template_ids:
          - 61a832ff0d8423f91d503e76bfbcc750f7417c78
        requester_email_address: jack@hellosign.com
        signers:
          -
            role: Client
            name: George
            email_address: george@example.com
        ccs:
          -
            role: Accounting
            email_address: accounting@hellosign.com
        test_mode: false
    UnclaimedDraftCreateEmbeddedWithTemplateRequestFormDataExample:
      summary: 'With File Example'
      value:
        client_id: b6b8e7deaf8f0b95c029dca049356d4a2cf9710a
        template_ids:
          - 61a832ff0d8423f91d503e76bfbcc750f7417c78
        file:
          - '@NDA.pdf'
        requester_email_address: jack@hellosign.com
        signers:
          -
            role: Client
            name: George
            email_address: george@example.com
        ccs:
          -
            role: Accounting
            email_address: accounting@hellosign.com
        test_mode: false
    UnclaimedDraftEditAndResendRequestDefaultExample:
      summary: 'Default Example'
      value:
        client_id: b6b8e7deaf8f0b95c029dca049356d4a2cf9710a
        test_mode: false
    AccountGetResponseExample:
      summary: 'Account Get'
      value:
        account:
          account_id: 5008b25c7f67153e57d5a357b1687968068fb465
          email_address: me@hellosign.com
          is_locked: false
          is_paid_hs: true
          is_paid_hf: false
          quotas:
            api_signature_requests_left: 1250
            documents_left: null
            templates_left: null
          callback_url: null
          role_code: null
    AccountCreateResponseExample:
      summary: 'Account Create'
      value:
        account:
          account_id: a2b31224f7e6fb5581d2f8cbd91cf65fa2f86aae
          email_address: newuser@hellosign.com
          is_paid_hs: false
          is_paid_hf: false
          is_locked: false
          quotas:
            templates_left: 0
            api_signature_requests_left: 0
            documents_left: 3
          callback_url: null
          role_code: null
    AccountCreateOAuthResponseExample:
      summary: 'Account Create with OAuth Authorization'
      value:
        account:
          account_id: b4680b45053c7601ca1eee3b126eca6b2b0a0219
          email_address: jill@example.com
          callback_url: null
          role_code: null
        oauth_data:
          access_token: NWNiOTMxOGFkOGVjMDhhNTAxZN2NkNjgxMjMwOWJiYTEzZTBmZGUzMjMThhMzYyMzc=
          token_type: Bearer
          refresh_token: hNTI2MTFmM2VmZDQxZTZjOWRmZmFjZmVmMGMyNGFjMzI2MGI5YzgzNmE3
          expires_in: 86400
    AccountUpdateResponseExample:
      summary: 'Account Update'
      value:
        account:
          account_id: 5008b25c7f67153e57d5a357b1687968068fb465
          email_address: me@hellosign.com
          is_locked: false
          is_paid_hs: true
          is_paid_hf: false
          quotas:
            api_signature_requests_left: 1250
            documents_left: null
            templates_left: null
          callback_url: 'https://www.example.com/callback'
          role_code: null
    AccountVerifyFoundResponseExample:
      summary: 'Account Found'
      value:
        account:
          email_address: some_user@hellosign.com
    AccountVerifyNotFoundResponseExample:
      summary: 'Account Not Found'
      value: {}
    ApiAppCreateResponseExample:
      summary: 'API App'
      value:
        api_app:
          callback_url: null
          client_id: 0dd3b823a682527788c4e40cb7b6f7e9
          created_at: 1436232339
          domain: example.com
          is_approved: false
          name: 'My Production App'
          oauth:
            callback_url: 'http://example.com/oauth'
            scopes:
              - basic_account_info
              - request_signature
            secret: 98891a1b59f312d04cd88e4e0c498d75
          owner_account:
            account_id: dc5deeb9e10b044c591ef2475aafad1d1d3bd888
            email_address: john@example.com
          white_labeling_options:
            primary_button_color: '#00b3e6'
            primary_button_text_color: '#ffffff'
    ApiAppGetResponseExample:
      summary: 'API App'
      value:
        api_app:
          callback_url: null
          client_id: 0dd3b823a682527788c4e40cb7b6f7e9
          created_at: 1436232339
          domain: example.com
          is_approved: true
          name: 'My Production App'
          oauth:
            callback_url: 'http://example.com/oauth'
            scopes:
              - basic_account_info
              - request_signature
            secret: 98891a1b59f312d04cd88e4e0c498d75
          owner_account:
            account_id: dc5deeb9e10b044c591ef2475aafad1d1d3bd888
            email_address: john@example.com
    ApiAppListResponseExample:
      summary: 'API App List'
      value:
        api_apps:
          -
            callback_url: null
            client_id: 0dd3b823a682527788c4e40cb7b6f7e9
            created_at: 1436232339
            domain: example.com
            is_approved: true
            name: 'My Production App'
            oauth:
              callback_url: 'http://example.com/oauth'
              scopes:
                - basic_account_info
                - request_signature
              secret: 98891a1b59f312d04cd88e4e0c498d75
            owner_account:
              account_id: dc5deeb9e10b044c591ef2475aafad1d1d3bd888
              email_address: john@example.com
          -
            callback_url: null
            client_id: bff6d867fafcca27554cf89b1ca98793
            created_at: 1433458421
            domain: example.com
            is_approved: false
            name: 'My Other App'
            oauth: null
            owner_account:
              account_id: dc5deeb9e10b044c591ef2475aafad1d1d3bd888
              email_address: john@example.com
        list_info:
          num_pages: 1
          num_results: 2
          page: 1
          page_size: 20
    ApiAppUpdateResponseExample:
      summary: 'API App Update'
      value:
        api_app:
          callback_url: 'http://example.com/hellosign'
          client_id: 0dd3b823a682527788c4e40cb7b6f7e9
          created_at: 1436232339
          domain: example.com
          is_approved: false
          name: 'New Name'
          oauth:
            callback_url: 'http://example.com/oauth'
            scopes:
              - basic_account_info
              - request_signature
            secret: 98891a1b59f312d04cd88e4e0c498d75
          owner_account:
            account_id: dc5deeb9e10b044c591ef2475aafad1d1d3bd888
            email_address: john@example.com
          white_labeling_options:
            primary_button_color: '#00b3e6'
            primary_button_text_color: '#ffffff'
    BulkSendJobGetResponseExample:
      summary: 'Bulk Send Job'
      value:
        bulk_send_job:
          bulk_send_job_id: 6e683bc0369ba3d5b6f43c2c22a8031dbf6bd174
          total: 1
          is_creator: true
          created_at: 1532640962
        list_info:
          page: 1
          num_pages: 1
          num_results: 1
          page_size: 20
        signature_requests:
          -
            signature_request_id: fa5c8a0b0f492d768749333ad6fcc214c111e967
            title: 'Purchase Agreement'
            subject: 'Purchase Agreement'
            message: 'Please sign and return.'
            is_complete: true
            is_declined: false
            has_error: false
            custom_fields: []
            response_data:
              -
                api_id: 80c678_1
                name: 'Needs Express Shipping'
                signature_id: 78caf2a1d01cd39cea2bc1cbb340dac3
                value: true
                type: checkbox
              -
                api_id: 80c678_2
                name: 'Shipping Address'
                signature_id: 78caf2a1d01cd39cea2bc1cbb340dac3
                value: '1212 Park Avenue'
                type: text
              -
                api_id: 80c678_3
                name: DateSigned
                signature_id: 78caf2a1d01cd39cea2bc1cbb340dac3
                value: 09/01/2012
                type: text
            signing_url: null
            signing_redirect_url: null
            details_url: 'https://app.hellosign.com/home/manage?guid=fa5c8a0b0f492d768749333ad6fcc214c111e967'
            requester_email_address: me@hellosign.com
            signatures:
              -
                signature_id: 78caf2a1d01cd39cea2bc1cbb340dac3
                signer_email_address: john@example.com
                signer_name: 'John Doe'
                signer_role: null
                order: null
                status_code: signed
                signed_at: 1346521550
                last_viewed_at: 1346521483
                last_reminded_at: null
                has_pin: false
            cc_email_addresses: []
            bulk_send_job_id: 6e683bc0369ba3d5b6f43c2c22a8031dbf6bd174
    BulkSendJobListResponseExample:
      summary: 'Bulk Send Job List'
      value:
        list_info:
          page: 1
          num_pages: 1
          num_results: 2
          page_size: 20
        bulk_send_jobs:
          -
            bulk_send_job_id: fef03f144d9384737a98ff2ca6c1fd9d7bc2239a
            total: 250
            is_creator: false
            created_at: 1532740871
          -
            bulk_send_job_id: 6e683bc0369ba3d5b6f43c2c22a8031dbf6bd174
            total: 1
            is_creator: true
            created_at: 1532640962
    EmbeddedEditUrlResponseExample:
      summary: 'Embedded Edit URL'
      value:
        embedded:
          edit_url: 'https://app.hellosign.com/editor/embeddedTemplate?token=70ca8e5779c9a931125db09f3170efc1&amp;root_snapshot_guids[]=a97ce534aec6cbe09e70cdd55112e31bd320ed00&amp;edited_template_guid=61a832ff0d8423f91d503e76bfbcc750f7417c78&amp;guid=56ecaf0659aa29215d2ee489c0c88ff8c9496099&amp;force_signer_input=1'
          expires_at: 1634313821
    EmbeddedSignUrlResponseExample:
      summary: 'Embedded Sign URL'
      value:
        embedded:
          sign_url: 'https://app.hellosign.com/editor/embeddedSign?signature_id=50e3542f738adfa7ddd4cbd4c00d2a8ab6e4194b&amp;token=b6b8e7deaf8f0b95c029dca049356d4a2cf9710a'
          expires_at: 1634313821
    ErrorResponseExample:
      summary: 'Error Response Example'
      value:
        error_msg: 'This value should not be blank'
        error_path: 'cc_email_addresses[0]'
        error_name: bad_request
    EventCallbackAccountRequestExample:
      summary: 'Event Callback Account Example'
      value:
        json:
          account_guid: 63522885f9261e2b04eea043933ee7313eb674fd
          client_id: null
          event:
            event_time: '1348177752'
            event_type: account_confirmed
            event_hash: 3a31324d1919d7cdc849ff407adf38fc01e01107d9400b028ff8c892469ca947
            event_metadata:
              related_signature_id: ad4d8a769b555fa5ef38691465d426682bf2c992
              reported_for_account_id: 63522885f9261e2b04eea043933ee7313eb674fd
              reported_for_app_id: null
          account:
            account_id: 5008b25c7f67153e57d5a357b1687968068fb465
            email_address: me@hellosign.com
            is_locked: false
            is_paid_hs: true
            is_paid_hf: false
            quotas:
              api_signature_requests_left: 1250
              documents_left: null
              templates_left: null
            callback_url: null
            role_code: null
    EventCallbackSignatureRequestExample:
      summary: 'Event Callback Signature Request Example'
      value:
        json:
          account_guid: 63522885f9261e2b04eea043933ee7313eb674fd
          client_id: null
          event:
            event_time: '1348177752'
            event_type: signature_request_sent
            event_hash: 3a31324d1919d7cdc849ff407adf38fc01e01107d9400b028ff8c892469ca947
            event_metadata:
              related_signature_id: ad4d8a769b555fa5ef38691465d426682bf2c992
              reported_for_account_id: 63522885f9261e2b04eea043933ee7313eb674fd
              reported_for_app_id: null
          signature_request:
            signature_request_id: fa5c8a0b0f492d768749333ad6fcc214c111e967
            title: 'Purchase Agreement'
            original_title: 'Purchase Agreement'
            subject: 'Purchase Agreement'
            message: 'Please sign and return.'
            metadata: {}
            created_at: 1570471067
            is_complete: true
            is_declined: false
            has_error: false
            custom_fields: []
            response_data:
              -
                api_id: 80c678_1
                name: 'Needs Express Shipping'
                signature_id: 78caf2a1d01cd39cea2bc1cbb340dac3
                value: true
                type: checkbox
              -
                api_id: 80c678_2
                name: 'Shipping Address'
                signature_id: 78caf2a1d01cd39cea2bc1cbb340dac3
                value: '1212 Park Avenue'
                type: text
              -
                api_id: 80c678_3
                name: DateSigned
                signature_id: 78caf2a1d01cd39cea2bc1cbb340dac3
                value: 09/01/2012
                type: text
            signing_url: null
            signing_redirect_url: null
            details_url: 'https://app.hellosign.com/home/manage?guid=fa5c8a0b0f492d768749333ad6fcc214c111e967'
            requester_email_address: me@hellosign.com
            signatures:
              -
                signature_id: 78caf2a1d01cd39cea2bc1cbb340dac3
                signer_email_address: john@example.com
                signer_name: 'John Doe'
                signer_role: null
                order: null
                status_code: signed
                signed_at: 1346521550
                last_viewed_at: 1346521483
                last_reminded_at: null
                has_pin: false
                has_sms_auth: false
            cc_email_addresses: []
    EventCallbackTemplateRequestExample:
      summary: 'Event Callback Template Example'
      value:
        json:
          account_guid: 63522885f9261e2b04eea043933ee7313eb674fd
          client_id: null
          event:
            event_time: '1348177752'
            event_type: template_created
            event_hash: 3a31324d1919d7cdc849ff407adf38fc01e01107d9400b028ff8c892469ca947
            event_metadata:
              related_signature_id: null
              reported_for_account_id: 63522885f9261e2b04eea043933ee7313eb674fd
              reported_for_app_id: null
          template:
            template_id: f57db65d3f933b5316d398057a36176831451a35
            title: 'Mutual NDA'
            message: 'Please sign this NDA as soon as possible.'
            updated_at: 1570471067
            is_embedded: false
            metadata: {}
            signer_roles:
              -
                name: 'Outside Vendor'
                order: 0
              -
                name: 'Internal Manager'
                order: 1
            cc_roles:
              -
                name: 'Corporate Attorney'
            documents:
              -
                index: 0
                name: mutual_nda.pdf
                field_groups:
                  - { name: group1, rule: require_1-ormore }
                form_fields:
                  - { api_id: b65e03_10, name: DepartmentA, type: checkbox, x: 117, 'y': 19, width: 15, height: 15, required: false, group: group1 }
                  - { api_id: b65e03_11, name: DepartmentB, type: checkbox, x: 118, 'y': 41, width: 15, height: 15, required: false, group: group1 }
                  - { api_id: 0ec7a7_1, name: VendorName, type: text, x: 160, 'y': 141, width: 80, height: 30, required: true, group: null }
                  - { api_id: 0ec7a7_2, name: VendorTitle, type: text, x: 160, 'y': 181, width: 80, height: 30, required: true, group: null }
                  - { api_id: 0ec7a7_3, name: ManagerName, type: text, x: 160, 'y': 221, width: 80, height: 30, required: true, group: null }
                  - { api_id: 0ec7a7_4, name: ManagerTitle, type: text, x: 160, 'y': 251, width: 80, height: 30, required: true, group: null }
                  - { api_id: 0ec7a7_5, name: DateSigned, type: date_signed, x: 523, 'y': 28, width: 105, height: 16, required: true, group: null }
                custom_fields:
                  - { name: 'Effective Date', type: text }
            accounts:
              -
                account_id: 5008b25c7f67153e57d5a357b1687968068fb465
                email_address: me@hellosign.com
    OAuthTokenGenerateResponseExample:
      summary: 'Retrieving the OAuth token'
      value:
        access_token: NWNiOTMxOGFkOGVjMDhhNTAxZN2NkNjgxMjMwOWJiYTEzZTBmZGUzMjMThhMzYyMzc=
        token_type: Bearer
        refresh_token: hNTI2MTFmM2VmZDQxZTZjOWRmZmFjZmVmMGMyNGFjMzI2MGI5YzgzNmE3
        expires_in: 86400
        state: 900e06e2
    OAuthTokenRefreshResponseExample:
      summary: 'Refresh an existing OAuth token'
      value:
        access_token: MDZhYzBlMGI1YzQ0ZjI1ZjYzYmUyNmMzZWQ5ZGNmOGYyNmQxMmMyMmQ2NmNiY2M3NW=
        expires_in: 86400
        refresh_token: hNTI2MTFmM2VmZDQxZTZjOWRmZmFjZmVmMGMyNGFjMzI2MGI5YzgzNmE3
        token_type: Bearer
    ReportCreateResponseExample:
      summary: Report
      value:
        report:
          success: 'Your request is being processed. You will receive an email when the report is ready.'
          start_date: 09/01/2020
          end_date: 09/02/2020
          report_type:
            - user_activity
            - document_status
    SignatureRequestCreateEmbeddedResponseExample:
      summary: 'Create Embedded Signature Request'
      value:
        signature_request:
          signature_request_id: a9f4825edef25f47e7b4c14ce8100d81d1693160
          title: 'NDA with Acme Co.'
          original_title: 'The NDA we talked about'
          subject: 'The NDA we talked about'
          message: 'Please sign this NDA and then we can discuss more. Let me know if you have any questions.'
          metadata: {}
          created_at: 1570471067
          is_complete: false
          is_declined: false
          has_error: false
          custom_fields: []
          response_data: []
          signing_url: 'https://app.hellosign.com/sign/a9f4825edef25f47e7b4c14ce8100d81d1693160'
          signing_redirect_url: null
          details_url: 'https://app.hellosign.com/home/manage?guid=a9f4825edef25f47e7b4c14ce8100d81d1693160'
          requester_email_address: me@hellosign.com
          signatures:
            -
              signature_id: 78caf2a1d01cd39cea2bc1cbb340dac3
              signer_email_address: jack@example.com
              signer_name: Jack
              signer_role: null
              order: 0
              status_code: awaiting_signature
              signed_at: null
              last_viewed_at: null
              last_reminded_at: null
              has_pin: false
              has_sms_auth: false
            -
              signature_id: 616629ed37f8588d28600be17ab5d6b7
              signer_email_address: jill@example.com
              signer_name: Jill
              signer_role: null
              order: 1
              status_code: awaiting_signature
              signed_at: null
              last_viewed_at: null
              last_reminded_at: null
              has_pin: false
              has_sms_auth: false
          cc_email_addresses:
            - lawyer@hellosign.com
            - lawyer@example.com
    SignatureRequestCreateEmbeddedWithTemplateResponseExample:
      summary: 'Create Embedded Signature Request With Template'
      value:
        signature_request:
          signature_request_id: 17d163069282df5eb63857d31ff4a3bffa9e46c0
          title: 'Purchase Order'
          original_title: 'Purchase Order'
          subject: 'Purchase Order'
          metadata: {}
          message: 'Glad we could come to an agreement.'
          is_complete: false
          is_declined: false
          has_error: false
          custom_fields:
            -
              name: Cost
              value: '$20,000'
              type: text
              editor: Client
              required: true
          response_data: []
          signing_url: 'https://app.hellosign.com/sign/17d163069282df5eb63857d31ff4a3bffa9e46c0'
          signing_redirect_url: null
          details_url: 'https://app.hellosign.com/home/manage?guid=17d163069282df5eb63857d31ff4a3bffa9e46c0'
          requester_email_address: me@hellosign.com
          signatures:
            -
              signature_id: 78caf2a1d01cd39cea2bc1cbb340dac3
              signer_email_address: george@example.com
              signer_name: George
              signer_role: Client
              order: null
              status_code: awaiting_signature
              signed_at: null
              last_viewed_at: null
              last_reminded_at: null
              has_pin: false
              has_sms_auth: false
          cc_email_addresses:
            - accounting@hellosign.com
    SignatureRequestGetResponseExample:
      summary: 'Get Signature Request'
      value:
        signature_request:
          signature_request_id: fa5c8a0b0f492d768749333ad6fcc214c111e967
          title: 'Purchase Agreement'
          original_title: 'Purchase Agreement'
          subject: 'Purchase Agreement'
          message: 'Please sign and return.'
          metadata: {}
          created_at: 1570471067
          is_complete: true
          is_declined: false
          has_error: false
          custom_fields: []
          response_data:
            -
              api_id: 80c678_1
              name: 'Needs Express Shipping'
              signature_id: 78caf2a1d01cd39cea2bc1cbb340dac3
              value: true
              type: checkbox
            -
              api_id: 80c678_2
              name: 'Shipping Address'
              signature_id: 78caf2a1d01cd39cea2bc1cbb340dac3
              value: '1212 Park Avenue'
              type: text
            -
              api_id: 80c678_3
              name: DateSigned
              signature_id: 78caf2a1d01cd39cea2bc1cbb340dac3
              value: 09/01/2012
              type: text
          signing_url: null
          signing_redirect_url: null
          details_url: 'https://app.hellosign.com/home/manage?guid=fa5c8a0b0f492d768749333ad6fcc214c111e967'
          requester_email_address: me@hellosign.com
          signatures:
            -
              signature_id: 78caf2a1d01cd39cea2bc1cbb340dac3
              signer_email_address: john@example.com
              signer_name: 'John Doe'
              signer_role: null
              order: null
              status_code: signed
              signed_at: 1346521550
              last_viewed_at: 1346521483
              last_reminded_at: null
              has_pin: false
              has_sms_auth: false
          cc_email_addresses: []
    SignatureRequestFilesResponseExample:
      summary: 'Signature Requests Files'
      value:
        file_url: 'https://s3.amazonaws.com/hellofax_uploads/super_groups/2016/03/18/9aba07a585d7e223b4f137c8981c5e5892893c00/merged-completed.pdf?AWSAccessKeyId=AKIAJWEWDFQHQMBECJZA&amp;Expires=1452868903&amp;Signature=M%2FNDS%2BQre8xjPvzm7fHf%2BjO8Zbc%3D'
        expires_at: 1458605123
    SignatureRequestListResponseExample:
      summary: 'List Signature Requests'
      value:
        list_info:
          page: 1
          num_pages: 1
          num_results: 2
          page_size: 20
        signature_requests:
          -
            signature_request_id: d10338cad145e1cb68afc828
            title: FHA
            original_title: FHA
            subject: FHA
            message: 'Let me know if you two have any questions.'
            metadata: {}
            created_at: 1570471067
            is_complete: false
            is_declined: false
            has_error: false
            custom_fields: []
            response_data: []
            signing_url: 'https://app.hellosign.com/sign/d10338cad145e1cb68afc828'
            signing_redirect_url: null
            details_url: 'https://app.hellosign.com/home/manage?guid=d10338cad145e1cb68afc828'
            requester_email_address: me@hellosign.com
            signatures:
              -
                signature_id: 78caf2a1d01cd39cea2bc1cbb340dac3
                signer_email_address: george-jetson@example.com
                signer_name: 'George Jetson'
                signer_role: null
                order: 0
                status_code: awaiting_signature
                signed_at: null
                last_viewed_at: null
                last_reminded_at: null
                has_pin: false
                has_sms_auth: false
              -
                signature_id: 616629ed37f8588d28600be17ab5d6b7
                signer_email_address: jane-jetson@example.com
                signer_name: 'Jane Jetson'
                signer_role: null
                order: 1
                status_code: awaiting_signature
                signed_at: null
                last_viewed_at: null
                last_reminded_at: null
                has_pin: false
                has_sms_auth: false
            cc_email_addresses:
              - stan@example.com
          -
            signature_request_id: fa5c8a0b0f492d768749333a
            title: 'Purchase Agreement'
            original_title: 'Purchase Agreement'
            subject: 'Purchase Agreement'
            message: 'Please sign and return.'
            metadata: {}
            is_complete: true
            is_declined: false
            has_error: false
            custom_fields: []
            response_data:
              -
                api_id: uniqueIdHere_1
                name: 'Needs Express Shipping'
                signature_id: 5687fb7bd5aaacb1689728762b600c74
                value: true
                type: checkbox
              -
                api_id: uniqueIdHere_2
                name: 'Shipping Address'
                signature_id: 5687fb7bd5aaacb1689728762b600c74
                value: '1212 Park Avenue'
                type: text
              -
                api_id: uniqueIdHere_3
                name: DateSigned
                signature_id: 5687fb7bd5aaacb1689728762b600c74
                value: 09/01/2012
                type: date_signed
            signing_url: null
            signing_redirect_url: null
            details_url: 'https://app.hellosign.com/home/manage?guid=fa5c8a0b0f492d768749333a'
            requester_email_address: me@hellosign.com
            signatures:
              -
                signature_id: 5687fb7bd5aaacb1689728762b600c74
                signer_email_address: john@example.com
                signer_name: 'John Doe'
                signer_role: null
                order: null
                status_code: signed
                signed_at: 1346521550
                last_viewed_at: 1346521483
                last_reminded_at: null
            cc_email_addresses: []
    SignatureRequestReleaseHoldResponseExample:
      summary: 'Send Signature Release Hold'
      value:
        signature_request:
          signature_request_id: fa5c8a0b0f492d768749333ad6fcc214c111e967
          title: ok
          subject: ok
          message: null
          is_complete: false
          is_declined: false
          has_error: false
          custom_fields: []
          response_data: []
          signing_url: 'https://app.hellosign.com/sign/fa5c8a0b0f492d768749333ad6fcc214c111e967'
          signing_redirect_url: null
          details_url: 'https://app.hellosign.com/home/manage?guid=fa5c8a0b0f492d768749333ad6fcc214c111e967'
          requester_email_address: me@hellosign.com
          signatures:
            -
              signature_id: 5687fb7bd5aaacb1689728762b600c74
              signer_email_address: john@example.com
              signer_name: 'John Doe'
              order: 0
              status_code: awaiting_signature
              signed_at: null
              last_viewed_at: null
              last_reminded_at: 1346616433
              has_pin: false
              has_sms_auth: false
          cc_email_addresses: []
    SignatureRequestRemindResponseExample:
      summary: 'Send Signature Request Reminder'
      value:
        signature_request:
          signature_request_id: 2f9781e1a8e2045224d808c153c2e1d3df6f8f2f
          title: ok
          original_title: ok
          subject: ok
          metadata: {}
          message: null
          created_at: 1570471067
          is_complete: false
          is_declined: false
          has_error: false
          custom_fields: []
          response_data: []
          signing_url: 'https://app.hellosign.com/sign/2f9781e1a8e2045224d808c153c2e1d3df6f8f2f'
          signing_redirect_url: null
          details_url: 'https://app.hellosign.com/home/manage?guid=2f9781e1a8e2045224d808c153c2e1d3df6f8f2f'
          requester_email_address: me@hellosign.com
          signatures:
            -
              signature_id: 5687fb7bd5aaacb1689728762b600c74
              signer_email_address: john@example.com
              signer_name: 'John Doe'
              order: 0
              status_code: awaiting_signature
              signed_at: null
              last_viewed_at: null
              last_reminded_at: 1346616433
              has_pin: false
              has_sms_auth: false
          cc_email_addresses: []
    SignatureRequestSendResponseExample:
      summary: 'Send Signature Request'
      value:
        signature_request:
          signature_request_id: 2b388914e3ae3b738bd4e2ee2850c677e6dc53d2
          title: 'NDA with Acme Co.'
          original_title: 'The NDA we talked about'
          subject: 'The NDA we talked about'
          message: 'Please sign this NDA and then we can discuss more. Let me know if you have any questions.'
          test_mode: true
          metadata:
            custom_id: '1234'
            custom_text: 'NDA #9'
          created_at: 1570471067
          is_complete: false
          is_declined: false
          has_error: false
          custom_fields: []
          response_data: []
          signing_url: 'https://app.hellosign.com/sign/2b388914e3ae3b738bd4e2ee2850c677e6dc53d2'
          signing_redirect_url: null
          final_copy_uri: /v3/signature_request/final_copy/2b388914e3ae3b738bd4e2ee2850c677e6dc53d2
          files_url: 'https://api.hellosign.com/v3/signature_request/files/2b388914e3ae3b738bd4e2ee2850c677e6dc53d2'
          details_url: 'https://app.hellosign.com/home/manage?guid=2b388914e3ae3b738bd4e2ee2850c677e6dc53d2'
          requester_email_address: me@hellosign.com
          signatures:
            -
              signature_id: 78caf2a1d01cd39cea2bc1cbb340dac3
              signer_email_address: jack@example.com
              signer_name: Jack
              signer_role: null
              order: 0
              status_code: awaiting_signature
              signed_at: null
              last_viewed_at: null
              last_reminded_at: null
              has_pin: false
              has_sms_auth: false
            -
              signature_id: 616629ed37f8588d28600be17ab5d6b7
              signer_email_address: jill@example.com
              signer_name: Jill
              signer_role: null
              order: 1
              status_code: awaiting_signature
              signed_at: null
              last_viewed_at: null
              last_reminded_at: null
              has_pin: false
              has_sms_auth: false
          cc_email_addresses:
            - lawyer1@hellosign.com
            - lawyer2@example.com
    SignatureRequestSendWithTemplateResponseExample:
      summary: 'Send Signature Request With Template'
      value:
        signature_request:
          signature_request_id: 17d163069282df5eb63857d31ff4a3bffa9e46c0
          title: 'Purchase Order'
          original_title: 'Purchase Order'
          subject: 'Purchase Order'
          metadata: {}
          message: 'Glad we could come to an agreement.'
          created_at: 1570471067
          is_complete: false
          is_declined: false
          has_error: false
          custom_fields:
            -
              name: Cost
              value: '$20,000'
              type: text
              editor: Client
              required: true
          response_data: []
          signing_url: 'https://app.hellosign.com/sign/17d163069282df5eb63857d31ff4a3bffa9e46c0'
          signing_redirect_url: null
          details_url: 'https://app.hellosign.com/home/manage?guid=17d163069282df5eb63857d31ff4a3bffa9e46c0'
          requester_email_address: me@hellosign.com
          signatures:
            -
              signature_id: 10ab1cd037d9b6cba7975d61ff428c8d
              signer_email_address: george@example.com
              signer_name: George
              signer_role: Client
              order: null
              status_code: awaiting_signature
              signed_at: null
              last_viewed_at: null
              last_reminded_at: null
              has_pin: false
              has_sms_auth: false
          cc_email_addresses:
            - accounting@hellosign.com
    SignatureRequestUpdateResponseExample:
      summary: 'Signature Request Update'
      value:
        signature_request:
          signature_request_id: fa5c8a0b0f492d768749333ad6fcc214c111e967
          title: 'Purchase Agreement'
          subject: 'Purchase Agreement'
          message: 'Please sign and return.'
          created_at: 1570471067
          is_complete: true
          has_error: false
          custom_fields: []
          signing_url: null
          signing_redirect_url: null
          details_url: 'https://app.hellosign.com/home/manage?guid=fa5c8a0b0f492d768749333ad6fcc214c111e967'
          requester_email_address: me@hellosign.com
          signatures:
            -
              signature_id: 78caf2a1d01cd39cea2bc1cbb340dac3
              signer_email_address: danaerys@mereen.gov.ws
              signer_name: 'Danaerys Stormborn'
              signer_role: null
              order: null
              status_code: awaiting_signature
              signed_at: null
              last_viewed_at: null
              last_reminded_at: null
              has_pin: false
              has_sms_auth: false
          cc_email_addresses: []
    SignatureRequestBulkSendWithTemplateResponseExample:
      summary: 'Send Signature Request With Template'
      value:
        bulk_send_job:
          bulk_send_job_id: 4bce667844dc3711d05e7aa4a1b5a6b64b738b2b
          total: 1
          is_creator: true
          created_at: 1532640962
    SignatureRequestBulkCreateEmbeddedWithTemplateResponseExample:
      summary: 'Bulk Send Create Embedded Signature Request With Template'
      value:
        bulk_send_job:
          bulk_send_job_id: ccaf88244ef006b6e31ebba5ed4cb53b3131d9ac
          total: 3
          is_creator: true
          created_at: 1543556038
    TeamAddMemberResponseExample:
      summary: 'Team Add Member'
      value:
        team:
          name: 'New Team Name'
          accounts:
            -
              account_id: 5008b25c7f67153e57d5a357b1687968068fb465
              email_address: me@hellosign.com
              is_locked: false
              is_paid_hs: true
              is_paid_hf: false
              quotas:
                templates_left: null
                documents_left: null
                api_signature_requests_left: 1250
              role_code: a
          invited_accounts:
            -
              account_id: 8e239b5a50eac117fdd9a0e2359620aa57cb2463
              email_address: george@hellofax.com
              is_locked: false
              is_paid_hs: false
              is_paid_hf: false
              quotas:
                templates_left: 0
                documents_left: 3
                api_signature_requests_left: 0
    TeamCreateResponseExample:
      summary: 'Team Create'
      value:
        team:
          name: 'New Team Name'
          accounts:
            -
              account_id: 5008b25c7f67153e57d5a357b1687968068fb465
              email_address: me@hellosign.com
              is_locked: false
              is_paid_hs: true
              is_paid_hf: false
              quotas:
                templates_left: null
                documents_left: null
                api_signature_requests_left: 1250
              role_code: a
          invited_accounts: []
    TeamGetResponseExample:
      summary: 'Team Get'
      value:
        team:
          name: 'Team HelloSign'
          accounts:
            -
              account_id: 5008b25c7f67153e57d5a357b1687968068fb465
              email_address: me@hellosign.com
              is_locked: false
              is_paid_hs: true
              is_paid_hf: false
              quotas:
                templates_left: null
                documents_left: null
                api_signature_requests_left: 1250
              role_code: a
            -
              account_id: d3d3d7b98d80b67d07740df7cdfd1f49fa8e2b82
              email_address: teammate@hellosign.com
              is_locked: false
              is_paid_hs: true
              is_paid_hf: false
              quotas:
                templates_left: null
                documents_left: null
                api_signature_requests_left: 1250
              role_code: m
          invited_accounts: []
    TeamRemoveMemberResponseExample:
      summary: 'Team Remove Member'
      value:
        team:
          name: 'Team HelloSign'
          accounts:
            -
              account_id: 5008b25c7f67153e57d5a357b1687968068fb465
              email_address: me@hellosign.com
              is_locked: false
              is_paid_hs: true
              is_paid_hf: false
              quotas:
                templates_left: null
                documents_left: null
                api_signature_requests_left: 1250
              role_code: a
          invited_accounts: []
    TeamUpdateResponseExample:
      summary: 'Team Update'
      value:
        team:
          name: 'New Team Name'
          accounts:
            -
              account_id: 5008b25c7f67153e57d5a357b1687968068fb465
              email_address: me@hellosign.com
              is_locked: false
              is_paid_hs: true
              is_paid_hf: false
              quotas:
                templates_left: null
                documents_left: null
                api_signature_requests_left: 1250
              role_code: a
          invited_accounts: []
    TeamDoesNotExistResponseExample:
      summary: 'Team Does Not Exist'
      value:
        error:
          error_msg: 'Team does not exist'
          error_name: not_found
    TemplateAddUserResponseExample:
      summary: 'Add User to Template'
      value:
        template:
          template_id: 21f920ec2b7f4b6bb64d3ed79f26303843046536
          title: 'Mutual NDA'
          message: 'Please sign this NDA as soon as possible.'
          updated_at: 1570471067
          is_embedded: false
          metadata: {}
          signer_roles:
            -
              name: 'Outside Vendor'
              order: 0
            -
              name: 'Internal Manager'
              order: 1
          cc_roles:
            -
              name: 'Corporate Attorney'
          documents:
            -
              index: 0
              name: mutual_nda.pdf
              field_groups: []
              form_fields:
                -
                  api_id: 0ec7a7_1
                  name: VendorName
                  type: text
                  x: 160
                  'y': 141
                  width: 80
                  height: 30
                  required: true
                  group: null
                -
                  api_id: 0ec7a7_2
                  name: VendorTitle
                  type: text
                  x: 160
                  'y': 181
                  width: 80
                  height: 30
                  required: true
                  group: null
                -
                  api_id: 0ec7a7_3
                  name: ManagerName
                  type: text
                  x: 160
                  'y': 221
                  width: 80
                  height: 30
                  required: true
                  group: null
                -
                  api_id: 0ec7a7_4
                  name: ManagerTitle
                  type: text
                  x: 160
                  'y': 251
                  width: 80
                  height: 30
                  required: true
                  group: null
                -
                  api_id: 0ec7a7_5
                  name: DateSigned
                  type: date_signed
                  x: 523
                  'y': 28
                  width: 105
                  height: 16
                  required: true
                  group: null
              custom_fields:
                -
                  name: 'Effective Date'
                  type: text
          accounts:
            -
              account_id: 5008b25c7f67153e57d5a357b1687968068fb465
              email_address: me@hellosign.com
            -
              account_id: ''
              email_address: teammate@hellosign.com
    TemplateCreateEmbeddedDraftResponseExample:
      summary: 'Create Embedded Draft Template'
      value:
        template:
          template_id: 61a832ff0d8423f91d503e76bfbcc750f7417c78
          edit_url: 'https://app.hellosign.com/editor/embeddedTemplate?token=8d80ead273a0405d6844005a20beb99b&amp;root_snapshot_guids%5B0%5D=74cc144a76afa5bdca3378278e9a6ac3c2947c92&amp;snapshot_access_guids%5B0%5D=9ceac764&amp;guid=61a832ff0d8423f91d503e76bfbcc750f7417c78'
          expires_at: 1427306768
    TemplateFilesResponseExample:
      summary: 'Template Files'
      value:
        file_url: 'https://s3.amazonaws.com/hellofax_uploads/super_groups/2016/03/18/9aba07a585d7e223b4f137c8981c5e5892893c00/merged-completed.pdf?AWSAccessKeyId=AKIAJWEWDFQHQMBECJZA&amp;Expires=1452868903&amp;Signature=M%2FNDS%2BQre8xjPvzm7fHf%2BjO8Zbc%3D'
        expires_at: 1458605123
    TemplateGetResponseExample:
      summary: 'Get Template'
      value:
        template:
          template_id: f57db65d3f933b5316d398057a36176831451a35
          title: 'Mutual NDA'
          message: 'Please sign this NDA as soon as possible.'
          updated_at: 1570471067
          is_embedded: false
          metadata: {}
          signer_roles:
            -
              name: 'Outside Vendor'
              order: 0
            -
              name: 'Internal Manager'
              order: 1
          cc_roles:
            -
              name: 'Corporate Attorney'
          documents:
            -
              index: 0
              name: mutual_nda.pdf
              field_groups:
                -
                  name: group1
                  rule: require_1-ormore
              form_fields:
                -
                  api_id: b65e03_10
                  name: DepartmentA
                  type: checkbox
                  x: 117
                  'y': 19
                  width: 15
                  height: 15
                  required: false
                  group: group1
                -
                  api_id: b65e03_11
                  name: DepartmentB
                  type: checkbox
                  x: 118
                  'y': 41
                  width: 15
                  height: 15
                  required: false
                  group: group1
                -
                  api_id: 0ec7a7_1
                  name: VendorName
                  type: text
                  x: 160
                  'y': 141
                  width: 80
                  height: 30
                  required: true
                  group: null
                -
                  api_id: 0ec7a7_2
                  name: VendorTitle
                  type: text
                  x: 160
                  'y': 181
                  width: 80
                  height: 30
                  required: true
                  group: null
                -
                  api_id: 0ec7a7_3
                  name: ManagerName
                  type: text
                  x: 160
                  'y': 221
                  width: 80
                  height: 30
                  required: true
                  group: null
                -
                  api_id: 0ec7a7_4
                  name: ManagerTitle
                  type: text
                  x: 160
                  'y': 251
                  width: 80
                  height: 30
                  required: true
                  group: null
                -
                  api_id: 0ec7a7_5
                  name: DateSigned
                  type: date_signed
                  x: 523
                  'y': 28
                  width: 105
                  height: 16
                  required: true
                  group: null
              custom_fields:
                -
                  name: 'Effective Date'
                  type: text
          accounts:
            -
              account_id: 5008b25c7f67153e57d5a357b1687968068fb465
              email_address: me@hellosign.com
    TemplateListResponseExample:
      summary: 'List Templates'
      value:
        list_info:
          page: 1
          num_pages: 1
          num_results: 2
          page_size: 20
        templates:
          -
            template_id: c26b8a16784a872da37ea946b9ddec7c1e11dff6
            title: 'Purchase order'
            message: ''
            updated_at: 1570471067
            is_embedded: false
            metadata: {}
            signer_roles:
              -
                name: Client
            cc_roles:
              -
                name: Accounting
            documents:
              -
                index: 0
                name: purchase_order.pdf
                field_groups: []
                form_fields: []
                custom_fields:
                  - { name: Cost, type: text }
            accounts:
              -
                account_id: 5008b25c7f67153e57d5a357b1687968068fb465
                email_address: me@hellosign.com
          -
            template_id: 21f920ec2b7f4b6bb64d3ed79f26303843046536
            title: 'Mutual NDA'
            message: 'Please sign this NDA as soon as possible.'
            updated_at: 1329478947
            is_embedded: false
            metadata: {}
            signer_roles:
              -
                name: 'Outside Vendor'
                order: 0
              -
                name: 'Internal Manager'
                order: 1
            cc_roles:
              -
                name: 'Corporate Attorney'
            documents:
              -
                index: 0
                name: mutual_nda.pdf
                field_groups: []
                form_fields:
                  - { api_id: 0ec7a7_1, name: VendorName, type: text, x: 160, 'y': 141, width: 80, height: 30, required: true, group: null }
                  - { api_id: 0ec7a7_2, name: VendorTitle, type: text, x: 160, 'y': 181, width: 80, height: 30, required: true, group: null }
                  - { api_id: 0ec7a7_3, name: ManagerName, type: text, x: 160, 'y': 221, width: 80, height: 30, required: true, group: null }
                  - { api_id: 0ec7a7_4, name: ManagerTitle, type: text, x: 160, 'y': 251, width: 80, height: 30, required: true, group: null }
                  - { api_id: 0ec7a7_5, name: DateSigned, type: date_signed, x: 523, 'y': 28, width: 105, height: 16, required: true, group: null }
                custom_fields:
                  - { name: 'Effective Date', type: text }
            accounts:
              -
                account_id: 5008b25c7f67153e57d5a357b1687968068fb465
                email_address: me@hellosign.com
    TemplateRemoveUserResponseExample:
      summary: 'Remove User from Template'
      value:
        template:
          template_id: 21f920ec2b7f4b6bb64d3ed79f26303843046536
          title: 'Mutual NDA'
          message: 'Please sign this NDA as soon as possible.'
          updated_at: 1570471067
          is_embedded: false
          metadata: {}
          signer_roles:
            -
              name: 'Outside Vendor'
              order: 0
            -
              name: 'Internal Manager'
              order: 1
          cc_roles:
            -
              name: 'Corporate Attorney'
          documents:
            -
              index: 0
              name: mutual_nda.pdf
              field_groups: []
              form_fields:
                -
                  api_id: 0ec7a7_1
                  name: VendorName
                  type: text
                  x: 160
                  'y': 141
                  width: 80
                  height: 30
                  required: true
                  group: null
                -
                  api_id: 0ec7a7_2
                  name: VendorTitle
                  type: text
                  x: 160
                  'y': 181
                  width: 80
                  height: 30
                  required: true
                  group: null
                -
                  api_id: 0ec7a7_3
                  name: ManagerName
                  type: text
                  x: 160
                  'y': 221
                  width: 80
                  height: 30
                  required: true
                  group: null
                -
                  api_id: 0ec7a7_4
                  name: ManagerTitle
                  type: text
                  x: 160
                  'y': 251
                  width: 80
                  height: 30
                  required: true
                  group: null
                -
                  api_id: 0ec7a7_5
                  name: DateSigned
                  type: date_signed
                  x: 523
                  'y': 28
                  width: 105
                  height: 16
                  required: true
                  group: null
              custom_fields:
                -
                  name: 'Effective Date'
                  type: text
          accounts:
            -
              account_id: 5008b25c7f67153e57d5a357b1687968068fb465
              email_address: me@hellosign.com
    TemplateUpdateFilesResponseExample:
      summary: 'Update Template Files'
      value:
        template:
          template_id: f57db65d3f933122019888057a36176831451a35
    UnclaimedDraftCreateResponseExample:
      summary: 'Unclaimed Draft Create'
      value:
        unclaimed_draft:
          claim_url: 'https://app.hellosign.com/send/resendDocs?root_snapshot_guids[]=7f967b7d06e154394eab693febedf61e8ebe49eb&amp;snapshot_access_guids[]=fb848631&amp;root_snapshot_guids[]=7aedaf31e12edf9f2672a0b2ddf028aca670e101&amp;snapshot_access_guids[]=f398ef87'
          signing_redirect_url: null
          expires_at: 1414093891
          test_mode: true
    UnclaimedDraftCreateEmbeddedResponseExample:
      summary: 'Unclaimed Draft Create Embedded'
      value:
        unclaimed_draft:
          claim_url: 'https://embedded.hellosign.com/prep-and-send/embedded-request?cached_params_token=30c4d8df776038c2fa5f7094c3718937'
          signing_redirect_url: null
          expires_at: 1414093891
          test_mode: true
          signature_request_id: 340e9843ac552b5170ee9c374d67e312f53ca129
          requesting_redirect_url: null
    UnclaimedDraftCreateEmbeddedWithTemplateResponseExample:
      summary: 'Unclaimed Draft Create Embedded With Template'
      value:
        unclaimed_draft:
          claim_url: 'https://embedded.hellosign.com/prep-and-send/embedded-request?cached_params_token=30c4d8df776038c2fa5f7094c3718937'
          signature_request_id: 8e55b3880c62497791dda0f3b4181cfd95f7ddb4
          signing_redirect_url: null
          requesting_redirect_url: null
          test_mode: true
    UnclaimedDraftEditAndResendExample:
      summary: 'Unclaimed Draft Edit and Resend'
      value:
        unclaimed_draft:
          claim_url: 'https://embedded.hellosign.com/prep-and-send/embedded-request?cached_params_token=30c4d8df776038c2fa5f7094c3718937'
          signature_request_id: 8e55b3880c62497791dda0f3b4181cfd95f7ddb4
          signing_redirect_url: null
          requesting_redirect_url: null
          test_mode: true
          expires_at: 1414093891
  requestBodies:
    EventCallbackAccountRequest:
      description: 'Account Callback Payloads'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EventCallbackAccountRequest'
          examples:
            signature_request_example:
              $ref: '#/components/examples/EventCallbackSignatureRequestExample'
            template_example:
              $ref: '#/components/examples/EventCallbackTemplateRequestExample'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/EventCallbackAccountRequest'
          examples:
            signature_request_example:
              $ref: '#/components/examples/EventCallbackSignatureRequestExample'
            template_example:
              $ref: '#/components/examples/EventCallbackTemplateRequestExample'
          encoding:
            json:
              contentType: application/json
    EventCallbackApiAppRequest:
      description: 'API App Callback Payloads'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EventCallbackApiAppRequest'
          examples:
            account_example:
              $ref: '#/components/examples/EventCallbackAccountRequestExample'
            signature_request_example:
              $ref: '#/components/examples/EventCallbackSignatureRequestExample'
            template_example:
              $ref: '#/components/examples/EventCallbackTemplateRequestExample'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/EventCallbackApiAppRequest'
          examples:
            account_example:
              $ref: '#/components/examples/EventCallbackAccountRequestExample'
            signature_request_example:
              $ref: '#/components/examples/EventCallbackSignatureRequestExample'
            template_example:
              $ref: '#/components/examples/EventCallbackTemplateRequestExample'
          encoding:
            json:
              contentType: application/json
  securitySchemes:
    api_key:
      type: http
      description: |-
        The most common method to authenticate against the HelloSign API is by using API keys. See the [API Settings page](https://app.hellosign.com/home/myAccount#api) for more information.

        Authentication is done via HTTP Basic Auth. Your API key is your basic auth username, and the password is blank.

        Example:

        ```shell
        APIKEY=YOUR_SECRET_API_KEY_HERE
        curl "https://api.hellosign.com/v3/template/list" \
            -u "${APIKEY}:"
        ```

        or, you can also pass the API key as part of the URL:

        ```shell
        APIKEY=YOUR_SECRET_API_KEY_HERE
        curl "https://${APIKEY}:@api.hellosign.com/v3/template/list"
        ```
      scheme: basic
    oauth2:
      type: http
      description: |-
        You may also use an oauth2 token to perform API actions of behalf of
        other users after they grant you the authorization to do so. See our
        [Getting Started with OAuth 2.0](https://app.hellosign.com/api/oauthWalkthrough)
        for more information.

        Authentication is done via the `Authorization: Bearer` header.

        Example:

        ```shell
        OAUTHTOKEN=YOUR_SECRET_OAUTH_TOKEN_HERE
        curl 'https://api.hellosign.com/v3/signature_request/list' \
            -H "Authorization: Bearer ${OAUTHTOKEN}"
        ```
      bearerFormat: JWT
      scheme: bearer
security:
  -
    api_key: []
    oauth2:
      - account_access
      - signature_request_access
      - template_access
      - team_access
      - api_app_access
      - basic_account_info
      - request_signature
externalDocs:
  description: 'HelloSign API Reference'
  url: 'https://app.hellosign.com/api/reference'
x-webhooks:
  accountCallback:
    post:
      summary: 'Account Callbacks'
      operationId: accountUpdateEventCallback
      description:
        $ref: ./markdown/descriptions/account-callback-description.md
      tags:
        - 'Callbacks and Events'
      requestBody:
        $ref: '#/components/requestBodies/EventCallbackAccountRequest'
      responses:
        200:
          $ref: '#/components/responses/EventCallbackResponse'
  apiAppCallback:
    post:
      summary: 'App Callbacks'
      description:
        $ref: ./markdown/descriptions/api-app-callback-description.md
      operationId: apiAppCreateEventCallback
      tags:
        - 'Callbacks and Events'
      requestBody:
        $ref: '#/components/requestBodies/EventCallbackApiAppRequest'
      responses:
        200:
          $ref: '#/components/responses/EventCallbackResponse'
