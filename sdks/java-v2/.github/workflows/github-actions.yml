# This workflow will build the project, run integration tests, and release.
# Because secrets are not available on external forks, this job is expected to fail
# on external pull requests.

name: Build, Check, Publish

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '.github/workflows/**'
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Build SDK
        run: ./run-build

      - name: Ensure no changes in Generated Code
        run: ./bin/check-clean-git-status

  # This job runs on merging to "main" branch
  # Builds and publishes package
  publish-prod:
    runs-on: ubuntu-latest
    if: >-
      github.repository == 'hellosign/dropbox-sign-java'
      && github.ref == 'refs/heads/main'
      && github.event_name != 'pull_request'
    needs: [ build ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11

      - name: Upload Artifacts
        run: ./gradlew publishAllPublicationsToMavenCentralRepository --no-daemon --no-parallel --no-configuration-cache --stacktrace
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.SONATYPE_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.SONATYPE_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.SIGNING_KEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_PASSWORD }}

      - name: Retrieve version
        run: echo "PACKAGE_VERSION=$(cat VERSION)" >> $GITHUB_ENV

      - name: Publish Release to Maven Central
        run: ./gradlew closeAndReleaseRepository --no-daemon --no-parallel
        if: "!endsWith(env.PACKAGE_VERSION, '-SNAPSHOT')"
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.SONATYPE_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.SONATYPE_PASSWORD }}

  # This job runs on merging to "main" branch
  # Creates a new tag using the value in the VERSION file
  cut-tag:
    runs-on: ubuntu-latest
    if: >-
      github.repository == 'hellosign/dropbox-sign-java'
      && github.ref == 'refs/heads/main'
      && github.event_name != 'pull_request'
    needs: [ publish-prod ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Retrieve version
        run: echo "PACKAGE_VERSION=$(cat VERSION)" >> $GITHUB_ENV

      - name: Create tag
        uses: actions/github-script@v6
        if: "!endsWith(env.PACKAGE_VERSION, '-SNAPSHOT')"
        env:
          PACKAGE_VERSION: ${{ env.PACKAGE_VERSION }}
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/" + process.env.PACKAGE_VERSION,
              sha: context.sha
            })

