/*
Dropbox Sign API

Dropbox Sign v3 API

API version: 3.0.0
Contact: apisupport@hellosign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dropbox_sign

import (
	"encoding/json"
	"os"
)

// checks if the TemplateUpdateFilesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TemplateUpdateFilesRequest{}

// TemplateUpdateFilesRequest struct for TemplateUpdateFilesRequest
type TemplateUpdateFilesRequest struct {
	// Client id of the app you're using to update this template.
	ClientId *string `json:"client_id,omitempty"`
	// Use `files[]` to indicate the uploaded file(s) to use for the template.  This endpoint requires either **files** or **file_urls[]**, but not both.
	Files []*os.File `json:"files,omitempty"`
	// Use `file_urls[]` to have Dropbox Sign download the file(s) to use for the template.  This endpoint requires either **files** or **file_urls[]**, but not both.
	FileUrls []string `json:"file_urls,omitempty"`
	// The new default template email message.
	Message *string `json:"message,omitempty"`
	// The new default template email subject.
	Subject *string `json:"subject,omitempty"`
	// Whether this is a test, the signature request created from this draft will not be legally binding if set to `true`. Defaults to `false`.
	TestMode *bool `json:"test_mode,omitempty"`
}

// NewTemplateUpdateFilesRequest instantiates a new TemplateUpdateFilesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplateUpdateFilesRequest() *TemplateUpdateFilesRequest {
	this := TemplateUpdateFilesRequest{}
	var testMode bool = false
	this.TestMode = &testMode
	return &this
}

// NewTemplateUpdateFilesRequestWithDefaults instantiates a new TemplateUpdateFilesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplateUpdateFilesRequestWithDefaults() *TemplateUpdateFilesRequest {
	this := TemplateUpdateFilesRequest{}
	var testMode bool = false
	this.TestMode = &testMode
	return &this
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *TemplateUpdateFilesRequest) GetClientId() string {
	if o == nil || IsNil(o.ClientId) {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateUpdateFilesRequest) GetClientIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClientId) {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *TemplateUpdateFilesRequest) HasClientId() bool {
	if o != nil && !IsNil(o.ClientId) {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *TemplateUpdateFilesRequest) SetClientId(v string) {
	o.ClientId = &v
}

// GetFiles returns the Files field value if set, zero value otherwise.
func (o *TemplateUpdateFilesRequest) GetFiles() []*os.File {
	if o == nil || IsNil(o.Files) {
		var ret []*os.File
		return ret
	}
	return o.Files
}

// GetFilesOk returns a tuple with the Files field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateUpdateFilesRequest) GetFilesOk() ([]*os.File, bool) {
	if o == nil || IsNil(o.Files) {
		return nil, false
	}
	return o.Files, true
}

// HasFiles returns a boolean if a field has been set.
func (o *TemplateUpdateFilesRequest) HasFiles() bool {
	if o != nil && !IsNil(o.Files) {
		return true
	}

	return false
}

// SetFiles gets a reference to the given []*os.File and assigns it to the Files field.
func (o *TemplateUpdateFilesRequest) SetFiles(v []*os.File) {
	o.Files = v
}

// GetFileUrls returns the FileUrls field value if set, zero value otherwise.
func (o *TemplateUpdateFilesRequest) GetFileUrls() []string {
	if o == nil || IsNil(o.FileUrls) {
		var ret []string
		return ret
	}
	return o.FileUrls
}

// GetFileUrlsOk returns a tuple with the FileUrls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateUpdateFilesRequest) GetFileUrlsOk() ([]string, bool) {
	if o == nil || IsNil(o.FileUrls) {
		return nil, false
	}
	return o.FileUrls, true
}

// HasFileUrls returns a boolean if a field has been set.
func (o *TemplateUpdateFilesRequest) HasFileUrls() bool {
	if o != nil && !IsNil(o.FileUrls) {
		return true
	}

	return false
}

// SetFileUrls gets a reference to the given []string and assigns it to the FileUrls field.
func (o *TemplateUpdateFilesRequest) SetFileUrls(v []string) {
	o.FileUrls = v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *TemplateUpdateFilesRequest) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateUpdateFilesRequest) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *TemplateUpdateFilesRequest) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *TemplateUpdateFilesRequest) SetMessage(v string) {
	o.Message = &v
}

// GetSubject returns the Subject field value if set, zero value otherwise.
func (o *TemplateUpdateFilesRequest) GetSubject() string {
	if o == nil || IsNil(o.Subject) {
		var ret string
		return ret
	}
	return *o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateUpdateFilesRequest) GetSubjectOk() (*string, bool) {
	if o == nil || IsNil(o.Subject) {
		return nil, false
	}
	return o.Subject, true
}

// HasSubject returns a boolean if a field has been set.
func (o *TemplateUpdateFilesRequest) HasSubject() bool {
	if o != nil && !IsNil(o.Subject) {
		return true
	}

	return false
}

// SetSubject gets a reference to the given string and assigns it to the Subject field.
func (o *TemplateUpdateFilesRequest) SetSubject(v string) {
	o.Subject = &v
}

// GetTestMode returns the TestMode field value if set, zero value otherwise.
func (o *TemplateUpdateFilesRequest) GetTestMode() bool {
	if o == nil || IsNil(o.TestMode) {
		var ret bool
		return ret
	}
	return *o.TestMode
}

// GetTestModeOk returns a tuple with the TestMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateUpdateFilesRequest) GetTestModeOk() (*bool, bool) {
	if o == nil || IsNil(o.TestMode) {
		return nil, false
	}
	return o.TestMode, true
}

// HasTestMode returns a boolean if a field has been set.
func (o *TemplateUpdateFilesRequest) HasTestMode() bool {
	if o != nil && !IsNil(o.TestMode) {
		return true
	}

	return false
}

// SetTestMode gets a reference to the given bool and assigns it to the TestMode field.
func (o *TemplateUpdateFilesRequest) SetTestMode(v bool) {
	o.TestMode = &v
}

func (o TemplateUpdateFilesRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TemplateUpdateFilesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClientId) {
		toSerialize["client_id"] = o.ClientId
	}
	if !IsNil(o.Files) {
		toSerialize["files"] = o.Files
	}
	if !IsNil(o.FileUrls) {
		toSerialize["file_urls"] = o.FileUrls
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Subject) {
		toSerialize["subject"] = o.Subject
	}
	if !IsNil(o.TestMode) {
		toSerialize["test_mode"] = o.TestMode
	}
	return toSerialize, nil
}

type NullableTemplateUpdateFilesRequest struct {
	value *TemplateUpdateFilesRequest
	isSet bool
}

func (v NullableTemplateUpdateFilesRequest) Get() *TemplateUpdateFilesRequest {
	return v.value
}

func (v *NullableTemplateUpdateFilesRequest) Set(val *TemplateUpdateFilesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplateUpdateFilesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplateUpdateFilesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplateUpdateFilesRequest(val *TemplateUpdateFilesRequest) *NullableTemplateUpdateFilesRequest {
	return &NullableTemplateUpdateFilesRequest{value: val, isSet: true}
}

func (v NullableTemplateUpdateFilesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplateUpdateFilesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


