/*
Dropbox Sign API

Dropbox Sign v3 API

API version: 3.0.0
Contact: apisupport@hellosign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dropbox_sign

import (
	"encoding/json"
	"os"
	"bytes"
	"fmt"
)

// checks if the SignatureRequestEditEmbeddedWithTemplateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SignatureRequestEditEmbeddedWithTemplateRequest{}

// SignatureRequestEditEmbeddedWithTemplateRequest struct for SignatureRequestEditEmbeddedWithTemplateRequest
type SignatureRequestEditEmbeddedWithTemplateRequest struct {
	// Use `template_ids` to create a SignatureRequest from one or more templates, in the order in which the template will be used.
	TemplateIds []string `json:"template_ids"`
	// Allows signers to decline to sign a document if `true`. Defaults to `false`.
	AllowDecline *bool `json:"allow_decline,omitempty"`
	// Add CC email recipients. Required when a CC role exists for the Template.
	Ccs []SubCC `json:"ccs,omitempty"`
	// Client id of the app you're using to create this embedded signature request. Used for security purposes.
	ClientId string `json:"client_id"`
	// An array defining values and options for custom fields. Required when a custom field exists in the Template.
	CustomFields []SubCustomField `json:"custom_fields,omitempty"`
	// Use `files[]` to indicate the uploaded file(s) to send for signature.  This endpoint requires either **files** or **file_urls[]**, but not both.
	Files []*os.File `json:"files,omitempty"`
	// Use `file_urls[]` to have Dropbox Sign download the file(s) to send for signature.  This endpoint requires either **files** or **file_urls[]**, but not both.
	FileUrls []string `json:"file_urls,omitempty"`
	// The custom message in the email that will be sent to the signers.
	Message *string `json:"message,omitempty"`
	// Key-value data that should be attached to the signature request. This metadata is included in all API responses and events involving the signature request. For example, use the metadata field to store a signer's order number for look up when receiving events for the signature request.  Each request can include up to 10 metadata keys (or 50 nested metadata keys), with key names up to 40 characters long and values up to 1000 characters long.
	Metadata map[string]interface{} `json:"metadata,omitempty"`
	// Add Signers to your Templated-based Signature Request.
	Signers []SubSignatureRequestTemplateSigner `json:"signers"`
	SigningOptions *SubSigningOptions `json:"signing_options,omitempty"`
	// The subject in the email that will be sent to the signers.
	Subject *string `json:"subject,omitempty"`
	// Whether this is a test, the signature request will not be legally binding if set to `true`. Defaults to `false`.
	TestMode *bool `json:"test_mode,omitempty"`
	// The title you want to assign to the SignatureRequest.
	Title *string `json:"title,omitempty"`
	// Controls whether [auto fill fields](https://faq.hellosign.com/hc/en-us/articles/360051467511-Auto-Fill-Fields) can automatically populate a signer's information during signing.  ⚠️ **Note** ⚠️: Keep your signer's information safe by ensuring that the _signer on your signature request is the intended party_ before using this feature.
	PopulateAutoFillFields *bool `json:"populate_auto_fill_fields,omitempty"`
}

type _SignatureRequestEditEmbeddedWithTemplateRequest SignatureRequestEditEmbeddedWithTemplateRequest

// NewSignatureRequestEditEmbeddedWithTemplateRequest instantiates a new SignatureRequestEditEmbeddedWithTemplateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSignatureRequestEditEmbeddedWithTemplateRequest(templateIds []string, clientId string, signers []SubSignatureRequestTemplateSigner) *SignatureRequestEditEmbeddedWithTemplateRequest {
	this := SignatureRequestEditEmbeddedWithTemplateRequest{}
	this.TemplateIds = templateIds
	var allowDecline bool = false
	this.AllowDecline = &allowDecline
	this.ClientId = clientId
	this.Signers = signers
	var testMode bool = false
	this.TestMode = &testMode
	var populateAutoFillFields bool = false
	this.PopulateAutoFillFields = &populateAutoFillFields
	return &this
}

// NewSignatureRequestEditEmbeddedWithTemplateRequestWithDefaults instantiates a new SignatureRequestEditEmbeddedWithTemplateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSignatureRequestEditEmbeddedWithTemplateRequestWithDefaults() *SignatureRequestEditEmbeddedWithTemplateRequest {
	this := SignatureRequestEditEmbeddedWithTemplateRequest{}
	var allowDecline bool = false
	this.AllowDecline = &allowDecline
	var testMode bool = false
	this.TestMode = &testMode
	var populateAutoFillFields bool = false
	this.PopulateAutoFillFields = &populateAutoFillFields
	return &this
}

// GetTemplateIds returns the TemplateIds field value
func (o *SignatureRequestEditEmbeddedWithTemplateRequest) GetTemplateIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.TemplateIds
}

// GetTemplateIdsOk returns a tuple with the TemplateIds field value
// and a boolean to check if the value has been set.
func (o *SignatureRequestEditEmbeddedWithTemplateRequest) GetTemplateIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TemplateIds, true
}

// SetTemplateIds sets field value
func (o *SignatureRequestEditEmbeddedWithTemplateRequest) SetTemplateIds(v []string) {
	o.TemplateIds = v
}

// GetAllowDecline returns the AllowDecline field value if set, zero value otherwise.
func (o *SignatureRequestEditEmbeddedWithTemplateRequest) GetAllowDecline() bool {
	if o == nil || IsNil(o.AllowDecline) {
		var ret bool
		return ret
	}
	return *o.AllowDecline
}

// GetAllowDeclineOk returns a tuple with the AllowDecline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignatureRequestEditEmbeddedWithTemplateRequest) GetAllowDeclineOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowDecline) {
		return nil, false
	}
	return o.AllowDecline, true
}

// HasAllowDecline returns a boolean if a field has been set.
func (o *SignatureRequestEditEmbeddedWithTemplateRequest) HasAllowDecline() bool {
	if o != nil && !IsNil(o.AllowDecline) {
		return true
	}

	return false
}

// SetAllowDecline gets a reference to the given bool and assigns it to the AllowDecline field.
func (o *SignatureRequestEditEmbeddedWithTemplateRequest) SetAllowDecline(v bool) {
	o.AllowDecline = &v
}

// GetCcs returns the Ccs field value if set, zero value otherwise.
func (o *SignatureRequestEditEmbeddedWithTemplateRequest) GetCcs() []SubCC {
	if o == nil || IsNil(o.Ccs) {
		var ret []SubCC
		return ret
	}
	return o.Ccs
}

// GetCcsOk returns a tuple with the Ccs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignatureRequestEditEmbeddedWithTemplateRequest) GetCcsOk() ([]SubCC, bool) {
	if o == nil || IsNil(o.Ccs) {
		return nil, false
	}
	return o.Ccs, true
}

// HasCcs returns a boolean if a field has been set.
func (o *SignatureRequestEditEmbeddedWithTemplateRequest) HasCcs() bool {
	if o != nil && !IsNil(o.Ccs) {
		return true
	}

	return false
}

// SetCcs gets a reference to the given []SubCC and assigns it to the Ccs field.
func (o *SignatureRequestEditEmbeddedWithTemplateRequest) SetCcs(v []SubCC) {
	o.Ccs = v
}

// GetClientId returns the ClientId field value
func (o *SignatureRequestEditEmbeddedWithTemplateRequest) GetClientId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value
// and a boolean to check if the value has been set.
func (o *SignatureRequestEditEmbeddedWithTemplateRequest) GetClientIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientId, true
}

// SetClientId sets field value
func (o *SignatureRequestEditEmbeddedWithTemplateRequest) SetClientId(v string) {
	o.ClientId = v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *SignatureRequestEditEmbeddedWithTemplateRequest) GetCustomFields() []SubCustomField {
	if o == nil || IsNil(o.CustomFields) {
		var ret []SubCustomField
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignatureRequestEditEmbeddedWithTemplateRequest) GetCustomFieldsOk() ([]SubCustomField, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return nil, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *SignatureRequestEditEmbeddedWithTemplateRequest) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given []SubCustomField and assigns it to the CustomFields field.
func (o *SignatureRequestEditEmbeddedWithTemplateRequest) SetCustomFields(v []SubCustomField) {
	o.CustomFields = v
}

// GetFiles returns the Files field value if set, zero value otherwise.
func (o *SignatureRequestEditEmbeddedWithTemplateRequest) GetFiles() []*os.File {
	if o == nil || IsNil(o.Files) {
		var ret []*os.File
		return ret
	}
	return o.Files
}

// GetFilesOk returns a tuple with the Files field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignatureRequestEditEmbeddedWithTemplateRequest) GetFilesOk() ([]*os.File, bool) {
	if o == nil || IsNil(o.Files) {
		return nil, false
	}
	return o.Files, true
}

// HasFiles returns a boolean if a field has been set.
func (o *SignatureRequestEditEmbeddedWithTemplateRequest) HasFiles() bool {
	if o != nil && !IsNil(o.Files) {
		return true
	}

	return false
}

// SetFiles gets a reference to the given []*os.File and assigns it to the Files field.
func (o *SignatureRequestEditEmbeddedWithTemplateRequest) SetFiles(v []*os.File) {
	o.Files = v
}

// GetFileUrls returns the FileUrls field value if set, zero value otherwise.
func (o *SignatureRequestEditEmbeddedWithTemplateRequest) GetFileUrls() []string {
	if o == nil || IsNil(o.FileUrls) {
		var ret []string
		return ret
	}
	return o.FileUrls
}

// GetFileUrlsOk returns a tuple with the FileUrls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignatureRequestEditEmbeddedWithTemplateRequest) GetFileUrlsOk() ([]string, bool) {
	if o == nil || IsNil(o.FileUrls) {
		return nil, false
	}
	return o.FileUrls, true
}

// HasFileUrls returns a boolean if a field has been set.
func (o *SignatureRequestEditEmbeddedWithTemplateRequest) HasFileUrls() bool {
	if o != nil && !IsNil(o.FileUrls) {
		return true
	}

	return false
}

// SetFileUrls gets a reference to the given []string and assigns it to the FileUrls field.
func (o *SignatureRequestEditEmbeddedWithTemplateRequest) SetFileUrls(v []string) {
	o.FileUrls = v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *SignatureRequestEditEmbeddedWithTemplateRequest) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignatureRequestEditEmbeddedWithTemplateRequest) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *SignatureRequestEditEmbeddedWithTemplateRequest) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *SignatureRequestEditEmbeddedWithTemplateRequest) SetMessage(v string) {
	o.Message = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *SignatureRequestEditEmbeddedWithTemplateRequest) GetMetadata() map[string]interface{} {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignatureRequestEditEmbeddedWithTemplateRequest) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return map[string]interface{}{}, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *SignatureRequestEditEmbeddedWithTemplateRequest) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *SignatureRequestEditEmbeddedWithTemplateRequest) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

// GetSigners returns the Signers field value
func (o *SignatureRequestEditEmbeddedWithTemplateRequest) GetSigners() []SubSignatureRequestTemplateSigner {
	if o == nil {
		var ret []SubSignatureRequestTemplateSigner
		return ret
	}

	return o.Signers
}

// GetSignersOk returns a tuple with the Signers field value
// and a boolean to check if the value has been set.
func (o *SignatureRequestEditEmbeddedWithTemplateRequest) GetSignersOk() ([]SubSignatureRequestTemplateSigner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Signers, true
}

// SetSigners sets field value
func (o *SignatureRequestEditEmbeddedWithTemplateRequest) SetSigners(v []SubSignatureRequestTemplateSigner) {
	o.Signers = v
}

// GetSigningOptions returns the SigningOptions field value if set, zero value otherwise.
func (o *SignatureRequestEditEmbeddedWithTemplateRequest) GetSigningOptions() SubSigningOptions {
	if o == nil || IsNil(o.SigningOptions) {
		var ret SubSigningOptions
		return ret
	}
	return *o.SigningOptions
}

// GetSigningOptionsOk returns a tuple with the SigningOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignatureRequestEditEmbeddedWithTemplateRequest) GetSigningOptionsOk() (*SubSigningOptions, bool) {
	if o == nil || IsNil(o.SigningOptions) {
		return nil, false
	}
	return o.SigningOptions, true
}

// HasSigningOptions returns a boolean if a field has been set.
func (o *SignatureRequestEditEmbeddedWithTemplateRequest) HasSigningOptions() bool {
	if o != nil && !IsNil(o.SigningOptions) {
		return true
	}

	return false
}

// SetSigningOptions gets a reference to the given SubSigningOptions and assigns it to the SigningOptions field.
func (o *SignatureRequestEditEmbeddedWithTemplateRequest) SetSigningOptions(v SubSigningOptions) {
	o.SigningOptions = &v
}

// GetSubject returns the Subject field value if set, zero value otherwise.
func (o *SignatureRequestEditEmbeddedWithTemplateRequest) GetSubject() string {
	if o == nil || IsNil(o.Subject) {
		var ret string
		return ret
	}
	return *o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignatureRequestEditEmbeddedWithTemplateRequest) GetSubjectOk() (*string, bool) {
	if o == nil || IsNil(o.Subject) {
		return nil, false
	}
	return o.Subject, true
}

// HasSubject returns a boolean if a field has been set.
func (o *SignatureRequestEditEmbeddedWithTemplateRequest) HasSubject() bool {
	if o != nil && !IsNil(o.Subject) {
		return true
	}

	return false
}

// SetSubject gets a reference to the given string and assigns it to the Subject field.
func (o *SignatureRequestEditEmbeddedWithTemplateRequest) SetSubject(v string) {
	o.Subject = &v
}

// GetTestMode returns the TestMode field value if set, zero value otherwise.
func (o *SignatureRequestEditEmbeddedWithTemplateRequest) GetTestMode() bool {
	if o == nil || IsNil(o.TestMode) {
		var ret bool
		return ret
	}
	return *o.TestMode
}

// GetTestModeOk returns a tuple with the TestMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignatureRequestEditEmbeddedWithTemplateRequest) GetTestModeOk() (*bool, bool) {
	if o == nil || IsNil(o.TestMode) {
		return nil, false
	}
	return o.TestMode, true
}

// HasTestMode returns a boolean if a field has been set.
func (o *SignatureRequestEditEmbeddedWithTemplateRequest) HasTestMode() bool {
	if o != nil && !IsNil(o.TestMode) {
		return true
	}

	return false
}

// SetTestMode gets a reference to the given bool and assigns it to the TestMode field.
func (o *SignatureRequestEditEmbeddedWithTemplateRequest) SetTestMode(v bool) {
	o.TestMode = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *SignatureRequestEditEmbeddedWithTemplateRequest) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignatureRequestEditEmbeddedWithTemplateRequest) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *SignatureRequestEditEmbeddedWithTemplateRequest) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *SignatureRequestEditEmbeddedWithTemplateRequest) SetTitle(v string) {
	o.Title = &v
}

// GetPopulateAutoFillFields returns the PopulateAutoFillFields field value if set, zero value otherwise.
func (o *SignatureRequestEditEmbeddedWithTemplateRequest) GetPopulateAutoFillFields() bool {
	if o == nil || IsNil(o.PopulateAutoFillFields) {
		var ret bool
		return ret
	}
	return *o.PopulateAutoFillFields
}

// GetPopulateAutoFillFieldsOk returns a tuple with the PopulateAutoFillFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignatureRequestEditEmbeddedWithTemplateRequest) GetPopulateAutoFillFieldsOk() (*bool, bool) {
	if o == nil || IsNil(o.PopulateAutoFillFields) {
		return nil, false
	}
	return o.PopulateAutoFillFields, true
}

// HasPopulateAutoFillFields returns a boolean if a field has been set.
func (o *SignatureRequestEditEmbeddedWithTemplateRequest) HasPopulateAutoFillFields() bool {
	if o != nil && !IsNil(o.PopulateAutoFillFields) {
		return true
	}

	return false
}

// SetPopulateAutoFillFields gets a reference to the given bool and assigns it to the PopulateAutoFillFields field.
func (o *SignatureRequestEditEmbeddedWithTemplateRequest) SetPopulateAutoFillFields(v bool) {
	o.PopulateAutoFillFields = &v
}

func (o SignatureRequestEditEmbeddedWithTemplateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SignatureRequestEditEmbeddedWithTemplateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["template_ids"] = o.TemplateIds
	if !IsNil(o.AllowDecline) {
		toSerialize["allow_decline"] = o.AllowDecline
	}
	if !IsNil(o.Ccs) {
		toSerialize["ccs"] = o.Ccs
	}
	toSerialize["client_id"] = o.ClientId
	if !IsNil(o.CustomFields) {
		toSerialize["custom_fields"] = o.CustomFields
	}
	if !IsNil(o.Files) {
		toSerialize["files"] = o.Files
	}
	if !IsNil(o.FileUrls) {
		toSerialize["file_urls"] = o.FileUrls
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	toSerialize["signers"] = o.Signers
	if !IsNil(o.SigningOptions) {
		toSerialize["signing_options"] = o.SigningOptions
	}
	if !IsNil(o.Subject) {
		toSerialize["subject"] = o.Subject
	}
	if !IsNil(o.TestMode) {
		toSerialize["test_mode"] = o.TestMode
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.PopulateAutoFillFields) {
		toSerialize["populate_auto_fill_fields"] = o.PopulateAutoFillFields
	}
	return toSerialize, nil
}

func (o *SignatureRequestEditEmbeddedWithTemplateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"template_ids",
		"client_id",
		"signers",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSignatureRequestEditEmbeddedWithTemplateRequest := _SignatureRequestEditEmbeddedWithTemplateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSignatureRequestEditEmbeddedWithTemplateRequest)

	if err != nil {
		return err
	}

	*o = SignatureRequestEditEmbeddedWithTemplateRequest(varSignatureRequestEditEmbeddedWithTemplateRequest)

	return err
}

type NullableSignatureRequestEditEmbeddedWithTemplateRequest struct {
	value *SignatureRequestEditEmbeddedWithTemplateRequest
	isSet bool
}

func (v NullableSignatureRequestEditEmbeddedWithTemplateRequest) Get() *SignatureRequestEditEmbeddedWithTemplateRequest {
	return v.value
}

func (v *NullableSignatureRequestEditEmbeddedWithTemplateRequest) Set(val *SignatureRequestEditEmbeddedWithTemplateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSignatureRequestEditEmbeddedWithTemplateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSignatureRequestEditEmbeddedWithTemplateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSignatureRequestEditEmbeddedWithTemplateRequest(val *SignatureRequestEditEmbeddedWithTemplateRequest) *NullableSignatureRequestEditEmbeddedWithTemplateRequest {
	return &NullableSignatureRequestEditEmbeddedWithTemplateRequest{value: val, isSet: true}
}

func (v NullableSignatureRequestEditEmbeddedWithTemplateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSignatureRequestEditEmbeddedWithTemplateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


