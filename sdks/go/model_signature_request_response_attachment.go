/*
Dropbox Sign API

Dropbox Sign v3 API

API version: 3.0.0
Contact: apisupport@hellosign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dropbox_sign

import (
	"encoding/json"
)

// checks if the SignatureRequestResponseAttachment type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SignatureRequestResponseAttachment{}

// SignatureRequestResponseAttachment Signer attachments.
type SignatureRequestResponseAttachment struct {
	// The unique ID for this attachment.
	Id string `json:"id"`
	// The Signer this attachment is assigned to.
	Signer string `json:"signer"`
	// The name of this attachment.
	Name string `json:"name"`
	// A boolean value denoting if this attachment is required.
	Required bool `json:"required"`
	// Instructions for Signer.
	Instructions NullableString `json:"instructions,omitempty"`
	// Timestamp when attachment was uploaded by Signer.
	UploadedAt NullableInt32 `json:"uploaded_at,omitempty"`
}

// NewSignatureRequestResponseAttachment instantiates a new SignatureRequestResponseAttachment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSignatureRequestResponseAttachment(id string, signer string, name string, required bool) *SignatureRequestResponseAttachment {
	this := SignatureRequestResponseAttachment{}
	this.Id = id
	this.Signer = signer
	this.Name = name
	this.Required = required
	return &this
}

// NewSignatureRequestResponseAttachmentWithDefaults instantiates a new SignatureRequestResponseAttachment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSignatureRequestResponseAttachmentWithDefaults() *SignatureRequestResponseAttachment {
	this := SignatureRequestResponseAttachment{}
	return &this
}

// GetId returns the Id field value
func (o *SignatureRequestResponseAttachment) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SignatureRequestResponseAttachment) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SignatureRequestResponseAttachment) SetId(v string) {
	o.Id = v
}

// GetSigner returns the Signer field value
func (o *SignatureRequestResponseAttachment) GetSigner() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Signer
}

// GetSignerOk returns a tuple with the Signer field value
// and a boolean to check if the value has been set.
func (o *SignatureRequestResponseAttachment) GetSignerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Signer, true
}

// SetSigner sets field value
func (o *SignatureRequestResponseAttachment) SetSigner(v string) {
	o.Signer = v
}

// GetName returns the Name field value
func (o *SignatureRequestResponseAttachment) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SignatureRequestResponseAttachment) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SignatureRequestResponseAttachment) SetName(v string) {
	o.Name = v
}

// GetRequired returns the Required field value
func (o *SignatureRequestResponseAttachment) GetRequired() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Required
}

// GetRequiredOk returns a tuple with the Required field value
// and a boolean to check if the value has been set.
func (o *SignatureRequestResponseAttachment) GetRequiredOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Required, true
}

// SetRequired sets field value
func (o *SignatureRequestResponseAttachment) SetRequired(v bool) {
	o.Required = v
}

// GetInstructions returns the Instructions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SignatureRequestResponseAttachment) GetInstructions() string {
	if o == nil || IsNil(o.Instructions.Get()) {
		var ret string
		return ret
	}
	return *o.Instructions.Get()
}

// GetInstructionsOk returns a tuple with the Instructions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SignatureRequestResponseAttachment) GetInstructionsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Instructions.Get(), o.Instructions.IsSet()
}

// HasInstructions returns a boolean if a field has been set.
func (o *SignatureRequestResponseAttachment) HasInstructions() bool {
	if o != nil && o.Instructions.IsSet() {
		return true
	}

	return false
}

// SetInstructions gets a reference to the given NullableString and assigns it to the Instructions field.
func (o *SignatureRequestResponseAttachment) SetInstructions(v string) {
	o.Instructions.Set(&v)
}
// SetInstructionsNil sets the value for Instructions to be an explicit nil
func (o *SignatureRequestResponseAttachment) SetInstructionsNil() {
	o.Instructions.Set(nil)
}

// UnsetInstructions ensures that no value is present for Instructions, not even an explicit nil
func (o *SignatureRequestResponseAttachment) UnsetInstructions() {
	o.Instructions.Unset()
}

// GetUploadedAt returns the UploadedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SignatureRequestResponseAttachment) GetUploadedAt() int32 {
	if o == nil || IsNil(o.UploadedAt.Get()) {
		var ret int32
		return ret
	}
	return *o.UploadedAt.Get()
}

// GetUploadedAtOk returns a tuple with the UploadedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SignatureRequestResponseAttachment) GetUploadedAtOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.UploadedAt.Get(), o.UploadedAt.IsSet()
}

// HasUploadedAt returns a boolean if a field has been set.
func (o *SignatureRequestResponseAttachment) HasUploadedAt() bool {
	if o != nil && o.UploadedAt.IsSet() {
		return true
	}

	return false
}

// SetUploadedAt gets a reference to the given NullableInt32 and assigns it to the UploadedAt field.
func (o *SignatureRequestResponseAttachment) SetUploadedAt(v int32) {
	o.UploadedAt.Set(&v)
}
// SetUploadedAtNil sets the value for UploadedAt to be an explicit nil
func (o *SignatureRequestResponseAttachment) SetUploadedAtNil() {
	o.UploadedAt.Set(nil)
}

// UnsetUploadedAt ensures that no value is present for UploadedAt, not even an explicit nil
func (o *SignatureRequestResponseAttachment) UnsetUploadedAt() {
	o.UploadedAt.Unset()
}

func (o SignatureRequestResponseAttachment) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SignatureRequestResponseAttachment) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["signer"] = o.Signer
	toSerialize["name"] = o.Name
	toSerialize["required"] = o.Required
	if o.Instructions.IsSet() {
		toSerialize["instructions"] = o.Instructions.Get()
	}
	if o.UploadedAt.IsSet() {
		toSerialize["uploaded_at"] = o.UploadedAt.Get()
	}
	return toSerialize, nil
}

type NullableSignatureRequestResponseAttachment struct {
	value *SignatureRequestResponseAttachment
	isSet bool
}

func (v NullableSignatureRequestResponseAttachment) Get() *SignatureRequestResponseAttachment {
	return v.value
}

func (v *NullableSignatureRequestResponseAttachment) Set(val *SignatureRequestResponseAttachment) {
	v.value = val
	v.isSet = true
}

func (v NullableSignatureRequestResponseAttachment) IsSet() bool {
	return v.isSet
}

func (v *NullableSignatureRequestResponseAttachment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSignatureRequestResponseAttachment(val *SignatureRequestResponseAttachment) *NullableSignatureRequestResponseAttachment {
	return &NullableSignatureRequestResponseAttachment{value: val, isSet: true}
}

func (v NullableSignatureRequestResponseAttachment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSignatureRequestResponseAttachment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


