/*
Dropbox Sign API

Dropbox Sign v3 API

API version: 3.0.0
Contact: apisupport@hellosign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dropbox_sign

import (
	"encoding/json"
)

// checks if the ApiAppGetResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiAppGetResponse{}

// ApiAppGetResponse struct for ApiAppGetResponse
type ApiAppGetResponse struct {
	ApiApp *ApiAppResponse `json:"api_app,omitempty"`
	// A list of warnings.
	Warnings []WarningResponse `json:"warnings,omitempty"`
}

// NewApiAppGetResponse instantiates a new ApiAppGetResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiAppGetResponse() *ApiAppGetResponse {
	this := ApiAppGetResponse{}
	return &this
}

// NewApiAppGetResponseWithDefaults instantiates a new ApiAppGetResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiAppGetResponseWithDefaults() *ApiAppGetResponse {
	this := ApiAppGetResponse{}
	return &this
}

// GetApiApp returns the ApiApp field value if set, zero value otherwise.
func (o *ApiAppGetResponse) GetApiApp() ApiAppResponse {
	if o == nil || IsNil(o.ApiApp) {
		var ret ApiAppResponse
		return ret
	}
	return *o.ApiApp
}

// GetApiAppOk returns a tuple with the ApiApp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAppGetResponse) GetApiAppOk() (*ApiAppResponse, bool) {
	if o == nil || IsNil(o.ApiApp) {
		return nil, false
	}
	return o.ApiApp, true
}

// HasApiApp returns a boolean if a field has been set.
func (o *ApiAppGetResponse) HasApiApp() bool {
	if o != nil && !IsNil(o.ApiApp) {
		return true
	}

	return false
}

// SetApiApp gets a reference to the given ApiAppResponse and assigns it to the ApiApp field.
func (o *ApiAppGetResponse) SetApiApp(v ApiAppResponse) {
	o.ApiApp = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *ApiAppGetResponse) GetWarnings() []WarningResponse {
	if o == nil || IsNil(o.Warnings) {
		var ret []WarningResponse
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAppGetResponse) GetWarningsOk() ([]WarningResponse, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *ApiAppGetResponse) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []WarningResponse and assigns it to the Warnings field.
func (o *ApiAppGetResponse) SetWarnings(v []WarningResponse) {
	o.Warnings = v
}

func (o ApiAppGetResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiAppGetResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApiApp) {
		toSerialize["api_app"] = o.ApiApp
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullableApiAppGetResponse struct {
	value *ApiAppGetResponse
	isSet bool
}

func (v NullableApiAppGetResponse) Get() *ApiAppGetResponse {
	return v.value
}

func (v *NullableApiAppGetResponse) Set(val *ApiAppGetResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableApiAppGetResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableApiAppGetResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiAppGetResponse(val *ApiAppGetResponse) *NullableApiAppGetResponse {
	return &NullableApiAppGetResponse{value: val, isSet: true}
}

func (v NullableApiAppGetResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiAppGetResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


