/*
Dropbox Sign API

Dropbox Sign v3 API

API version: 3.0.0
Contact: apisupport@hellosign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dropbox_sign

import (
	"encoding/json"
)

// checks if the ReportCreateResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReportCreateResponse{}

// ReportCreateResponse struct for ReportCreateResponse
type ReportCreateResponse struct {
	Report *ReportResponse `json:"report,omitempty"`
	// A list of warnings.
	Warnings []WarningResponse `json:"warnings,omitempty"`
}

// NewReportCreateResponse instantiates a new ReportCreateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReportCreateResponse() *ReportCreateResponse {
	this := ReportCreateResponse{}
	return &this
}

// NewReportCreateResponseWithDefaults instantiates a new ReportCreateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReportCreateResponseWithDefaults() *ReportCreateResponse {
	this := ReportCreateResponse{}
	return &this
}

// GetReport returns the Report field value if set, zero value otherwise.
func (o *ReportCreateResponse) GetReport() ReportResponse {
	if o == nil || IsNil(o.Report) {
		var ret ReportResponse
		return ret
	}
	return *o.Report
}

// GetReportOk returns a tuple with the Report field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportCreateResponse) GetReportOk() (*ReportResponse, bool) {
	if o == nil || IsNil(o.Report) {
		return nil, false
	}
	return o.Report, true
}

// HasReport returns a boolean if a field has been set.
func (o *ReportCreateResponse) HasReport() bool {
	if o != nil && !IsNil(o.Report) {
		return true
	}

	return false
}

// SetReport gets a reference to the given ReportResponse and assigns it to the Report field.
func (o *ReportCreateResponse) SetReport(v ReportResponse) {
	o.Report = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *ReportCreateResponse) GetWarnings() []WarningResponse {
	if o == nil || IsNil(o.Warnings) {
		var ret []WarningResponse
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportCreateResponse) GetWarningsOk() ([]WarningResponse, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *ReportCreateResponse) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []WarningResponse and assigns it to the Warnings field.
func (o *ReportCreateResponse) SetWarnings(v []WarningResponse) {
	o.Warnings = v
}

func (o ReportCreateResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReportCreateResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Report) {
		toSerialize["report"] = o.Report
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullableReportCreateResponse struct {
	value *ReportCreateResponse
	isSet bool
}

func (v NullableReportCreateResponse) Get() *ReportCreateResponse {
	return v.value
}

func (v *NullableReportCreateResponse) Set(val *ReportCreateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReportCreateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReportCreateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReportCreateResponse(val *ReportCreateResponse) *NullableReportCreateResponse {
	return &NullableReportCreateResponse{value: val, isSet: true}
}

func (v NullableReportCreateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReportCreateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


