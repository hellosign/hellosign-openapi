/*
Dropbox Sign API

Dropbox Sign v3 API

API version: 3.0.0
Contact: apisupport@hellosign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dropbox_sign

import (
	"encoding/json"
)

// checks if the ApiAppResponseOAuth type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiAppResponseOAuth{}

// ApiAppResponseOAuth An object describing the app's OAuth properties, or null if OAuth is not configured for the app.
type ApiAppResponseOAuth struct {
	// The app's OAuth callback URL.
	CallbackUrl *string `json:"callback_url,omitempty"`
	// The app's OAuth secret, or null if the app does not belong to user.
	Secret *string `json:"secret,omitempty"`
	// Array of OAuth scopes used by the app.
	Scopes []string `json:"scopes,omitempty"`
	// Boolean indicating whether the app owner or the account granting permission is billed for OAuth requests.
	ChargesUsers *bool `json:"charges_users,omitempty"`
}

// NewApiAppResponseOAuth instantiates a new ApiAppResponseOAuth object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiAppResponseOAuth() *ApiAppResponseOAuth {
	this := ApiAppResponseOAuth{}
	return &this
}

// NewApiAppResponseOAuthWithDefaults instantiates a new ApiAppResponseOAuth object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiAppResponseOAuthWithDefaults() *ApiAppResponseOAuth {
	this := ApiAppResponseOAuth{}
	return &this
}

// GetCallbackUrl returns the CallbackUrl field value if set, zero value otherwise.
func (o *ApiAppResponseOAuth) GetCallbackUrl() string {
	if o == nil || IsNil(o.CallbackUrl) {
		var ret string
		return ret
	}
	return *o.CallbackUrl
}

// GetCallbackUrlOk returns a tuple with the CallbackUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAppResponseOAuth) GetCallbackUrlOk() (*string, bool) {
	if o == nil || IsNil(o.CallbackUrl) {
		return nil, false
	}
	return o.CallbackUrl, true
}

// HasCallbackUrl returns a boolean if a field has been set.
func (o *ApiAppResponseOAuth) HasCallbackUrl() bool {
	if o != nil && !IsNil(o.CallbackUrl) {
		return true
	}

	return false
}

// SetCallbackUrl gets a reference to the given string and assigns it to the CallbackUrl field.
func (o *ApiAppResponseOAuth) SetCallbackUrl(v string) {
	o.CallbackUrl = &v
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *ApiAppResponseOAuth) GetSecret() string {
	if o == nil || IsNil(o.Secret) {
		var ret string
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAppResponseOAuth) GetSecretOk() (*string, bool) {
	if o == nil || IsNil(o.Secret) {
		return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *ApiAppResponseOAuth) HasSecret() bool {
	if o != nil && !IsNil(o.Secret) {
		return true
	}

	return false
}

// SetSecret gets a reference to the given string and assigns it to the Secret field.
func (o *ApiAppResponseOAuth) SetSecret(v string) {
	o.Secret = &v
}

// GetScopes returns the Scopes field value if set, zero value otherwise.
func (o *ApiAppResponseOAuth) GetScopes() []string {
	if o == nil || IsNil(o.Scopes) {
		var ret []string
		return ret
	}
	return o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAppResponseOAuth) GetScopesOk() ([]string, bool) {
	if o == nil || IsNil(o.Scopes) {
		return nil, false
	}
	return o.Scopes, true
}

// HasScopes returns a boolean if a field has been set.
func (o *ApiAppResponseOAuth) HasScopes() bool {
	if o != nil && !IsNil(o.Scopes) {
		return true
	}

	return false
}

// SetScopes gets a reference to the given []string and assigns it to the Scopes field.
func (o *ApiAppResponseOAuth) SetScopes(v []string) {
	o.Scopes = v
}

// GetChargesUsers returns the ChargesUsers field value if set, zero value otherwise.
func (o *ApiAppResponseOAuth) GetChargesUsers() bool {
	if o == nil || IsNil(o.ChargesUsers) {
		var ret bool
		return ret
	}
	return *o.ChargesUsers
}

// GetChargesUsersOk returns a tuple with the ChargesUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAppResponseOAuth) GetChargesUsersOk() (*bool, bool) {
	if o == nil || IsNil(o.ChargesUsers) {
		return nil, false
	}
	return o.ChargesUsers, true
}

// HasChargesUsers returns a boolean if a field has been set.
func (o *ApiAppResponseOAuth) HasChargesUsers() bool {
	if o != nil && !IsNil(o.ChargesUsers) {
		return true
	}

	return false
}

// SetChargesUsers gets a reference to the given bool and assigns it to the ChargesUsers field.
func (o *ApiAppResponseOAuth) SetChargesUsers(v bool) {
	o.ChargesUsers = &v
}

func (o ApiAppResponseOAuth) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiAppResponseOAuth) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CallbackUrl) {
		toSerialize["callback_url"] = o.CallbackUrl
	}
	if !IsNil(o.Secret) {
		toSerialize["secret"] = o.Secret
	}
	if !IsNil(o.Scopes) {
		toSerialize["scopes"] = o.Scopes
	}
	if !IsNil(o.ChargesUsers) {
		toSerialize["charges_users"] = o.ChargesUsers
	}
	return toSerialize, nil
}

type NullableApiAppResponseOAuth struct {
	value *ApiAppResponseOAuth
	isSet bool
}

func (v NullableApiAppResponseOAuth) Get() *ApiAppResponseOAuth {
	return v.value
}

func (v *NullableApiAppResponseOAuth) Set(val *ApiAppResponseOAuth) {
	v.value = val
	v.isSet = true
}

func (v NullableApiAppResponseOAuth) IsSet() bool {
	return v.isSet
}

func (v *NullableApiAppResponseOAuth) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiAppResponseOAuth(val *ApiAppResponseOAuth) *NullableApiAppResponseOAuth {
	return &NullableApiAppResponseOAuth{value: val, isSet: true}
}

func (v NullableApiAppResponseOAuth) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiAppResponseOAuth) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


