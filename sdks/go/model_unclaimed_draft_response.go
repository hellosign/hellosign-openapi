/*
Dropbox Sign API

Dropbox Sign v3 API

API version: 3.0.0
Contact: apisupport@hellosign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dropbox_sign

import (
	"encoding/json"
)

// checks if the UnclaimedDraftResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnclaimedDraftResponse{}

// UnclaimedDraftResponse A group of documents that a user can take ownership of via the claim URL.
type UnclaimedDraftResponse struct {
	// The ID of the signature request that is represented by this UnclaimedDraft.
	SignatureRequestId NullableString `json:"signature_request_id,omitempty"`
	// The URL to be used to claim this UnclaimedDraft.
	ClaimUrl *string `json:"claim_url,omitempty"`
	// The URL you want signers redirected to after they successfully sign.
	SigningRedirectUrl NullableString `json:"signing_redirect_url,omitempty"`
	// The URL you want signers redirected to after they successfully request a signature (Will only be returned in the response if it is applicable to the request.).
	RequestingRedirectUrl NullableString `json:"requesting_redirect_url,omitempty"`
	// When the link expires.
	ExpiresAt NullableInt32 `json:"expires_at,omitempty"`
	// Whether this is a test draft. Signature requests made from test drafts have no legal value.
	TestMode *bool `json:"test_mode,omitempty"`
}

// NewUnclaimedDraftResponse instantiates a new UnclaimedDraftResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnclaimedDraftResponse() *UnclaimedDraftResponse {
	this := UnclaimedDraftResponse{}
	return &this
}

// NewUnclaimedDraftResponseWithDefaults instantiates a new UnclaimedDraftResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnclaimedDraftResponseWithDefaults() *UnclaimedDraftResponse {
	this := UnclaimedDraftResponse{}
	return &this
}

// GetSignatureRequestId returns the SignatureRequestId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UnclaimedDraftResponse) GetSignatureRequestId() string {
	if o == nil || IsNil(o.SignatureRequestId.Get()) {
		var ret string
		return ret
	}
	return *o.SignatureRequestId.Get()
}

// GetSignatureRequestIdOk returns a tuple with the SignatureRequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UnclaimedDraftResponse) GetSignatureRequestIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SignatureRequestId.Get(), o.SignatureRequestId.IsSet()
}

// HasSignatureRequestId returns a boolean if a field has been set.
func (o *UnclaimedDraftResponse) HasSignatureRequestId() bool {
	if o != nil && o.SignatureRequestId.IsSet() {
		return true
	}

	return false
}

// SetSignatureRequestId gets a reference to the given NullableString and assigns it to the SignatureRequestId field.
func (o *UnclaimedDraftResponse) SetSignatureRequestId(v string) {
	o.SignatureRequestId.Set(&v)
}
// SetSignatureRequestIdNil sets the value for SignatureRequestId to be an explicit nil
func (o *UnclaimedDraftResponse) SetSignatureRequestIdNil() {
	o.SignatureRequestId.Set(nil)
}

// UnsetSignatureRequestId ensures that no value is present for SignatureRequestId, not even an explicit nil
func (o *UnclaimedDraftResponse) UnsetSignatureRequestId() {
	o.SignatureRequestId.Unset()
}

// GetClaimUrl returns the ClaimUrl field value if set, zero value otherwise.
func (o *UnclaimedDraftResponse) GetClaimUrl() string {
	if o == nil || IsNil(o.ClaimUrl) {
		var ret string
		return ret
	}
	return *o.ClaimUrl
}

// GetClaimUrlOk returns a tuple with the ClaimUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnclaimedDraftResponse) GetClaimUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ClaimUrl) {
		return nil, false
	}
	return o.ClaimUrl, true
}

// HasClaimUrl returns a boolean if a field has been set.
func (o *UnclaimedDraftResponse) HasClaimUrl() bool {
	if o != nil && !IsNil(o.ClaimUrl) {
		return true
	}

	return false
}

// SetClaimUrl gets a reference to the given string and assigns it to the ClaimUrl field.
func (o *UnclaimedDraftResponse) SetClaimUrl(v string) {
	o.ClaimUrl = &v
}

// GetSigningRedirectUrl returns the SigningRedirectUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UnclaimedDraftResponse) GetSigningRedirectUrl() string {
	if o == nil || IsNil(o.SigningRedirectUrl.Get()) {
		var ret string
		return ret
	}
	return *o.SigningRedirectUrl.Get()
}

// GetSigningRedirectUrlOk returns a tuple with the SigningRedirectUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UnclaimedDraftResponse) GetSigningRedirectUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SigningRedirectUrl.Get(), o.SigningRedirectUrl.IsSet()
}

// HasSigningRedirectUrl returns a boolean if a field has been set.
func (o *UnclaimedDraftResponse) HasSigningRedirectUrl() bool {
	if o != nil && o.SigningRedirectUrl.IsSet() {
		return true
	}

	return false
}

// SetSigningRedirectUrl gets a reference to the given NullableString and assigns it to the SigningRedirectUrl field.
func (o *UnclaimedDraftResponse) SetSigningRedirectUrl(v string) {
	o.SigningRedirectUrl.Set(&v)
}
// SetSigningRedirectUrlNil sets the value for SigningRedirectUrl to be an explicit nil
func (o *UnclaimedDraftResponse) SetSigningRedirectUrlNil() {
	o.SigningRedirectUrl.Set(nil)
}

// UnsetSigningRedirectUrl ensures that no value is present for SigningRedirectUrl, not even an explicit nil
func (o *UnclaimedDraftResponse) UnsetSigningRedirectUrl() {
	o.SigningRedirectUrl.Unset()
}

// GetRequestingRedirectUrl returns the RequestingRedirectUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UnclaimedDraftResponse) GetRequestingRedirectUrl() string {
	if o == nil || IsNil(o.RequestingRedirectUrl.Get()) {
		var ret string
		return ret
	}
	return *o.RequestingRedirectUrl.Get()
}

// GetRequestingRedirectUrlOk returns a tuple with the RequestingRedirectUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UnclaimedDraftResponse) GetRequestingRedirectUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequestingRedirectUrl.Get(), o.RequestingRedirectUrl.IsSet()
}

// HasRequestingRedirectUrl returns a boolean if a field has been set.
func (o *UnclaimedDraftResponse) HasRequestingRedirectUrl() bool {
	if o != nil && o.RequestingRedirectUrl.IsSet() {
		return true
	}

	return false
}

// SetRequestingRedirectUrl gets a reference to the given NullableString and assigns it to the RequestingRedirectUrl field.
func (o *UnclaimedDraftResponse) SetRequestingRedirectUrl(v string) {
	o.RequestingRedirectUrl.Set(&v)
}
// SetRequestingRedirectUrlNil sets the value for RequestingRedirectUrl to be an explicit nil
func (o *UnclaimedDraftResponse) SetRequestingRedirectUrlNil() {
	o.RequestingRedirectUrl.Set(nil)
}

// UnsetRequestingRedirectUrl ensures that no value is present for RequestingRedirectUrl, not even an explicit nil
func (o *UnclaimedDraftResponse) UnsetRequestingRedirectUrl() {
	o.RequestingRedirectUrl.Unset()
}

// GetExpiresAt returns the ExpiresAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UnclaimedDraftResponse) GetExpiresAt() int32 {
	if o == nil || IsNil(o.ExpiresAt.Get()) {
		var ret int32
		return ret
	}
	return *o.ExpiresAt.Get()
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UnclaimedDraftResponse) GetExpiresAtOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpiresAt.Get(), o.ExpiresAt.IsSet()
}

// HasExpiresAt returns a boolean if a field has been set.
func (o *UnclaimedDraftResponse) HasExpiresAt() bool {
	if o != nil && o.ExpiresAt.IsSet() {
		return true
	}

	return false
}

// SetExpiresAt gets a reference to the given NullableInt32 and assigns it to the ExpiresAt field.
func (o *UnclaimedDraftResponse) SetExpiresAt(v int32) {
	o.ExpiresAt.Set(&v)
}
// SetExpiresAtNil sets the value for ExpiresAt to be an explicit nil
func (o *UnclaimedDraftResponse) SetExpiresAtNil() {
	o.ExpiresAt.Set(nil)
}

// UnsetExpiresAt ensures that no value is present for ExpiresAt, not even an explicit nil
func (o *UnclaimedDraftResponse) UnsetExpiresAt() {
	o.ExpiresAt.Unset()
}

// GetTestMode returns the TestMode field value if set, zero value otherwise.
func (o *UnclaimedDraftResponse) GetTestMode() bool {
	if o == nil || IsNil(o.TestMode) {
		var ret bool
		return ret
	}
	return *o.TestMode
}

// GetTestModeOk returns a tuple with the TestMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnclaimedDraftResponse) GetTestModeOk() (*bool, bool) {
	if o == nil || IsNil(o.TestMode) {
		return nil, false
	}
	return o.TestMode, true
}

// HasTestMode returns a boolean if a field has been set.
func (o *UnclaimedDraftResponse) HasTestMode() bool {
	if o != nil && !IsNil(o.TestMode) {
		return true
	}

	return false
}

// SetTestMode gets a reference to the given bool and assigns it to the TestMode field.
func (o *UnclaimedDraftResponse) SetTestMode(v bool) {
	o.TestMode = &v
}

func (o UnclaimedDraftResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnclaimedDraftResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.SignatureRequestId.IsSet() {
		toSerialize["signature_request_id"] = o.SignatureRequestId.Get()
	}
	if !IsNil(o.ClaimUrl) {
		toSerialize["claim_url"] = o.ClaimUrl
	}
	if o.SigningRedirectUrl.IsSet() {
		toSerialize["signing_redirect_url"] = o.SigningRedirectUrl.Get()
	}
	if o.RequestingRedirectUrl.IsSet() {
		toSerialize["requesting_redirect_url"] = o.RequestingRedirectUrl.Get()
	}
	if o.ExpiresAt.IsSet() {
		toSerialize["expires_at"] = o.ExpiresAt.Get()
	}
	if !IsNil(o.TestMode) {
		toSerialize["test_mode"] = o.TestMode
	}
	return toSerialize, nil
}

type NullableUnclaimedDraftResponse struct {
	value *UnclaimedDraftResponse
	isSet bool
}

func (v NullableUnclaimedDraftResponse) Get() *UnclaimedDraftResponse {
	return v.value
}

func (v *NullableUnclaimedDraftResponse) Set(val *UnclaimedDraftResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUnclaimedDraftResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUnclaimedDraftResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnclaimedDraftResponse(val *UnclaimedDraftResponse) *NullableUnclaimedDraftResponse {
	return &NullableUnclaimedDraftResponse{value: val, isSet: true}
}

func (v NullableUnclaimedDraftResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnclaimedDraftResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


