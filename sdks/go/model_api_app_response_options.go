/*
Dropbox Sign API

Dropbox Sign v3 API

API version: 3.0.0
Contact: apisupport@hellosign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dropbox_sign

import (
	"encoding/json"
)

// checks if the ApiAppResponseOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiAppResponseOptions{}

// ApiAppResponseOptions An object with options that override account settings.
type ApiAppResponseOptions struct {
	// Boolean denoting if signers can \"Insert Everywhere\" in one click while signing a document
	CanInsertEverywhere *bool `json:"can_insert_everywhere,omitempty"`
}

// NewApiAppResponseOptions instantiates a new ApiAppResponseOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiAppResponseOptions() *ApiAppResponseOptions {
	this := ApiAppResponseOptions{}
	return &this
}

// NewApiAppResponseOptionsWithDefaults instantiates a new ApiAppResponseOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiAppResponseOptionsWithDefaults() *ApiAppResponseOptions {
	this := ApiAppResponseOptions{}
	return &this
}

// GetCanInsertEverywhere returns the CanInsertEverywhere field value if set, zero value otherwise.
func (o *ApiAppResponseOptions) GetCanInsertEverywhere() bool {
	if o == nil || IsNil(o.CanInsertEverywhere) {
		var ret bool
		return ret
	}
	return *o.CanInsertEverywhere
}

// GetCanInsertEverywhereOk returns a tuple with the CanInsertEverywhere field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAppResponseOptions) GetCanInsertEverywhereOk() (*bool, bool) {
	if o == nil || IsNil(o.CanInsertEverywhere) {
		return nil, false
	}
	return o.CanInsertEverywhere, true
}

// HasCanInsertEverywhere returns a boolean if a field has been set.
func (o *ApiAppResponseOptions) HasCanInsertEverywhere() bool {
	if o != nil && !IsNil(o.CanInsertEverywhere) {
		return true
	}

	return false
}

// SetCanInsertEverywhere gets a reference to the given bool and assigns it to the CanInsertEverywhere field.
func (o *ApiAppResponseOptions) SetCanInsertEverywhere(v bool) {
	o.CanInsertEverywhere = &v
}

func (o ApiAppResponseOptions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiAppResponseOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CanInsertEverywhere) {
		toSerialize["can_insert_everywhere"] = o.CanInsertEverywhere
	}
	return toSerialize, nil
}

type NullableApiAppResponseOptions struct {
	value *ApiAppResponseOptions
	isSet bool
}

func (v NullableApiAppResponseOptions) Get() *ApiAppResponseOptions {
	return v.value
}

func (v *NullableApiAppResponseOptions) Set(val *ApiAppResponseOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableApiAppResponseOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableApiAppResponseOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiAppResponseOptions(val *ApiAppResponseOptions) *NullableApiAppResponseOptions {
	return &NullableApiAppResponseOptions{value: val, isSet: true}
}

func (v NullableApiAppResponseOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiAppResponseOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


