/*
Dropbox Sign API

Dropbox Sign v3 API

API version: 3.0.0
Contact: apisupport@hellosign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dropbox_sign

import (
	"encoding/json"
)

// checks if the SignatureRequestResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SignatureRequestResponse{}

// SignatureRequestResponse Contains information about a signature request.
type SignatureRequestResponse struct {
	// Whether this is a test signature request. Test requests have no legal value. Defaults to `false`.
	TestMode NullableBool `json:"test_mode,omitempty"`
	// The id of the SignatureRequest.
	SignatureRequestId *string `json:"signature_request_id,omitempty"`
	// The email address of the initiator of the SignatureRequest.
	RequesterEmailAddress *string `json:"requester_email_address,omitempty"`
	// The title the specified Account uses for the SignatureRequest.
	Title *string `json:"title,omitempty"`
	// Default Label for account.
	OriginalTitle *string `json:"original_title,omitempty"`
	// The subject in the email that was initially sent to the signers.
	Subject NullableString `json:"subject,omitempty"`
	// The custom message in the email that was initially sent to the signers.
	Message NullableString `json:"message,omitempty"`
	// The metadata attached to the signature request.
	Metadata map[string]interface{} `json:"metadata,omitempty"`
	// Time the signature request was created.
	CreatedAt *int32 `json:"created_at,omitempty"`
	// The time when the signature request will expire unsigned signatures. See [Signature Request Expiration Date](https://developers.hellosign.com/docs/signature-request/expiration/) for details.
	ExpiresAt *int32 `json:"expires_at,omitempty"`
	// Whether or not the SignatureRequest has been fully executed by all signers.
	IsComplete *bool `json:"is_complete,omitempty"`
	// Whether or not the SignatureRequest has been declined by a signer.
	IsDeclined *bool `json:"is_declined,omitempty"`
	// Whether or not an error occurred (either during the creation of the SignatureRequest or during one of the signings).
	HasError *bool `json:"has_error,omitempty"`
	// The URL where a copy of the request's documents can be downloaded.
	FilesUrl *string `json:"files_url,omitempty"`
	// The URL where a signer, after authenticating, can sign the documents. This should only be used by users with existing Dropbox Sign accounts as they will be required to log in before signing.
	SigningUrl NullableString `json:"signing_url,omitempty"`
	// The URL where the requester and the signers can view the current status of the SignatureRequest.
	DetailsUrl *string `json:"details_url,omitempty"`
	// A list of email addresses that were CCed on the SignatureRequest. They will receive a copy of the final PDF once all the signers have signed.
	CcEmailAddresses []string `json:"cc_email_addresses,omitempty"`
	// The URL you want the signer redirected to after they successfully sign.
	SigningRedirectUrl NullableString `json:"signing_redirect_url,omitempty"`
	// The path where the completed document can be downloaded
	FinalCopyUri NullableString `json:"final_copy_uri,omitempty"`
	// Templates IDs used in this SignatureRequest (if any).
	TemplateIds []string `json:"template_ids,omitempty"`
	// An array of Custom Field objects containing the name and type of each custom field.  * Text Field uses `SignatureRequestResponseCustomFieldText` * Checkbox Field uses `SignatureRequestResponseCustomFieldCheckbox`
	CustomFields []SignatureRequestResponseCustomFieldBase `json:"custom_fields,omitempty"`
	// Signer attachments.
	Attachments []SignatureRequestResponseAttachment `json:"attachments,omitempty"`
	// An array of form field objects containing the name, value, and type of each textbox or checkmark field filled in by the signers.
	ResponseData []SignatureRequestResponseDataBase `json:"response_data,omitempty"`
	// An array of signature objects, 1 for each signer.
	Signatures []SignatureRequestResponseSignatures `json:"signatures,omitempty"`
	// The ID of the Bulk Send job which sent the signature request, if applicable.
	BulkSendJobId NullableString `json:"bulk_send_job_id,omitempty"`
}

// NewSignatureRequestResponse instantiates a new SignatureRequestResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSignatureRequestResponse() *SignatureRequestResponse {
	this := SignatureRequestResponse{}
	var testMode bool = false
	this.TestMode = *NewNullableBool(&testMode)
	return &this
}

// NewSignatureRequestResponseWithDefaults instantiates a new SignatureRequestResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSignatureRequestResponseWithDefaults() *SignatureRequestResponse {
	this := SignatureRequestResponse{}
	var testMode bool = false
	this.TestMode = *NewNullableBool(&testMode)
	return &this
}

// GetTestMode returns the TestMode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SignatureRequestResponse) GetTestMode() bool {
	if o == nil || IsNil(o.TestMode.Get()) {
		var ret bool
		return ret
	}
	return *o.TestMode.Get()
}

// GetTestModeOk returns a tuple with the TestMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SignatureRequestResponse) GetTestModeOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.TestMode.Get(), o.TestMode.IsSet()
}

// HasTestMode returns a boolean if a field has been set.
func (o *SignatureRequestResponse) HasTestMode() bool {
	if o != nil && o.TestMode.IsSet() {
		return true
	}

	return false
}

// SetTestMode gets a reference to the given NullableBool and assigns it to the TestMode field.
func (o *SignatureRequestResponse) SetTestMode(v bool) {
	o.TestMode.Set(&v)
}
// SetTestModeNil sets the value for TestMode to be an explicit nil
func (o *SignatureRequestResponse) SetTestModeNil() {
	o.TestMode.Set(nil)
}

// UnsetTestMode ensures that no value is present for TestMode, not even an explicit nil
func (o *SignatureRequestResponse) UnsetTestMode() {
	o.TestMode.Unset()
}

// GetSignatureRequestId returns the SignatureRequestId field value if set, zero value otherwise.
func (o *SignatureRequestResponse) GetSignatureRequestId() string {
	if o == nil || IsNil(o.SignatureRequestId) {
		var ret string
		return ret
	}
	return *o.SignatureRequestId
}

// GetSignatureRequestIdOk returns a tuple with the SignatureRequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignatureRequestResponse) GetSignatureRequestIdOk() (*string, bool) {
	if o == nil || IsNil(o.SignatureRequestId) {
		return nil, false
	}
	return o.SignatureRequestId, true
}

// HasSignatureRequestId returns a boolean if a field has been set.
func (o *SignatureRequestResponse) HasSignatureRequestId() bool {
	if o != nil && !IsNil(o.SignatureRequestId) {
		return true
	}

	return false
}

// SetSignatureRequestId gets a reference to the given string and assigns it to the SignatureRequestId field.
func (o *SignatureRequestResponse) SetSignatureRequestId(v string) {
	o.SignatureRequestId = &v
}

// GetRequesterEmailAddress returns the RequesterEmailAddress field value if set, zero value otherwise.
func (o *SignatureRequestResponse) GetRequesterEmailAddress() string {
	if o == nil || IsNil(o.RequesterEmailAddress) {
		var ret string
		return ret
	}
	return *o.RequesterEmailAddress
}

// GetRequesterEmailAddressOk returns a tuple with the RequesterEmailAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignatureRequestResponse) GetRequesterEmailAddressOk() (*string, bool) {
	if o == nil || IsNil(o.RequesterEmailAddress) {
		return nil, false
	}
	return o.RequesterEmailAddress, true
}

// HasRequesterEmailAddress returns a boolean if a field has been set.
func (o *SignatureRequestResponse) HasRequesterEmailAddress() bool {
	if o != nil && !IsNil(o.RequesterEmailAddress) {
		return true
	}

	return false
}

// SetRequesterEmailAddress gets a reference to the given string and assigns it to the RequesterEmailAddress field.
func (o *SignatureRequestResponse) SetRequesterEmailAddress(v string) {
	o.RequesterEmailAddress = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *SignatureRequestResponse) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignatureRequestResponse) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *SignatureRequestResponse) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *SignatureRequestResponse) SetTitle(v string) {
	o.Title = &v
}

// GetOriginalTitle returns the OriginalTitle field value if set, zero value otherwise.
func (o *SignatureRequestResponse) GetOriginalTitle() string {
	if o == nil || IsNil(o.OriginalTitle) {
		var ret string
		return ret
	}
	return *o.OriginalTitle
}

// GetOriginalTitleOk returns a tuple with the OriginalTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignatureRequestResponse) GetOriginalTitleOk() (*string, bool) {
	if o == nil || IsNil(o.OriginalTitle) {
		return nil, false
	}
	return o.OriginalTitle, true
}

// HasOriginalTitle returns a boolean if a field has been set.
func (o *SignatureRequestResponse) HasOriginalTitle() bool {
	if o != nil && !IsNil(o.OriginalTitle) {
		return true
	}

	return false
}

// SetOriginalTitle gets a reference to the given string and assigns it to the OriginalTitle field.
func (o *SignatureRequestResponse) SetOriginalTitle(v string) {
	o.OriginalTitle = &v
}

// GetSubject returns the Subject field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SignatureRequestResponse) GetSubject() string {
	if o == nil || IsNil(o.Subject.Get()) {
		var ret string
		return ret
	}
	return *o.Subject.Get()
}

// GetSubjectOk returns a tuple with the Subject field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SignatureRequestResponse) GetSubjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Subject.Get(), o.Subject.IsSet()
}

// HasSubject returns a boolean if a field has been set.
func (o *SignatureRequestResponse) HasSubject() bool {
	if o != nil && o.Subject.IsSet() {
		return true
	}

	return false
}

// SetSubject gets a reference to the given NullableString and assigns it to the Subject field.
func (o *SignatureRequestResponse) SetSubject(v string) {
	o.Subject.Set(&v)
}
// SetSubjectNil sets the value for Subject to be an explicit nil
func (o *SignatureRequestResponse) SetSubjectNil() {
	o.Subject.Set(nil)
}

// UnsetSubject ensures that no value is present for Subject, not even an explicit nil
func (o *SignatureRequestResponse) UnsetSubject() {
	o.Subject.Unset()
}

// GetMessage returns the Message field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SignatureRequestResponse) GetMessage() string {
	if o == nil || IsNil(o.Message.Get()) {
		var ret string
		return ret
	}
	return *o.Message.Get()
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SignatureRequestResponse) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Message.Get(), o.Message.IsSet()
}

// HasMessage returns a boolean if a field has been set.
func (o *SignatureRequestResponse) HasMessage() bool {
	if o != nil && o.Message.IsSet() {
		return true
	}

	return false
}

// SetMessage gets a reference to the given NullableString and assigns it to the Message field.
func (o *SignatureRequestResponse) SetMessage(v string) {
	o.Message.Set(&v)
}
// SetMessageNil sets the value for Message to be an explicit nil
func (o *SignatureRequestResponse) SetMessageNil() {
	o.Message.Set(nil)
}

// UnsetMessage ensures that no value is present for Message, not even an explicit nil
func (o *SignatureRequestResponse) UnsetMessage() {
	o.Message.Unset()
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *SignatureRequestResponse) GetMetadata() map[string]interface{} {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignatureRequestResponse) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return map[string]interface{}{}, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *SignatureRequestResponse) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *SignatureRequestResponse) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *SignatureRequestResponse) GetCreatedAt() int32 {
	if o == nil || IsNil(o.CreatedAt) {
		var ret int32
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignatureRequestResponse) GetCreatedAtOk() (*int32, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *SignatureRequestResponse) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given int32 and assigns it to the CreatedAt field.
func (o *SignatureRequestResponse) SetCreatedAt(v int32) {
	o.CreatedAt = &v
}

// GetExpiresAt returns the ExpiresAt field value if set, zero value otherwise.
func (o *SignatureRequestResponse) GetExpiresAt() int32 {
	if o == nil || IsNil(o.ExpiresAt) {
		var ret int32
		return ret
	}
	return *o.ExpiresAt
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignatureRequestResponse) GetExpiresAtOk() (*int32, bool) {
	if o == nil || IsNil(o.ExpiresAt) {
		return nil, false
	}
	return o.ExpiresAt, true
}

// HasExpiresAt returns a boolean if a field has been set.
func (o *SignatureRequestResponse) HasExpiresAt() bool {
	if o != nil && !IsNil(o.ExpiresAt) {
		return true
	}

	return false
}

// SetExpiresAt gets a reference to the given int32 and assigns it to the ExpiresAt field.
func (o *SignatureRequestResponse) SetExpiresAt(v int32) {
	o.ExpiresAt = &v
}

// GetIsComplete returns the IsComplete field value if set, zero value otherwise.
func (o *SignatureRequestResponse) GetIsComplete() bool {
	if o == nil || IsNil(o.IsComplete) {
		var ret bool
		return ret
	}
	return *o.IsComplete
}

// GetIsCompleteOk returns a tuple with the IsComplete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignatureRequestResponse) GetIsCompleteOk() (*bool, bool) {
	if o == nil || IsNil(o.IsComplete) {
		return nil, false
	}
	return o.IsComplete, true
}

// HasIsComplete returns a boolean if a field has been set.
func (o *SignatureRequestResponse) HasIsComplete() bool {
	if o != nil && !IsNil(o.IsComplete) {
		return true
	}

	return false
}

// SetIsComplete gets a reference to the given bool and assigns it to the IsComplete field.
func (o *SignatureRequestResponse) SetIsComplete(v bool) {
	o.IsComplete = &v
}

// GetIsDeclined returns the IsDeclined field value if set, zero value otherwise.
func (o *SignatureRequestResponse) GetIsDeclined() bool {
	if o == nil || IsNil(o.IsDeclined) {
		var ret bool
		return ret
	}
	return *o.IsDeclined
}

// GetIsDeclinedOk returns a tuple with the IsDeclined field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignatureRequestResponse) GetIsDeclinedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDeclined) {
		return nil, false
	}
	return o.IsDeclined, true
}

// HasIsDeclined returns a boolean if a field has been set.
func (o *SignatureRequestResponse) HasIsDeclined() bool {
	if o != nil && !IsNil(o.IsDeclined) {
		return true
	}

	return false
}

// SetIsDeclined gets a reference to the given bool and assigns it to the IsDeclined field.
func (o *SignatureRequestResponse) SetIsDeclined(v bool) {
	o.IsDeclined = &v
}

// GetHasError returns the HasError field value if set, zero value otherwise.
func (o *SignatureRequestResponse) GetHasError() bool {
	if o == nil || IsNil(o.HasError) {
		var ret bool
		return ret
	}
	return *o.HasError
}

// GetHasErrorOk returns a tuple with the HasError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignatureRequestResponse) GetHasErrorOk() (*bool, bool) {
	if o == nil || IsNil(o.HasError) {
		return nil, false
	}
	return o.HasError, true
}

// HasHasError returns a boolean if a field has been set.
func (o *SignatureRequestResponse) HasHasError() bool {
	if o != nil && !IsNil(o.HasError) {
		return true
	}

	return false
}

// SetHasError gets a reference to the given bool and assigns it to the HasError field.
func (o *SignatureRequestResponse) SetHasError(v bool) {
	o.HasError = &v
}

// GetFilesUrl returns the FilesUrl field value if set, zero value otherwise.
func (o *SignatureRequestResponse) GetFilesUrl() string {
	if o == nil || IsNil(o.FilesUrl) {
		var ret string
		return ret
	}
	return *o.FilesUrl
}

// GetFilesUrlOk returns a tuple with the FilesUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignatureRequestResponse) GetFilesUrlOk() (*string, bool) {
	if o == nil || IsNil(o.FilesUrl) {
		return nil, false
	}
	return o.FilesUrl, true
}

// HasFilesUrl returns a boolean if a field has been set.
func (o *SignatureRequestResponse) HasFilesUrl() bool {
	if o != nil && !IsNil(o.FilesUrl) {
		return true
	}

	return false
}

// SetFilesUrl gets a reference to the given string and assigns it to the FilesUrl field.
func (o *SignatureRequestResponse) SetFilesUrl(v string) {
	o.FilesUrl = &v
}

// GetSigningUrl returns the SigningUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SignatureRequestResponse) GetSigningUrl() string {
	if o == nil || IsNil(o.SigningUrl.Get()) {
		var ret string
		return ret
	}
	return *o.SigningUrl.Get()
}

// GetSigningUrlOk returns a tuple with the SigningUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SignatureRequestResponse) GetSigningUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SigningUrl.Get(), o.SigningUrl.IsSet()
}

// HasSigningUrl returns a boolean if a field has been set.
func (o *SignatureRequestResponse) HasSigningUrl() bool {
	if o != nil && o.SigningUrl.IsSet() {
		return true
	}

	return false
}

// SetSigningUrl gets a reference to the given NullableString and assigns it to the SigningUrl field.
func (o *SignatureRequestResponse) SetSigningUrl(v string) {
	o.SigningUrl.Set(&v)
}
// SetSigningUrlNil sets the value for SigningUrl to be an explicit nil
func (o *SignatureRequestResponse) SetSigningUrlNil() {
	o.SigningUrl.Set(nil)
}

// UnsetSigningUrl ensures that no value is present for SigningUrl, not even an explicit nil
func (o *SignatureRequestResponse) UnsetSigningUrl() {
	o.SigningUrl.Unset()
}

// GetDetailsUrl returns the DetailsUrl field value if set, zero value otherwise.
func (o *SignatureRequestResponse) GetDetailsUrl() string {
	if o == nil || IsNil(o.DetailsUrl) {
		var ret string
		return ret
	}
	return *o.DetailsUrl
}

// GetDetailsUrlOk returns a tuple with the DetailsUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignatureRequestResponse) GetDetailsUrlOk() (*string, bool) {
	if o == nil || IsNil(o.DetailsUrl) {
		return nil, false
	}
	return o.DetailsUrl, true
}

// HasDetailsUrl returns a boolean if a field has been set.
func (o *SignatureRequestResponse) HasDetailsUrl() bool {
	if o != nil && !IsNil(o.DetailsUrl) {
		return true
	}

	return false
}

// SetDetailsUrl gets a reference to the given string and assigns it to the DetailsUrl field.
func (o *SignatureRequestResponse) SetDetailsUrl(v string) {
	o.DetailsUrl = &v
}

// GetCcEmailAddresses returns the CcEmailAddresses field value if set, zero value otherwise.
func (o *SignatureRequestResponse) GetCcEmailAddresses() []string {
	if o == nil || IsNil(o.CcEmailAddresses) {
		var ret []string
		return ret
	}
	return o.CcEmailAddresses
}

// GetCcEmailAddressesOk returns a tuple with the CcEmailAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignatureRequestResponse) GetCcEmailAddressesOk() ([]string, bool) {
	if o == nil || IsNil(o.CcEmailAddresses) {
		return nil, false
	}
	return o.CcEmailAddresses, true
}

// HasCcEmailAddresses returns a boolean if a field has been set.
func (o *SignatureRequestResponse) HasCcEmailAddresses() bool {
	if o != nil && !IsNil(o.CcEmailAddresses) {
		return true
	}

	return false
}

// SetCcEmailAddresses gets a reference to the given []string and assigns it to the CcEmailAddresses field.
func (o *SignatureRequestResponse) SetCcEmailAddresses(v []string) {
	o.CcEmailAddresses = v
}

// GetSigningRedirectUrl returns the SigningRedirectUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SignatureRequestResponse) GetSigningRedirectUrl() string {
	if o == nil || IsNil(o.SigningRedirectUrl.Get()) {
		var ret string
		return ret
	}
	return *o.SigningRedirectUrl.Get()
}

// GetSigningRedirectUrlOk returns a tuple with the SigningRedirectUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SignatureRequestResponse) GetSigningRedirectUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SigningRedirectUrl.Get(), o.SigningRedirectUrl.IsSet()
}

// HasSigningRedirectUrl returns a boolean if a field has been set.
func (o *SignatureRequestResponse) HasSigningRedirectUrl() bool {
	if o != nil && o.SigningRedirectUrl.IsSet() {
		return true
	}

	return false
}

// SetSigningRedirectUrl gets a reference to the given NullableString and assigns it to the SigningRedirectUrl field.
func (o *SignatureRequestResponse) SetSigningRedirectUrl(v string) {
	o.SigningRedirectUrl.Set(&v)
}
// SetSigningRedirectUrlNil sets the value for SigningRedirectUrl to be an explicit nil
func (o *SignatureRequestResponse) SetSigningRedirectUrlNil() {
	o.SigningRedirectUrl.Set(nil)
}

// UnsetSigningRedirectUrl ensures that no value is present for SigningRedirectUrl, not even an explicit nil
func (o *SignatureRequestResponse) UnsetSigningRedirectUrl() {
	o.SigningRedirectUrl.Unset()
}

// GetFinalCopyUri returns the FinalCopyUri field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SignatureRequestResponse) GetFinalCopyUri() string {
	if o == nil || IsNil(o.FinalCopyUri.Get()) {
		var ret string
		return ret
	}
	return *o.FinalCopyUri.Get()
}

// GetFinalCopyUriOk returns a tuple with the FinalCopyUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SignatureRequestResponse) GetFinalCopyUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FinalCopyUri.Get(), o.FinalCopyUri.IsSet()
}

// HasFinalCopyUri returns a boolean if a field has been set.
func (o *SignatureRequestResponse) HasFinalCopyUri() bool {
	if o != nil && o.FinalCopyUri.IsSet() {
		return true
	}

	return false
}

// SetFinalCopyUri gets a reference to the given NullableString and assigns it to the FinalCopyUri field.
func (o *SignatureRequestResponse) SetFinalCopyUri(v string) {
	o.FinalCopyUri.Set(&v)
}
// SetFinalCopyUriNil sets the value for FinalCopyUri to be an explicit nil
func (o *SignatureRequestResponse) SetFinalCopyUriNil() {
	o.FinalCopyUri.Set(nil)
}

// UnsetFinalCopyUri ensures that no value is present for FinalCopyUri, not even an explicit nil
func (o *SignatureRequestResponse) UnsetFinalCopyUri() {
	o.FinalCopyUri.Unset()
}

// GetTemplateIds returns the TemplateIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SignatureRequestResponse) GetTemplateIds() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.TemplateIds
}

// GetTemplateIdsOk returns a tuple with the TemplateIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SignatureRequestResponse) GetTemplateIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.TemplateIds) {
		return nil, false
	}
	return o.TemplateIds, true
}

// HasTemplateIds returns a boolean if a field has been set.
func (o *SignatureRequestResponse) HasTemplateIds() bool {
	if o != nil && IsNil(o.TemplateIds) {
		return true
	}

	return false
}

// SetTemplateIds gets a reference to the given []string and assigns it to the TemplateIds field.
func (o *SignatureRequestResponse) SetTemplateIds(v []string) {
	o.TemplateIds = v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SignatureRequestResponse) GetCustomFields() []SignatureRequestResponseCustomFieldBase {
	if o == nil {
		var ret []SignatureRequestResponseCustomFieldBase
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SignatureRequestResponse) GetCustomFieldsOk() ([]SignatureRequestResponseCustomFieldBase, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return nil, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *SignatureRequestResponse) HasCustomFields() bool {
	if o != nil && IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given []SignatureRequestResponseCustomFieldBase and assigns it to the CustomFields field.
func (o *SignatureRequestResponse) SetCustomFields(v []SignatureRequestResponseCustomFieldBase) {
	o.CustomFields = v
}

// GetAttachments returns the Attachments field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SignatureRequestResponse) GetAttachments() []SignatureRequestResponseAttachment {
	if o == nil {
		var ret []SignatureRequestResponseAttachment
		return ret
	}
	return o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SignatureRequestResponse) GetAttachmentsOk() ([]SignatureRequestResponseAttachment, bool) {
	if o == nil || IsNil(o.Attachments) {
		return nil, false
	}
	return o.Attachments, true
}

// HasAttachments returns a boolean if a field has been set.
func (o *SignatureRequestResponse) HasAttachments() bool {
	if o != nil && IsNil(o.Attachments) {
		return true
	}

	return false
}

// SetAttachments gets a reference to the given []SignatureRequestResponseAttachment and assigns it to the Attachments field.
func (o *SignatureRequestResponse) SetAttachments(v []SignatureRequestResponseAttachment) {
	o.Attachments = v
}

// GetResponseData returns the ResponseData field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SignatureRequestResponse) GetResponseData() []SignatureRequestResponseDataBase {
	if o == nil {
		var ret []SignatureRequestResponseDataBase
		return ret
	}
	return o.ResponseData
}

// GetResponseDataOk returns a tuple with the ResponseData field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SignatureRequestResponse) GetResponseDataOk() ([]SignatureRequestResponseDataBase, bool) {
	if o == nil || IsNil(o.ResponseData) {
		return nil, false
	}
	return o.ResponseData, true
}

// HasResponseData returns a boolean if a field has been set.
func (o *SignatureRequestResponse) HasResponseData() bool {
	if o != nil && IsNil(o.ResponseData) {
		return true
	}

	return false
}

// SetResponseData gets a reference to the given []SignatureRequestResponseDataBase and assigns it to the ResponseData field.
func (o *SignatureRequestResponse) SetResponseData(v []SignatureRequestResponseDataBase) {
	o.ResponseData = v
}

// GetSignatures returns the Signatures field value if set, zero value otherwise.
func (o *SignatureRequestResponse) GetSignatures() []SignatureRequestResponseSignatures {
	if o == nil || IsNil(o.Signatures) {
		var ret []SignatureRequestResponseSignatures
		return ret
	}
	return o.Signatures
}

// GetSignaturesOk returns a tuple with the Signatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignatureRequestResponse) GetSignaturesOk() ([]SignatureRequestResponseSignatures, bool) {
	if o == nil || IsNil(o.Signatures) {
		return nil, false
	}
	return o.Signatures, true
}

// HasSignatures returns a boolean if a field has been set.
func (o *SignatureRequestResponse) HasSignatures() bool {
	if o != nil && !IsNil(o.Signatures) {
		return true
	}

	return false
}

// SetSignatures gets a reference to the given []SignatureRequestResponseSignatures and assigns it to the Signatures field.
func (o *SignatureRequestResponse) SetSignatures(v []SignatureRequestResponseSignatures) {
	o.Signatures = v
}

// GetBulkSendJobId returns the BulkSendJobId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SignatureRequestResponse) GetBulkSendJobId() string {
	if o == nil || IsNil(o.BulkSendJobId.Get()) {
		var ret string
		return ret
	}
	return *o.BulkSendJobId.Get()
}

// GetBulkSendJobIdOk returns a tuple with the BulkSendJobId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SignatureRequestResponse) GetBulkSendJobIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BulkSendJobId.Get(), o.BulkSendJobId.IsSet()
}

// HasBulkSendJobId returns a boolean if a field has been set.
func (o *SignatureRequestResponse) HasBulkSendJobId() bool {
	if o != nil && o.BulkSendJobId.IsSet() {
		return true
	}

	return false
}

// SetBulkSendJobId gets a reference to the given NullableString and assigns it to the BulkSendJobId field.
func (o *SignatureRequestResponse) SetBulkSendJobId(v string) {
	o.BulkSendJobId.Set(&v)
}
// SetBulkSendJobIdNil sets the value for BulkSendJobId to be an explicit nil
func (o *SignatureRequestResponse) SetBulkSendJobIdNil() {
	o.BulkSendJobId.Set(nil)
}

// UnsetBulkSendJobId ensures that no value is present for BulkSendJobId, not even an explicit nil
func (o *SignatureRequestResponse) UnsetBulkSendJobId() {
	o.BulkSendJobId.Unset()
}

func (o SignatureRequestResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SignatureRequestResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.TestMode.IsSet() {
		toSerialize["test_mode"] = o.TestMode.Get()
	}
	if !IsNil(o.SignatureRequestId) {
		toSerialize["signature_request_id"] = o.SignatureRequestId
	}
	if !IsNil(o.RequesterEmailAddress) {
		toSerialize["requester_email_address"] = o.RequesterEmailAddress
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.OriginalTitle) {
		toSerialize["original_title"] = o.OriginalTitle
	}
	if o.Subject.IsSet() {
		toSerialize["subject"] = o.Subject.Get()
	}
	if o.Message.IsSet() {
		toSerialize["message"] = o.Message.Get()
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.ExpiresAt) {
		toSerialize["expires_at"] = o.ExpiresAt
	}
	if !IsNil(o.IsComplete) {
		toSerialize["is_complete"] = o.IsComplete
	}
	if !IsNil(o.IsDeclined) {
		toSerialize["is_declined"] = o.IsDeclined
	}
	if !IsNil(o.HasError) {
		toSerialize["has_error"] = o.HasError
	}
	if !IsNil(o.FilesUrl) {
		toSerialize["files_url"] = o.FilesUrl
	}
	if o.SigningUrl.IsSet() {
		toSerialize["signing_url"] = o.SigningUrl.Get()
	}
	if !IsNil(o.DetailsUrl) {
		toSerialize["details_url"] = o.DetailsUrl
	}
	if !IsNil(o.CcEmailAddresses) {
		toSerialize["cc_email_addresses"] = o.CcEmailAddresses
	}
	if o.SigningRedirectUrl.IsSet() {
		toSerialize["signing_redirect_url"] = o.SigningRedirectUrl.Get()
	}
	if o.FinalCopyUri.IsSet() {
		toSerialize["final_copy_uri"] = o.FinalCopyUri.Get()
	}
	if o.TemplateIds != nil {
		toSerialize["template_ids"] = o.TemplateIds
	}
	if o.CustomFields != nil {
		toSerialize["custom_fields"] = o.CustomFields
	}
	if o.Attachments != nil {
		toSerialize["attachments"] = o.Attachments
	}
	if o.ResponseData != nil {
		toSerialize["response_data"] = o.ResponseData
	}
	if !IsNil(o.Signatures) {
		toSerialize["signatures"] = o.Signatures
	}
	if o.BulkSendJobId.IsSet() {
		toSerialize["bulk_send_job_id"] = o.BulkSendJobId.Get()
	}
	return toSerialize, nil
}

type NullableSignatureRequestResponse struct {
	value *SignatureRequestResponse
	isSet bool
}

func (v NullableSignatureRequestResponse) Get() *SignatureRequestResponse {
	return v.value
}

func (v *NullableSignatureRequestResponse) Set(val *SignatureRequestResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSignatureRequestResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSignatureRequestResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSignatureRequestResponse(val *SignatureRequestResponse) *NullableSignatureRequestResponse {
	return &NullableSignatureRequestResponse{value: val, isSet: true}
}

func (v NullableSignatureRequestResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSignatureRequestResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


