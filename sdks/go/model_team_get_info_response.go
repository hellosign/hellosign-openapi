/*
Dropbox Sign API

Dropbox Sign v3 API

API version: 3.0.0
Contact: apisupport@hellosign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dropbox_sign

import (
	"encoding/json"
)

// checks if the TeamGetInfoResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TeamGetInfoResponse{}

// TeamGetInfoResponse struct for TeamGetInfoResponse
type TeamGetInfoResponse struct {
	Team *TeamInfoResponse `json:"team,omitempty"`
	// A list of warnings.
	Warnings []WarningResponse `json:"warnings,omitempty"`
}

// NewTeamGetInfoResponse instantiates a new TeamGetInfoResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTeamGetInfoResponse() *TeamGetInfoResponse {
	this := TeamGetInfoResponse{}
	return &this
}

// NewTeamGetInfoResponseWithDefaults instantiates a new TeamGetInfoResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTeamGetInfoResponseWithDefaults() *TeamGetInfoResponse {
	this := TeamGetInfoResponse{}
	return &this
}

// GetTeam returns the Team field value if set, zero value otherwise.
func (o *TeamGetInfoResponse) GetTeam() TeamInfoResponse {
	if o == nil || IsNil(o.Team) {
		var ret TeamInfoResponse
		return ret
	}
	return *o.Team
}

// GetTeamOk returns a tuple with the Team field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TeamGetInfoResponse) GetTeamOk() (*TeamInfoResponse, bool) {
	if o == nil || IsNil(o.Team) {
		return nil, false
	}
	return o.Team, true
}

// HasTeam returns a boolean if a field has been set.
func (o *TeamGetInfoResponse) HasTeam() bool {
	if o != nil && !IsNil(o.Team) {
		return true
	}

	return false
}

// SetTeam gets a reference to the given TeamInfoResponse and assigns it to the Team field.
func (o *TeamGetInfoResponse) SetTeam(v TeamInfoResponse) {
	o.Team = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *TeamGetInfoResponse) GetWarnings() []WarningResponse {
	if o == nil || IsNil(o.Warnings) {
		var ret []WarningResponse
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TeamGetInfoResponse) GetWarningsOk() ([]WarningResponse, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *TeamGetInfoResponse) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []WarningResponse and assigns it to the Warnings field.
func (o *TeamGetInfoResponse) SetWarnings(v []WarningResponse) {
	o.Warnings = v
}

func (o TeamGetInfoResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TeamGetInfoResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Team) {
		toSerialize["team"] = o.Team
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullableTeamGetInfoResponse struct {
	value *TeamGetInfoResponse
	isSet bool
}

func (v NullableTeamGetInfoResponse) Get() *TeamGetInfoResponse {
	return v.value
}

func (v *NullableTeamGetInfoResponse) Set(val *TeamGetInfoResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableTeamGetInfoResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableTeamGetInfoResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTeamGetInfoResponse(val *TeamGetInfoResponse) *NullableTeamGetInfoResponse {
	return &NullableTeamGetInfoResponse{value: val, isSet: true}
}

func (v NullableTeamGetInfoResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTeamGetInfoResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


