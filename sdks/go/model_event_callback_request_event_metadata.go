/*
Dropbox Sign API

Dropbox Sign v3 API

API version: 3.0.0
Contact: apisupport@hellosign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dropbox_sign

import (
	"encoding/json"
)

// checks if the EventCallbackRequestEventMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EventCallbackRequestEventMetadata{}

// EventCallbackRequestEventMetadata Specific metadata about the event.
type EventCallbackRequestEventMetadata struct {
	// Signature ID for a specific signer. Applicable to `signature_request_signed` and `signature_request_viewed` events.
	RelatedSignatureId NullableString `json:"related_signature_id,omitempty"`
	// Account ID the event was reported for.
	ReportedForAccountId NullableString `json:"reported_for_account_id,omitempty"`
	// App ID the event was reported for.
	ReportedForAppId NullableString `json:"reported_for_app_id,omitempty"`
	// Message about a declined or failed (due to error) signature flow.
	EventMessage NullableString `json:"event_message,omitempty"`
}

// NewEventCallbackRequestEventMetadata instantiates a new EventCallbackRequestEventMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEventCallbackRequestEventMetadata() *EventCallbackRequestEventMetadata {
	this := EventCallbackRequestEventMetadata{}
	return &this
}

// NewEventCallbackRequestEventMetadataWithDefaults instantiates a new EventCallbackRequestEventMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEventCallbackRequestEventMetadataWithDefaults() *EventCallbackRequestEventMetadata {
	this := EventCallbackRequestEventMetadata{}
	return &this
}

// GetRelatedSignatureId returns the RelatedSignatureId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EventCallbackRequestEventMetadata) GetRelatedSignatureId() string {
	if o == nil || IsNil(o.RelatedSignatureId.Get()) {
		var ret string
		return ret
	}
	return *o.RelatedSignatureId.Get()
}

// GetRelatedSignatureIdOk returns a tuple with the RelatedSignatureId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EventCallbackRequestEventMetadata) GetRelatedSignatureIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RelatedSignatureId.Get(), o.RelatedSignatureId.IsSet()
}

// HasRelatedSignatureId returns a boolean if a field has been set.
func (o *EventCallbackRequestEventMetadata) HasRelatedSignatureId() bool {
	if o != nil && o.RelatedSignatureId.IsSet() {
		return true
	}

	return false
}

// SetRelatedSignatureId gets a reference to the given NullableString and assigns it to the RelatedSignatureId field.
func (o *EventCallbackRequestEventMetadata) SetRelatedSignatureId(v string) {
	o.RelatedSignatureId.Set(&v)
}
// SetRelatedSignatureIdNil sets the value for RelatedSignatureId to be an explicit nil
func (o *EventCallbackRequestEventMetadata) SetRelatedSignatureIdNil() {
	o.RelatedSignatureId.Set(nil)
}

// UnsetRelatedSignatureId ensures that no value is present for RelatedSignatureId, not even an explicit nil
func (o *EventCallbackRequestEventMetadata) UnsetRelatedSignatureId() {
	o.RelatedSignatureId.Unset()
}

// GetReportedForAccountId returns the ReportedForAccountId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EventCallbackRequestEventMetadata) GetReportedForAccountId() string {
	if o == nil || IsNil(o.ReportedForAccountId.Get()) {
		var ret string
		return ret
	}
	return *o.ReportedForAccountId.Get()
}

// GetReportedForAccountIdOk returns a tuple with the ReportedForAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EventCallbackRequestEventMetadata) GetReportedForAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReportedForAccountId.Get(), o.ReportedForAccountId.IsSet()
}

// HasReportedForAccountId returns a boolean if a field has been set.
func (o *EventCallbackRequestEventMetadata) HasReportedForAccountId() bool {
	if o != nil && o.ReportedForAccountId.IsSet() {
		return true
	}

	return false
}

// SetReportedForAccountId gets a reference to the given NullableString and assigns it to the ReportedForAccountId field.
func (o *EventCallbackRequestEventMetadata) SetReportedForAccountId(v string) {
	o.ReportedForAccountId.Set(&v)
}
// SetReportedForAccountIdNil sets the value for ReportedForAccountId to be an explicit nil
func (o *EventCallbackRequestEventMetadata) SetReportedForAccountIdNil() {
	o.ReportedForAccountId.Set(nil)
}

// UnsetReportedForAccountId ensures that no value is present for ReportedForAccountId, not even an explicit nil
func (o *EventCallbackRequestEventMetadata) UnsetReportedForAccountId() {
	o.ReportedForAccountId.Unset()
}

// GetReportedForAppId returns the ReportedForAppId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EventCallbackRequestEventMetadata) GetReportedForAppId() string {
	if o == nil || IsNil(o.ReportedForAppId.Get()) {
		var ret string
		return ret
	}
	return *o.ReportedForAppId.Get()
}

// GetReportedForAppIdOk returns a tuple with the ReportedForAppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EventCallbackRequestEventMetadata) GetReportedForAppIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReportedForAppId.Get(), o.ReportedForAppId.IsSet()
}

// HasReportedForAppId returns a boolean if a field has been set.
func (o *EventCallbackRequestEventMetadata) HasReportedForAppId() bool {
	if o != nil && o.ReportedForAppId.IsSet() {
		return true
	}

	return false
}

// SetReportedForAppId gets a reference to the given NullableString and assigns it to the ReportedForAppId field.
func (o *EventCallbackRequestEventMetadata) SetReportedForAppId(v string) {
	o.ReportedForAppId.Set(&v)
}
// SetReportedForAppIdNil sets the value for ReportedForAppId to be an explicit nil
func (o *EventCallbackRequestEventMetadata) SetReportedForAppIdNil() {
	o.ReportedForAppId.Set(nil)
}

// UnsetReportedForAppId ensures that no value is present for ReportedForAppId, not even an explicit nil
func (o *EventCallbackRequestEventMetadata) UnsetReportedForAppId() {
	o.ReportedForAppId.Unset()
}

// GetEventMessage returns the EventMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EventCallbackRequestEventMetadata) GetEventMessage() string {
	if o == nil || IsNil(o.EventMessage.Get()) {
		var ret string
		return ret
	}
	return *o.EventMessage.Get()
}

// GetEventMessageOk returns a tuple with the EventMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EventCallbackRequestEventMetadata) GetEventMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EventMessage.Get(), o.EventMessage.IsSet()
}

// HasEventMessage returns a boolean if a field has been set.
func (o *EventCallbackRequestEventMetadata) HasEventMessage() bool {
	if o != nil && o.EventMessage.IsSet() {
		return true
	}

	return false
}

// SetEventMessage gets a reference to the given NullableString and assigns it to the EventMessage field.
func (o *EventCallbackRequestEventMetadata) SetEventMessage(v string) {
	o.EventMessage.Set(&v)
}
// SetEventMessageNil sets the value for EventMessage to be an explicit nil
func (o *EventCallbackRequestEventMetadata) SetEventMessageNil() {
	o.EventMessage.Set(nil)
}

// UnsetEventMessage ensures that no value is present for EventMessage, not even an explicit nil
func (o *EventCallbackRequestEventMetadata) UnsetEventMessage() {
	o.EventMessage.Unset()
}

func (o EventCallbackRequestEventMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EventCallbackRequestEventMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.RelatedSignatureId.IsSet() {
		toSerialize["related_signature_id"] = o.RelatedSignatureId.Get()
	}
	if o.ReportedForAccountId.IsSet() {
		toSerialize["reported_for_account_id"] = o.ReportedForAccountId.Get()
	}
	if o.ReportedForAppId.IsSet() {
		toSerialize["reported_for_app_id"] = o.ReportedForAppId.Get()
	}
	if o.EventMessage.IsSet() {
		toSerialize["event_message"] = o.EventMessage.Get()
	}
	return toSerialize, nil
}

type NullableEventCallbackRequestEventMetadata struct {
	value *EventCallbackRequestEventMetadata
	isSet bool
}

func (v NullableEventCallbackRequestEventMetadata) Get() *EventCallbackRequestEventMetadata {
	return v.value
}

func (v *NullableEventCallbackRequestEventMetadata) Set(val *EventCallbackRequestEventMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableEventCallbackRequestEventMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableEventCallbackRequestEventMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEventCallbackRequestEventMetadata(val *EventCallbackRequestEventMetadata) *NullableEventCallbackRequestEventMetadata {
	return &NullableEventCallbackRequestEventMetadata{value: val, isSet: true}
}

func (v NullableEventCallbackRequestEventMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEventCallbackRequestEventMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


