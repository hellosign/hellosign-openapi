/*
Dropbox Sign API

Dropbox Sign v3 API

API version: 3.0.0
Contact: apisupport@hellosign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dropbox_sign

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OAuthTokenRefreshRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OAuthTokenRefreshRequest{}

// OAuthTokenRefreshRequest struct for OAuthTokenRefreshRequest
type OAuthTokenRefreshRequest struct {
	// When refreshing an existing token use `refresh_token`.
	GrantType string `json:"grant_type"`
	// The token provided when you got the expired access token.
	RefreshToken string `json:"refresh_token"`
}

type _OAuthTokenRefreshRequest OAuthTokenRefreshRequest

// NewOAuthTokenRefreshRequest instantiates a new OAuthTokenRefreshRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOAuthTokenRefreshRequest(grantType string, refreshToken string) *OAuthTokenRefreshRequest {
	this := OAuthTokenRefreshRequest{}
	this.GrantType = grantType
	this.RefreshToken = refreshToken
	return &this
}

// NewOAuthTokenRefreshRequestWithDefaults instantiates a new OAuthTokenRefreshRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOAuthTokenRefreshRequestWithDefaults() *OAuthTokenRefreshRequest {
	this := OAuthTokenRefreshRequest{}
	var grantType string = "refresh_token"
	this.GrantType = grantType
	return &this
}

// GetGrantType returns the GrantType field value
func (o *OAuthTokenRefreshRequest) GetGrantType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GrantType
}

// GetGrantTypeOk returns a tuple with the GrantType field value
// and a boolean to check if the value has been set.
func (o *OAuthTokenRefreshRequest) GetGrantTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GrantType, true
}

// SetGrantType sets field value
func (o *OAuthTokenRefreshRequest) SetGrantType(v string) {
	o.GrantType = v
}

// GetRefreshToken returns the RefreshToken field value
func (o *OAuthTokenRefreshRequest) GetRefreshToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RefreshToken
}

// GetRefreshTokenOk returns a tuple with the RefreshToken field value
// and a boolean to check if the value has been set.
func (o *OAuthTokenRefreshRequest) GetRefreshTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RefreshToken, true
}

// SetRefreshToken sets field value
func (o *OAuthTokenRefreshRequest) SetRefreshToken(v string) {
	o.RefreshToken = v
}

func (o OAuthTokenRefreshRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OAuthTokenRefreshRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["grant_type"] = o.GrantType
	toSerialize["refresh_token"] = o.RefreshToken
	return toSerialize, nil
}

func (o *OAuthTokenRefreshRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"grant_type",
		"refresh_token",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOAuthTokenRefreshRequest := _OAuthTokenRefreshRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOAuthTokenRefreshRequest)

	if err != nil {
		return err
	}

	*o = OAuthTokenRefreshRequest(varOAuthTokenRefreshRequest)

	return err
}

type NullableOAuthTokenRefreshRequest struct {
	value *OAuthTokenRefreshRequest
	isSet bool
}

func (v NullableOAuthTokenRefreshRequest) Get() *OAuthTokenRefreshRequest {
	return v.value
}

func (v *NullableOAuthTokenRefreshRequest) Set(val *OAuthTokenRefreshRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOAuthTokenRefreshRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOAuthTokenRefreshRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOAuthTokenRefreshRequest(val *OAuthTokenRefreshRequest) *NullableOAuthTokenRefreshRequest {
	return &NullableOAuthTokenRefreshRequest{value: val, isSet: true}
}

func (v NullableOAuthTokenRefreshRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOAuthTokenRefreshRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


