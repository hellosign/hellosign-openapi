/*
Dropbox Sign API

Dropbox Sign v3 API

API version: 3.0.0
Contact: apisupport@hellosign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dropbox_sign

import (
	"encoding/json"
)

// checks if the EmbeddedSignUrlResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EmbeddedSignUrlResponse{}

// EmbeddedSignUrlResponse struct for EmbeddedSignUrlResponse
type EmbeddedSignUrlResponse struct {
	Embedded *EmbeddedSignUrlResponseEmbedded `json:"embedded,omitempty"`
	// A list of warnings.
	Warnings []WarningResponse `json:"warnings,omitempty"`
}

// NewEmbeddedSignUrlResponse instantiates a new EmbeddedSignUrlResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmbeddedSignUrlResponse() *EmbeddedSignUrlResponse {
	this := EmbeddedSignUrlResponse{}
	return &this
}

// NewEmbeddedSignUrlResponseWithDefaults instantiates a new EmbeddedSignUrlResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmbeddedSignUrlResponseWithDefaults() *EmbeddedSignUrlResponse {
	this := EmbeddedSignUrlResponse{}
	return &this
}

// GetEmbedded returns the Embedded field value if set, zero value otherwise.
func (o *EmbeddedSignUrlResponse) GetEmbedded() EmbeddedSignUrlResponseEmbedded {
	if o == nil || IsNil(o.Embedded) {
		var ret EmbeddedSignUrlResponseEmbedded
		return ret
	}
	return *o.Embedded
}

// GetEmbeddedOk returns a tuple with the Embedded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmbeddedSignUrlResponse) GetEmbeddedOk() (*EmbeddedSignUrlResponseEmbedded, bool) {
	if o == nil || IsNil(o.Embedded) {
		return nil, false
	}
	return o.Embedded, true
}

// HasEmbedded returns a boolean if a field has been set.
func (o *EmbeddedSignUrlResponse) HasEmbedded() bool {
	if o != nil && !IsNil(o.Embedded) {
		return true
	}

	return false
}

// SetEmbedded gets a reference to the given EmbeddedSignUrlResponseEmbedded and assigns it to the Embedded field.
func (o *EmbeddedSignUrlResponse) SetEmbedded(v EmbeddedSignUrlResponseEmbedded) {
	o.Embedded = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *EmbeddedSignUrlResponse) GetWarnings() []WarningResponse {
	if o == nil || IsNil(o.Warnings) {
		var ret []WarningResponse
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmbeddedSignUrlResponse) GetWarningsOk() ([]WarningResponse, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *EmbeddedSignUrlResponse) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []WarningResponse and assigns it to the Warnings field.
func (o *EmbeddedSignUrlResponse) SetWarnings(v []WarningResponse) {
	o.Warnings = v
}

func (o EmbeddedSignUrlResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EmbeddedSignUrlResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Embedded) {
		toSerialize["embedded"] = o.Embedded
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullableEmbeddedSignUrlResponse struct {
	value *EmbeddedSignUrlResponse
	isSet bool
}

func (v NullableEmbeddedSignUrlResponse) Get() *EmbeddedSignUrlResponse {
	return v.value
}

func (v *NullableEmbeddedSignUrlResponse) Set(val *EmbeddedSignUrlResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableEmbeddedSignUrlResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableEmbeddedSignUrlResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmbeddedSignUrlResponse(val *EmbeddedSignUrlResponse) *NullableEmbeddedSignUrlResponse {
	return &NullableEmbeddedSignUrlResponse{value: val, isSet: true}
}

func (v NullableEmbeddedSignUrlResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmbeddedSignUrlResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


