/*
Dropbox Sign API

Dropbox Sign v3 API

API version: 3.0.0
Contact: apisupport@hellosign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dropbox_sign

import (
	"encoding/json"
)

// checks if the TeamAddMemberRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TeamAddMemberRequest{}

// TeamAddMemberRequest struct for TeamAddMemberRequest
type TeamAddMemberRequest struct {
	// `account_id` or `email_address` is required. If both are provided, the account id prevails.  Account id of the user to invite to your Team.
	AccountId *string `json:"account_id,omitempty"`
	// `account_id` or `email_address` is required, If both are provided, the account id prevails.  Email address of the user to invite to your Team.
	EmailAddress *string `json:"email_address,omitempty"`
	// A role member will take in a new Team.  **Note**: This parameter is used only if `team_id` is provided.
	Role *string `json:"role,omitempty"`
}

// NewTeamAddMemberRequest instantiates a new TeamAddMemberRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTeamAddMemberRequest() *TeamAddMemberRequest {
	this := TeamAddMemberRequest{}
	return &this
}

// NewTeamAddMemberRequestWithDefaults instantiates a new TeamAddMemberRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTeamAddMemberRequestWithDefaults() *TeamAddMemberRequest {
	this := TeamAddMemberRequest{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *TeamAddMemberRequest) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TeamAddMemberRequest) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *TeamAddMemberRequest) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *TeamAddMemberRequest) SetAccountId(v string) {
	o.AccountId = &v
}

// GetEmailAddress returns the EmailAddress field value if set, zero value otherwise.
func (o *TeamAddMemberRequest) GetEmailAddress() string {
	if o == nil || IsNil(o.EmailAddress) {
		var ret string
		return ret
	}
	return *o.EmailAddress
}

// GetEmailAddressOk returns a tuple with the EmailAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TeamAddMemberRequest) GetEmailAddressOk() (*string, bool) {
	if o == nil || IsNil(o.EmailAddress) {
		return nil, false
	}
	return o.EmailAddress, true
}

// HasEmailAddress returns a boolean if a field has been set.
func (o *TeamAddMemberRequest) HasEmailAddress() bool {
	if o != nil && !IsNil(o.EmailAddress) {
		return true
	}

	return false
}

// SetEmailAddress gets a reference to the given string and assigns it to the EmailAddress field.
func (o *TeamAddMemberRequest) SetEmailAddress(v string) {
	o.EmailAddress = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *TeamAddMemberRequest) GetRole() string {
	if o == nil || IsNil(o.Role) {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TeamAddMemberRequest) GetRoleOk() (*string, bool) {
	if o == nil || IsNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *TeamAddMemberRequest) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *TeamAddMemberRequest) SetRole(v string) {
	o.Role = &v
}

func (o TeamAddMemberRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TeamAddMemberRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountId) {
		toSerialize["account_id"] = o.AccountId
	}
	if !IsNil(o.EmailAddress) {
		toSerialize["email_address"] = o.EmailAddress
	}
	if !IsNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	return toSerialize, nil
}

type NullableTeamAddMemberRequest struct {
	value *TeamAddMemberRequest
	isSet bool
}

func (v NullableTeamAddMemberRequest) Get() *TeamAddMemberRequest {
	return v.value
}

func (v *NullableTeamAddMemberRequest) Set(val *TeamAddMemberRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTeamAddMemberRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTeamAddMemberRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTeamAddMemberRequest(val *TeamAddMemberRequest) *NullableTeamAddMemberRequest {
	return &NullableTeamAddMemberRequest{value: val, isSet: true}
}

func (v NullableTeamAddMemberRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTeamAddMemberRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


