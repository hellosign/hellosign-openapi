/*
Dropbox Sign API

Dropbox Sign v3 API

API version: 3.0.0
Contact: apisupport@hellosign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dropbox_sign

import (
	"encoding/json"
)

// checks if the TemplateResponseSignerRole type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TemplateResponseSignerRole{}

// TemplateResponseSignerRole struct for TemplateResponseSignerRole
type TemplateResponseSignerRole struct {
	// The name of the Role.
	Name *string `json:"name,omitempty"`
	// If signer order is assigned this is the 0-based index for this role.
	Order *int32 `json:"order,omitempty"`
}

// NewTemplateResponseSignerRole instantiates a new TemplateResponseSignerRole object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplateResponseSignerRole() *TemplateResponseSignerRole {
	this := TemplateResponseSignerRole{}
	return &this
}

// NewTemplateResponseSignerRoleWithDefaults instantiates a new TemplateResponseSignerRole object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplateResponseSignerRoleWithDefaults() *TemplateResponseSignerRole {
	this := TemplateResponseSignerRole{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *TemplateResponseSignerRole) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateResponseSignerRole) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *TemplateResponseSignerRole) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *TemplateResponseSignerRole) SetName(v string) {
	o.Name = &v
}

// GetOrder returns the Order field value if set, zero value otherwise.
func (o *TemplateResponseSignerRole) GetOrder() int32 {
	if o == nil || IsNil(o.Order) {
		var ret int32
		return ret
	}
	return *o.Order
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateResponseSignerRole) GetOrderOk() (*int32, bool) {
	if o == nil || IsNil(o.Order) {
		return nil, false
	}
	return o.Order, true
}

// HasOrder returns a boolean if a field has been set.
func (o *TemplateResponseSignerRole) HasOrder() bool {
	if o != nil && !IsNil(o.Order) {
		return true
	}

	return false
}

// SetOrder gets a reference to the given int32 and assigns it to the Order field.
func (o *TemplateResponseSignerRole) SetOrder(v int32) {
	o.Order = &v
}

func (o TemplateResponseSignerRole) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TemplateResponseSignerRole) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Order) {
		toSerialize["order"] = o.Order
	}
	return toSerialize, nil
}

type NullableTemplateResponseSignerRole struct {
	value *TemplateResponseSignerRole
	isSet bool
}

func (v NullableTemplateResponseSignerRole) Get() *TemplateResponseSignerRole {
	return v.value
}

func (v *NullableTemplateResponseSignerRole) Set(val *TemplateResponseSignerRole) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplateResponseSignerRole) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplateResponseSignerRole) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplateResponseSignerRole(val *TemplateResponseSignerRole) *NullableTemplateResponseSignerRole {
	return &NullableTemplateResponseSignerRole{value: val, isSet: true}
}

func (v NullableTemplateResponseSignerRole) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplateResponseSignerRole) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


