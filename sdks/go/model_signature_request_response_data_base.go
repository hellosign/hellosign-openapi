/*
Dropbox Sign API

Dropbox Sign v3 API

API version: 3.0.0
Contact: apisupport@hellosign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dropbox_sign

import (
	"encoding/json"
)

// checks if the SignatureRequestResponseDataBase type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SignatureRequestResponseDataBase{}

// SignatureRequestResponseDataBase An array of form field objects containing the name, value, and type of each textbox or checkmark field filled in by the signers.
type SignatureRequestResponseDataBase struct {
	// The unique ID for this field.
	ApiId *string `json:"api_id,omitempty"`
	// The ID of the signature to which this response is linked.
	SignatureId *string `json:"signature_id,omitempty"`
	// The name of the form field.
	Name *string `json:"name,omitempty"`
	// A boolean value denoting if this field is required.
	Required *bool `json:"required,omitempty"`
	Type *string `json:"type,omitempty"`
}

// NewSignatureRequestResponseDataBase instantiates a new SignatureRequestResponseDataBase object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSignatureRequestResponseDataBase() *SignatureRequestResponseDataBase {
	this := SignatureRequestResponseDataBase{}
	return &this
}

// NewSignatureRequestResponseDataBaseWithDefaults instantiates a new SignatureRequestResponseDataBase object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSignatureRequestResponseDataBaseWithDefaults() *SignatureRequestResponseDataBase {
	this := SignatureRequestResponseDataBase{}
	return &this
}

// GetApiId returns the ApiId field value if set, zero value otherwise.
func (o *SignatureRequestResponseDataBase) GetApiId() string {
	if o == nil || IsNil(o.ApiId) {
		var ret string
		return ret
	}
	return *o.ApiId
}

// GetApiIdOk returns a tuple with the ApiId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignatureRequestResponseDataBase) GetApiIdOk() (*string, bool) {
	if o == nil || IsNil(o.ApiId) {
		return nil, false
	}
	return o.ApiId, true
}

// HasApiId returns a boolean if a field has been set.
func (o *SignatureRequestResponseDataBase) HasApiId() bool {
	if o != nil && !IsNil(o.ApiId) {
		return true
	}

	return false
}

// SetApiId gets a reference to the given string and assigns it to the ApiId field.
func (o *SignatureRequestResponseDataBase) SetApiId(v string) {
	o.ApiId = &v
}

// GetSignatureId returns the SignatureId field value if set, zero value otherwise.
func (o *SignatureRequestResponseDataBase) GetSignatureId() string {
	if o == nil || IsNil(o.SignatureId) {
		var ret string
		return ret
	}
	return *o.SignatureId
}

// GetSignatureIdOk returns a tuple with the SignatureId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignatureRequestResponseDataBase) GetSignatureIdOk() (*string, bool) {
	if o == nil || IsNil(o.SignatureId) {
		return nil, false
	}
	return o.SignatureId, true
}

// HasSignatureId returns a boolean if a field has been set.
func (o *SignatureRequestResponseDataBase) HasSignatureId() bool {
	if o != nil && !IsNil(o.SignatureId) {
		return true
	}

	return false
}

// SetSignatureId gets a reference to the given string and assigns it to the SignatureId field.
func (o *SignatureRequestResponseDataBase) SetSignatureId(v string) {
	o.SignatureId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SignatureRequestResponseDataBase) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignatureRequestResponseDataBase) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SignatureRequestResponseDataBase) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SignatureRequestResponseDataBase) SetName(v string) {
	o.Name = &v
}

// GetRequired returns the Required field value if set, zero value otherwise.
func (o *SignatureRequestResponseDataBase) GetRequired() bool {
	if o == nil || IsNil(o.Required) {
		var ret bool
		return ret
	}
	return *o.Required
}

// GetRequiredOk returns a tuple with the Required field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignatureRequestResponseDataBase) GetRequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.Required) {
		return nil, false
	}
	return o.Required, true
}

// HasRequired returns a boolean if a field has been set.
func (o *SignatureRequestResponseDataBase) HasRequired() bool {
	if o != nil && !IsNil(o.Required) {
		return true
	}

	return false
}

// SetRequired gets a reference to the given bool and assigns it to the Required field.
func (o *SignatureRequestResponseDataBase) SetRequired(v bool) {
	o.Required = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *SignatureRequestResponseDataBase) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignatureRequestResponseDataBase) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *SignatureRequestResponseDataBase) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *SignatureRequestResponseDataBase) SetType(v string) {
	o.Type = &v
}

func (o SignatureRequestResponseDataBase) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SignatureRequestResponseDataBase) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApiId) {
		toSerialize["api_id"] = o.ApiId
	}
	if !IsNil(o.SignatureId) {
		toSerialize["signature_id"] = o.SignatureId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Required) {
		toSerialize["required"] = o.Required
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableSignatureRequestResponseDataBase struct {
	value *SignatureRequestResponseDataBase
	isSet bool
}

func (v NullableSignatureRequestResponseDataBase) Get() *SignatureRequestResponseDataBase {
	return v.value
}

func (v *NullableSignatureRequestResponseDataBase) Set(val *SignatureRequestResponseDataBase) {
	v.value = val
	v.isSet = true
}

func (v NullableSignatureRequestResponseDataBase) IsSet() bool {
	return v.isSet
}

func (v *NullableSignatureRequestResponseDataBase) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSignatureRequestResponseDataBase(val *SignatureRequestResponseDataBase) *NullableSignatureRequestResponseDataBase {
	return &NullableSignatureRequestResponseDataBase{value: val, isSet: true}
}

func (v NullableSignatureRequestResponseDataBase) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSignatureRequestResponseDataBase) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


