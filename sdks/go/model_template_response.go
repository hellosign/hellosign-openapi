/*
Dropbox Sign API

Dropbox Sign v3 API

API version: 3.0.0
Contact: apisupport@hellosign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dropbox_sign

import (
	"encoding/json"
)

// checks if the TemplateResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TemplateResponse{}

// TemplateResponse Contains information about the templates you and your team have created.
type TemplateResponse struct {
	// The id of the Template.
	TemplateId *string `json:"template_id,omitempty"`
	// The title of the Template. This will also be the default subject of the message sent to signers when using this Template to send a SignatureRequest. This can be overridden when sending the SignatureRequest.
	Title *string `json:"title,omitempty"`
	// The default message that will be sent to signers when using this Template to send a SignatureRequest. This can be overridden when sending the SignatureRequest.
	Message *string `json:"message,omitempty"`
	// Time the template was last updated.
	UpdatedAt *int32 `json:"updated_at,omitempty"`
	// `true` if this template was created using an embedded flow, `false` if it was created on our website.
	IsEmbedded NullableBool `json:"is_embedded,omitempty"`
	// `true` if you are the owner of this template, `false` if it's been shared with you by a team member.
	IsCreator NullableBool `json:"is_creator,omitempty"`
	// Indicates whether edit rights have been granted to you by the owner (always `true` if that's you).
	CanEdit NullableBool `json:"can_edit,omitempty"`
	// Indicates whether the template is locked. If `true`, then the template was created outside your quota and can only be used in `test_mode`. If `false`, then the template is within your quota and can be used to create signature requests.
	IsLocked NullableBool `json:"is_locked,omitempty"`
	// The metadata attached to the template.
	Metadata map[string]interface{} `json:"metadata,omitempty"`
	// An array of the designated signer roles that must be specified when sending a SignatureRequest using this Template.
	SignerRoles []TemplateResponseSignerRole `json:"signer_roles,omitempty"`
	// An array of the designated CC roles that must be specified when sending a SignatureRequest using this Template.
	CcRoles []TemplateResponseCCRole `json:"cc_roles,omitempty"`
	// An array describing each document associated with this Template. Includes form field data for each document.
	Documents []TemplateResponseDocument `json:"documents,omitempty"`
	// Deprecated. Use `custom_fields` inside the [documents](https://developers.hellosign.com/api/reference/operation/templateGet/#!c=200&path=template/documents&t=response) array instead.
	// Deprecated
	CustomFields []TemplateResponseDocumentCustomFieldBase `json:"custom_fields,omitempty"`
	// Deprecated. Use `form_fields` inside the [documents](https://developers.hellosign.com/api/reference/operation/templateGet/#!c=200&path=template/documents&t=response) array instead.
	// Deprecated
	NamedFormFields []TemplateResponseDocumentFormFieldBase `json:"named_form_fields,omitempty"`
	// An array of the Accounts that can use this Template.
	Accounts []TemplateResponseAccount `json:"accounts,omitempty"`
}

// NewTemplateResponse instantiates a new TemplateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplateResponse() *TemplateResponse {
	this := TemplateResponse{}
	return &this
}

// NewTemplateResponseWithDefaults instantiates a new TemplateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplateResponseWithDefaults() *TemplateResponse {
	this := TemplateResponse{}
	return &this
}

// GetTemplateId returns the TemplateId field value if set, zero value otherwise.
func (o *TemplateResponse) GetTemplateId() string {
	if o == nil || IsNil(o.TemplateId) {
		var ret string
		return ret
	}
	return *o.TemplateId
}

// GetTemplateIdOk returns a tuple with the TemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateResponse) GetTemplateIdOk() (*string, bool) {
	if o == nil || IsNil(o.TemplateId) {
		return nil, false
	}
	return o.TemplateId, true
}

// HasTemplateId returns a boolean if a field has been set.
func (o *TemplateResponse) HasTemplateId() bool {
	if o != nil && !IsNil(o.TemplateId) {
		return true
	}

	return false
}

// SetTemplateId gets a reference to the given string and assigns it to the TemplateId field.
func (o *TemplateResponse) SetTemplateId(v string) {
	o.TemplateId = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *TemplateResponse) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateResponse) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *TemplateResponse) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *TemplateResponse) SetTitle(v string) {
	o.Title = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *TemplateResponse) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateResponse) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *TemplateResponse) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *TemplateResponse) SetMessage(v string) {
	o.Message = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *TemplateResponse) GetUpdatedAt() int32 {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret int32
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateResponse) GetUpdatedAtOk() (*int32, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *TemplateResponse) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given int32 and assigns it to the UpdatedAt field.
func (o *TemplateResponse) SetUpdatedAt(v int32) {
	o.UpdatedAt = &v
}

// GetIsEmbedded returns the IsEmbedded field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TemplateResponse) GetIsEmbedded() bool {
	if o == nil || IsNil(o.IsEmbedded.Get()) {
		var ret bool
		return ret
	}
	return *o.IsEmbedded.Get()
}

// GetIsEmbeddedOk returns a tuple with the IsEmbedded field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TemplateResponse) GetIsEmbeddedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsEmbedded.Get(), o.IsEmbedded.IsSet()
}

// HasIsEmbedded returns a boolean if a field has been set.
func (o *TemplateResponse) HasIsEmbedded() bool {
	if o != nil && o.IsEmbedded.IsSet() {
		return true
	}

	return false
}

// SetIsEmbedded gets a reference to the given NullableBool and assigns it to the IsEmbedded field.
func (o *TemplateResponse) SetIsEmbedded(v bool) {
	o.IsEmbedded.Set(&v)
}
// SetIsEmbeddedNil sets the value for IsEmbedded to be an explicit nil
func (o *TemplateResponse) SetIsEmbeddedNil() {
	o.IsEmbedded.Set(nil)
}

// UnsetIsEmbedded ensures that no value is present for IsEmbedded, not even an explicit nil
func (o *TemplateResponse) UnsetIsEmbedded() {
	o.IsEmbedded.Unset()
}

// GetIsCreator returns the IsCreator field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TemplateResponse) GetIsCreator() bool {
	if o == nil || IsNil(o.IsCreator.Get()) {
		var ret bool
		return ret
	}
	return *o.IsCreator.Get()
}

// GetIsCreatorOk returns a tuple with the IsCreator field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TemplateResponse) GetIsCreatorOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsCreator.Get(), o.IsCreator.IsSet()
}

// HasIsCreator returns a boolean if a field has been set.
func (o *TemplateResponse) HasIsCreator() bool {
	if o != nil && o.IsCreator.IsSet() {
		return true
	}

	return false
}

// SetIsCreator gets a reference to the given NullableBool and assigns it to the IsCreator field.
func (o *TemplateResponse) SetIsCreator(v bool) {
	o.IsCreator.Set(&v)
}
// SetIsCreatorNil sets the value for IsCreator to be an explicit nil
func (o *TemplateResponse) SetIsCreatorNil() {
	o.IsCreator.Set(nil)
}

// UnsetIsCreator ensures that no value is present for IsCreator, not even an explicit nil
func (o *TemplateResponse) UnsetIsCreator() {
	o.IsCreator.Unset()
}

// GetCanEdit returns the CanEdit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TemplateResponse) GetCanEdit() bool {
	if o == nil || IsNil(o.CanEdit.Get()) {
		var ret bool
		return ret
	}
	return *o.CanEdit.Get()
}

// GetCanEditOk returns a tuple with the CanEdit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TemplateResponse) GetCanEditOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.CanEdit.Get(), o.CanEdit.IsSet()
}

// HasCanEdit returns a boolean if a field has been set.
func (o *TemplateResponse) HasCanEdit() bool {
	if o != nil && o.CanEdit.IsSet() {
		return true
	}

	return false
}

// SetCanEdit gets a reference to the given NullableBool and assigns it to the CanEdit field.
func (o *TemplateResponse) SetCanEdit(v bool) {
	o.CanEdit.Set(&v)
}
// SetCanEditNil sets the value for CanEdit to be an explicit nil
func (o *TemplateResponse) SetCanEditNil() {
	o.CanEdit.Set(nil)
}

// UnsetCanEdit ensures that no value is present for CanEdit, not even an explicit nil
func (o *TemplateResponse) UnsetCanEdit() {
	o.CanEdit.Unset()
}

// GetIsLocked returns the IsLocked field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TemplateResponse) GetIsLocked() bool {
	if o == nil || IsNil(o.IsLocked.Get()) {
		var ret bool
		return ret
	}
	return *o.IsLocked.Get()
}

// GetIsLockedOk returns a tuple with the IsLocked field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TemplateResponse) GetIsLockedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsLocked.Get(), o.IsLocked.IsSet()
}

// HasIsLocked returns a boolean if a field has been set.
func (o *TemplateResponse) HasIsLocked() bool {
	if o != nil && o.IsLocked.IsSet() {
		return true
	}

	return false
}

// SetIsLocked gets a reference to the given NullableBool and assigns it to the IsLocked field.
func (o *TemplateResponse) SetIsLocked(v bool) {
	o.IsLocked.Set(&v)
}
// SetIsLockedNil sets the value for IsLocked to be an explicit nil
func (o *TemplateResponse) SetIsLockedNil() {
	o.IsLocked.Set(nil)
}

// UnsetIsLocked ensures that no value is present for IsLocked, not even an explicit nil
func (o *TemplateResponse) UnsetIsLocked() {
	o.IsLocked.Unset()
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *TemplateResponse) GetMetadata() map[string]interface{} {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateResponse) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return map[string]interface{}{}, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *TemplateResponse) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *TemplateResponse) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

// GetSignerRoles returns the SignerRoles field value if set, zero value otherwise.
func (o *TemplateResponse) GetSignerRoles() []TemplateResponseSignerRole {
	if o == nil || IsNil(o.SignerRoles) {
		var ret []TemplateResponseSignerRole
		return ret
	}
	return o.SignerRoles
}

// GetSignerRolesOk returns a tuple with the SignerRoles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateResponse) GetSignerRolesOk() ([]TemplateResponseSignerRole, bool) {
	if o == nil || IsNil(o.SignerRoles) {
		return nil, false
	}
	return o.SignerRoles, true
}

// HasSignerRoles returns a boolean if a field has been set.
func (o *TemplateResponse) HasSignerRoles() bool {
	if o != nil && !IsNil(o.SignerRoles) {
		return true
	}

	return false
}

// SetSignerRoles gets a reference to the given []TemplateResponseSignerRole and assigns it to the SignerRoles field.
func (o *TemplateResponse) SetSignerRoles(v []TemplateResponseSignerRole) {
	o.SignerRoles = v
}

// GetCcRoles returns the CcRoles field value if set, zero value otherwise.
func (o *TemplateResponse) GetCcRoles() []TemplateResponseCCRole {
	if o == nil || IsNil(o.CcRoles) {
		var ret []TemplateResponseCCRole
		return ret
	}
	return o.CcRoles
}

// GetCcRolesOk returns a tuple with the CcRoles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateResponse) GetCcRolesOk() ([]TemplateResponseCCRole, bool) {
	if o == nil || IsNil(o.CcRoles) {
		return nil, false
	}
	return o.CcRoles, true
}

// HasCcRoles returns a boolean if a field has been set.
func (o *TemplateResponse) HasCcRoles() bool {
	if o != nil && !IsNil(o.CcRoles) {
		return true
	}

	return false
}

// SetCcRoles gets a reference to the given []TemplateResponseCCRole and assigns it to the CcRoles field.
func (o *TemplateResponse) SetCcRoles(v []TemplateResponseCCRole) {
	o.CcRoles = v
}

// GetDocuments returns the Documents field value if set, zero value otherwise.
func (o *TemplateResponse) GetDocuments() []TemplateResponseDocument {
	if o == nil || IsNil(o.Documents) {
		var ret []TemplateResponseDocument
		return ret
	}
	return o.Documents
}

// GetDocumentsOk returns a tuple with the Documents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateResponse) GetDocumentsOk() ([]TemplateResponseDocument, bool) {
	if o == nil || IsNil(o.Documents) {
		return nil, false
	}
	return o.Documents, true
}

// HasDocuments returns a boolean if a field has been set.
func (o *TemplateResponse) HasDocuments() bool {
	if o != nil && !IsNil(o.Documents) {
		return true
	}

	return false
}

// SetDocuments gets a reference to the given []TemplateResponseDocument and assigns it to the Documents field.
func (o *TemplateResponse) SetDocuments(v []TemplateResponseDocument) {
	o.Documents = v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise (both if not set or set to explicit null).
// Deprecated
func (o *TemplateResponse) GetCustomFields() []TemplateResponseDocumentCustomFieldBase {
	if o == nil {
		var ret []TemplateResponseDocumentCustomFieldBase
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
// Deprecated
func (o *TemplateResponse) GetCustomFieldsOk() ([]TemplateResponseDocumentCustomFieldBase, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return nil, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *TemplateResponse) HasCustomFields() bool {
	if o != nil && IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given []TemplateResponseDocumentCustomFieldBase and assigns it to the CustomFields field.
// Deprecated
func (o *TemplateResponse) SetCustomFields(v []TemplateResponseDocumentCustomFieldBase) {
	o.CustomFields = v
}

// GetNamedFormFields returns the NamedFormFields field value if set, zero value otherwise (both if not set or set to explicit null).
// Deprecated
func (o *TemplateResponse) GetNamedFormFields() []TemplateResponseDocumentFormFieldBase {
	if o == nil {
		var ret []TemplateResponseDocumentFormFieldBase
		return ret
	}
	return o.NamedFormFields
}

// GetNamedFormFieldsOk returns a tuple with the NamedFormFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
// Deprecated
func (o *TemplateResponse) GetNamedFormFieldsOk() ([]TemplateResponseDocumentFormFieldBase, bool) {
	if o == nil || IsNil(o.NamedFormFields) {
		return nil, false
	}
	return o.NamedFormFields, true
}

// HasNamedFormFields returns a boolean if a field has been set.
func (o *TemplateResponse) HasNamedFormFields() bool {
	if o != nil && IsNil(o.NamedFormFields) {
		return true
	}

	return false
}

// SetNamedFormFields gets a reference to the given []TemplateResponseDocumentFormFieldBase and assigns it to the NamedFormFields field.
// Deprecated
func (o *TemplateResponse) SetNamedFormFields(v []TemplateResponseDocumentFormFieldBase) {
	o.NamedFormFields = v
}

// GetAccounts returns the Accounts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TemplateResponse) GetAccounts() []TemplateResponseAccount {
	if o == nil {
		var ret []TemplateResponseAccount
		return ret
	}
	return o.Accounts
}

// GetAccountsOk returns a tuple with the Accounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TemplateResponse) GetAccountsOk() ([]TemplateResponseAccount, bool) {
	if o == nil || IsNil(o.Accounts) {
		return nil, false
	}
	return o.Accounts, true
}

// HasAccounts returns a boolean if a field has been set.
func (o *TemplateResponse) HasAccounts() bool {
	if o != nil && IsNil(o.Accounts) {
		return true
	}

	return false
}

// SetAccounts gets a reference to the given []TemplateResponseAccount and assigns it to the Accounts field.
func (o *TemplateResponse) SetAccounts(v []TemplateResponseAccount) {
	o.Accounts = v
}

func (o TemplateResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TemplateResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TemplateId) {
		toSerialize["template_id"] = o.TemplateId
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if o.IsEmbedded.IsSet() {
		toSerialize["is_embedded"] = o.IsEmbedded.Get()
	}
	if o.IsCreator.IsSet() {
		toSerialize["is_creator"] = o.IsCreator.Get()
	}
	if o.CanEdit.IsSet() {
		toSerialize["can_edit"] = o.CanEdit.Get()
	}
	if o.IsLocked.IsSet() {
		toSerialize["is_locked"] = o.IsLocked.Get()
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.SignerRoles) {
		toSerialize["signer_roles"] = o.SignerRoles
	}
	if !IsNil(o.CcRoles) {
		toSerialize["cc_roles"] = o.CcRoles
	}
	if !IsNil(o.Documents) {
		toSerialize["documents"] = o.Documents
	}
	if o.CustomFields != nil {
		toSerialize["custom_fields"] = o.CustomFields
	}
	if o.NamedFormFields != nil {
		toSerialize["named_form_fields"] = o.NamedFormFields
	}
	if o.Accounts != nil {
		toSerialize["accounts"] = o.Accounts
	}
	return toSerialize, nil
}

type NullableTemplateResponse struct {
	value *TemplateResponse
	isSet bool
}

func (v NullableTemplateResponse) Get() *TemplateResponse {
	return v.value
}

func (v *NullableTemplateResponse) Set(val *TemplateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplateResponse(val *TemplateResponse) *NullableTemplateResponse {
	return &NullableTemplateResponse{value: val, isSet: true}
}

func (v NullableTemplateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


