/*
Dropbox Sign API

Dropbox Sign v3 API

API version: 3.0.0
Contact: apisupport@hellosign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dropbox_sign

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the WarningResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WarningResponse{}

// WarningResponse A list of warnings.
type WarningResponse struct {
	// Warning message
	WarningMsg string `json:"warning_msg"`
	// Warning name
	WarningName string `json:"warning_name"`
}

type _WarningResponse WarningResponse

// NewWarningResponse instantiates a new WarningResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWarningResponse(warningMsg string, warningName string) *WarningResponse {
	this := WarningResponse{}
	this.WarningMsg = warningMsg
	this.WarningName = warningName
	return &this
}

// NewWarningResponseWithDefaults instantiates a new WarningResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWarningResponseWithDefaults() *WarningResponse {
	this := WarningResponse{}
	return &this
}

// GetWarningMsg returns the WarningMsg field value
func (o *WarningResponse) GetWarningMsg() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WarningMsg
}

// GetWarningMsgOk returns a tuple with the WarningMsg field value
// and a boolean to check if the value has been set.
func (o *WarningResponse) GetWarningMsgOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WarningMsg, true
}

// SetWarningMsg sets field value
func (o *WarningResponse) SetWarningMsg(v string) {
	o.WarningMsg = v
}

// GetWarningName returns the WarningName field value
func (o *WarningResponse) GetWarningName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WarningName
}

// GetWarningNameOk returns a tuple with the WarningName field value
// and a boolean to check if the value has been set.
func (o *WarningResponse) GetWarningNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WarningName, true
}

// SetWarningName sets field value
func (o *WarningResponse) SetWarningName(v string) {
	o.WarningName = v
}

func (o WarningResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WarningResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["warning_msg"] = o.WarningMsg
	toSerialize["warning_name"] = o.WarningName
	return toSerialize, nil
}

func (o *WarningResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"warning_msg",
		"warning_name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWarningResponse := _WarningResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWarningResponse)

	if err != nil {
		return err
	}

	*o = WarningResponse(varWarningResponse)

	return err
}

type NullableWarningResponse struct {
	value *WarningResponse
	isSet bool
}

func (v NullableWarningResponse) Get() *WarningResponse {
	return v.value
}

func (v *NullableWarningResponse) Set(val *WarningResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableWarningResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableWarningResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWarningResponse(val *WarningResponse) *NullableWarningResponse {
	return &NullableWarningResponse{value: val, isSet: true}
}

func (v NullableWarningResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWarningResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


