/*
Dropbox Sign API

Dropbox Sign v3 API

API version: 3.0.0
Contact: apisupport@hellosign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dropbox_sign

import (
	"encoding/json"
)

// checks if the ApiAppResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiAppResponse{}

// ApiAppResponse Contains information about an API App.
type ApiAppResponse struct {
	// The app's callback URL (for events)
	CallbackUrl NullableString `json:"callback_url,omitempty"`
	// The app's client id
	ClientId *string `json:"client_id,omitempty"`
	// The time that the app was created
	CreatedAt *int32 `json:"created_at,omitempty"`
	// The domain name(s) associated with the app
	Domains []string `json:"domains,omitempty"`
	// The name of the app
	Name *string `json:"name,omitempty"`
	// Boolean to indicate if the app has been approved
	IsApproved *bool `json:"is_approved,omitempty"`
	Oauth NullableApiAppResponseOAuth `json:"oauth,omitempty"`
	Options NullableApiAppResponseOptions `json:"options,omitempty"`
	OwnerAccount *ApiAppResponseOwnerAccount `json:"owner_account,omitempty"`
	WhiteLabelingOptions NullableApiAppResponseWhiteLabelingOptions `json:"white_labeling_options,omitempty"`
}

// NewApiAppResponse instantiates a new ApiAppResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiAppResponse() *ApiAppResponse {
	this := ApiAppResponse{}
	return &this
}

// NewApiAppResponseWithDefaults instantiates a new ApiAppResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiAppResponseWithDefaults() *ApiAppResponse {
	this := ApiAppResponse{}
	return &this
}

// GetCallbackUrl returns the CallbackUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiAppResponse) GetCallbackUrl() string {
	if o == nil || IsNil(o.CallbackUrl.Get()) {
		var ret string
		return ret
	}
	return *o.CallbackUrl.Get()
}

// GetCallbackUrlOk returns a tuple with the CallbackUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiAppResponse) GetCallbackUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CallbackUrl.Get(), o.CallbackUrl.IsSet()
}

// HasCallbackUrl returns a boolean if a field has been set.
func (o *ApiAppResponse) HasCallbackUrl() bool {
	if o != nil && o.CallbackUrl.IsSet() {
		return true
	}

	return false
}

// SetCallbackUrl gets a reference to the given NullableString and assigns it to the CallbackUrl field.
func (o *ApiAppResponse) SetCallbackUrl(v string) {
	o.CallbackUrl.Set(&v)
}
// SetCallbackUrlNil sets the value for CallbackUrl to be an explicit nil
func (o *ApiAppResponse) SetCallbackUrlNil() {
	o.CallbackUrl.Set(nil)
}

// UnsetCallbackUrl ensures that no value is present for CallbackUrl, not even an explicit nil
func (o *ApiAppResponse) UnsetCallbackUrl() {
	o.CallbackUrl.Unset()
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *ApiAppResponse) GetClientId() string {
	if o == nil || IsNil(o.ClientId) {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAppResponse) GetClientIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClientId) {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *ApiAppResponse) HasClientId() bool {
	if o != nil && !IsNil(o.ClientId) {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *ApiAppResponse) SetClientId(v string) {
	o.ClientId = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ApiAppResponse) GetCreatedAt() int32 {
	if o == nil || IsNil(o.CreatedAt) {
		var ret int32
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAppResponse) GetCreatedAtOk() (*int32, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ApiAppResponse) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given int32 and assigns it to the CreatedAt field.
func (o *ApiAppResponse) SetCreatedAt(v int32) {
	o.CreatedAt = &v
}

// GetDomains returns the Domains field value if set, zero value otherwise.
func (o *ApiAppResponse) GetDomains() []string {
	if o == nil || IsNil(o.Domains) {
		var ret []string
		return ret
	}
	return o.Domains
}

// GetDomainsOk returns a tuple with the Domains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAppResponse) GetDomainsOk() ([]string, bool) {
	if o == nil || IsNil(o.Domains) {
		return nil, false
	}
	return o.Domains, true
}

// HasDomains returns a boolean if a field has been set.
func (o *ApiAppResponse) HasDomains() bool {
	if o != nil && !IsNil(o.Domains) {
		return true
	}

	return false
}

// SetDomains gets a reference to the given []string and assigns it to the Domains field.
func (o *ApiAppResponse) SetDomains(v []string) {
	o.Domains = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ApiAppResponse) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAppResponse) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ApiAppResponse) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ApiAppResponse) SetName(v string) {
	o.Name = &v
}

// GetIsApproved returns the IsApproved field value if set, zero value otherwise.
func (o *ApiAppResponse) GetIsApproved() bool {
	if o == nil || IsNil(o.IsApproved) {
		var ret bool
		return ret
	}
	return *o.IsApproved
}

// GetIsApprovedOk returns a tuple with the IsApproved field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAppResponse) GetIsApprovedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsApproved) {
		return nil, false
	}
	return o.IsApproved, true
}

// HasIsApproved returns a boolean if a field has been set.
func (o *ApiAppResponse) HasIsApproved() bool {
	if o != nil && !IsNil(o.IsApproved) {
		return true
	}

	return false
}

// SetIsApproved gets a reference to the given bool and assigns it to the IsApproved field.
func (o *ApiAppResponse) SetIsApproved(v bool) {
	o.IsApproved = &v
}

// GetOauth returns the Oauth field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiAppResponse) GetOauth() ApiAppResponseOAuth {
	if o == nil || IsNil(o.Oauth.Get()) {
		var ret ApiAppResponseOAuth
		return ret
	}
	return *o.Oauth.Get()
}

// GetOauthOk returns a tuple with the Oauth field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiAppResponse) GetOauthOk() (*ApiAppResponseOAuth, bool) {
	if o == nil {
		return nil, false
	}
	return o.Oauth.Get(), o.Oauth.IsSet()
}

// HasOauth returns a boolean if a field has been set.
func (o *ApiAppResponse) HasOauth() bool {
	if o != nil && o.Oauth.IsSet() {
		return true
	}

	return false
}

// SetOauth gets a reference to the given NullableApiAppResponseOAuth and assigns it to the Oauth field.
func (o *ApiAppResponse) SetOauth(v ApiAppResponseOAuth) {
	o.Oauth.Set(&v)
}
// SetOauthNil sets the value for Oauth to be an explicit nil
func (o *ApiAppResponse) SetOauthNil() {
	o.Oauth.Set(nil)
}

// UnsetOauth ensures that no value is present for Oauth, not even an explicit nil
func (o *ApiAppResponse) UnsetOauth() {
	o.Oauth.Unset()
}

// GetOptions returns the Options field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiAppResponse) GetOptions() ApiAppResponseOptions {
	if o == nil || IsNil(o.Options.Get()) {
		var ret ApiAppResponseOptions
		return ret
	}
	return *o.Options.Get()
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiAppResponse) GetOptionsOk() (*ApiAppResponseOptions, bool) {
	if o == nil {
		return nil, false
	}
	return o.Options.Get(), o.Options.IsSet()
}

// HasOptions returns a boolean if a field has been set.
func (o *ApiAppResponse) HasOptions() bool {
	if o != nil && o.Options.IsSet() {
		return true
	}

	return false
}

// SetOptions gets a reference to the given NullableApiAppResponseOptions and assigns it to the Options field.
func (o *ApiAppResponse) SetOptions(v ApiAppResponseOptions) {
	o.Options.Set(&v)
}
// SetOptionsNil sets the value for Options to be an explicit nil
func (o *ApiAppResponse) SetOptionsNil() {
	o.Options.Set(nil)
}

// UnsetOptions ensures that no value is present for Options, not even an explicit nil
func (o *ApiAppResponse) UnsetOptions() {
	o.Options.Unset()
}

// GetOwnerAccount returns the OwnerAccount field value if set, zero value otherwise.
func (o *ApiAppResponse) GetOwnerAccount() ApiAppResponseOwnerAccount {
	if o == nil || IsNil(o.OwnerAccount) {
		var ret ApiAppResponseOwnerAccount
		return ret
	}
	return *o.OwnerAccount
}

// GetOwnerAccountOk returns a tuple with the OwnerAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAppResponse) GetOwnerAccountOk() (*ApiAppResponseOwnerAccount, bool) {
	if o == nil || IsNil(o.OwnerAccount) {
		return nil, false
	}
	return o.OwnerAccount, true
}

// HasOwnerAccount returns a boolean if a field has been set.
func (o *ApiAppResponse) HasOwnerAccount() bool {
	if o != nil && !IsNil(o.OwnerAccount) {
		return true
	}

	return false
}

// SetOwnerAccount gets a reference to the given ApiAppResponseOwnerAccount and assigns it to the OwnerAccount field.
func (o *ApiAppResponse) SetOwnerAccount(v ApiAppResponseOwnerAccount) {
	o.OwnerAccount = &v
}

// GetWhiteLabelingOptions returns the WhiteLabelingOptions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiAppResponse) GetWhiteLabelingOptions() ApiAppResponseWhiteLabelingOptions {
	if o == nil || IsNil(o.WhiteLabelingOptions.Get()) {
		var ret ApiAppResponseWhiteLabelingOptions
		return ret
	}
	return *o.WhiteLabelingOptions.Get()
}

// GetWhiteLabelingOptionsOk returns a tuple with the WhiteLabelingOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiAppResponse) GetWhiteLabelingOptionsOk() (*ApiAppResponseWhiteLabelingOptions, bool) {
	if o == nil {
		return nil, false
	}
	return o.WhiteLabelingOptions.Get(), o.WhiteLabelingOptions.IsSet()
}

// HasWhiteLabelingOptions returns a boolean if a field has been set.
func (o *ApiAppResponse) HasWhiteLabelingOptions() bool {
	if o != nil && o.WhiteLabelingOptions.IsSet() {
		return true
	}

	return false
}

// SetWhiteLabelingOptions gets a reference to the given NullableApiAppResponseWhiteLabelingOptions and assigns it to the WhiteLabelingOptions field.
func (o *ApiAppResponse) SetWhiteLabelingOptions(v ApiAppResponseWhiteLabelingOptions) {
	o.WhiteLabelingOptions.Set(&v)
}
// SetWhiteLabelingOptionsNil sets the value for WhiteLabelingOptions to be an explicit nil
func (o *ApiAppResponse) SetWhiteLabelingOptionsNil() {
	o.WhiteLabelingOptions.Set(nil)
}

// UnsetWhiteLabelingOptions ensures that no value is present for WhiteLabelingOptions, not even an explicit nil
func (o *ApiAppResponse) UnsetWhiteLabelingOptions() {
	o.WhiteLabelingOptions.Unset()
}

func (o ApiAppResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiAppResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.CallbackUrl.IsSet() {
		toSerialize["callback_url"] = o.CallbackUrl.Get()
	}
	if !IsNil(o.ClientId) {
		toSerialize["client_id"] = o.ClientId
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.Domains) {
		toSerialize["domains"] = o.Domains
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.IsApproved) {
		toSerialize["is_approved"] = o.IsApproved
	}
	if o.Oauth.IsSet() {
		toSerialize["oauth"] = o.Oauth.Get()
	}
	if o.Options.IsSet() {
		toSerialize["options"] = o.Options.Get()
	}
	if !IsNil(o.OwnerAccount) {
		toSerialize["owner_account"] = o.OwnerAccount
	}
	if o.WhiteLabelingOptions.IsSet() {
		toSerialize["white_labeling_options"] = o.WhiteLabelingOptions.Get()
	}
	return toSerialize, nil
}

type NullableApiAppResponse struct {
	value *ApiAppResponse
	isSet bool
}

func (v NullableApiAppResponse) Get() *ApiAppResponse {
	return v.value
}

func (v *NullableApiAppResponse) Set(val *ApiAppResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableApiAppResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableApiAppResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiAppResponse(val *ApiAppResponse) *NullableApiAppResponse {
	return &NullableApiAppResponse{value: val, isSet: true}
}

func (v NullableApiAppResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiAppResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


