=begin
#Dropbox Sign API

#Dropbox Sign v3 API

The version of the OpenAPI document: 3.0.0
Contact: apisupport@hellosign.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.3.0

=end

require 'spec_helper'
require 'json_spec'
require_relative '../test_utils'

describe Dropbox::Sign::TeamApi do
  context 'TeamApiTest' do
    api = Dropbox::Sign::TeamApi.new

    it 'testTeamAddMember' do
      request_class = 'TeamAddMemberRequest'
      request_data = get_fixture_data(request_class)[:default]

      response_class = 'TeamGetResponse'
      response_data = get_fixture_data(response_class)[:default]

      set_expected_response(200, JSON.dump(response_data))
      expected = Dropbox::Sign::TeamGetResponse.init(response_data)
      obj = Dropbox::Sign::TeamAddMemberRequest.init(request_data)

      result = api.team_add_member(obj)

      expect(result.class.to_s).to eq("Dropbox::Sign::#{response_class}")
      expect(result.to_json).to be_json_eql(JSON.dump(expected))
    end

    it 'testTeamCreate' do
      request_class = 'TeamCreateRequest'
      request_data = get_fixture_data(request_class)[:default]

      response_class = 'TeamGetResponse'
      response_data = get_fixture_data(response_class)[:default]

      set_expected_response(200, JSON.dump(response_data))
      expected = Dropbox::Sign::TeamGetResponse.init(response_data)
      obj = Dropbox::Sign::TeamCreateRequest.init(request_data)

      result = api.team_create(obj)

      expect(result.class.to_s).to eq("Dropbox::Sign::#{response_class}")
      expect(result.to_json).to be_json_eql(JSON.dump(expected))
    end

    skip 'testTeamDelete' do
    end

    it 'testTeamGet' do
      response_class = 'TeamGetResponse'
      response_data = get_fixture_data(response_class)[:default]

      set_expected_response(200, JSON.dump(response_data))
      expected = Dropbox::Sign::TeamGetResponse.init(response_data)

      result = api.team_get

      expect(result.class.to_s).to eq("Dropbox::Sign::#{response_class}")
      expect(result.to_json).to be_json_eql(JSON.dump(expected))
    end

    it 'testTeamUpdate' do
      request_class = 'TeamUpdateRequest'
      request_data = get_fixture_data(request_class)[:default]

      response_class = 'TeamGetResponse'
      response_data = get_fixture_data(response_class)[:default]

      set_expected_response(200, JSON.dump(response_data))
      expected = Dropbox::Sign::TeamGetResponse.init(response_data)
      obj = Dropbox::Sign::TeamUpdateRequest.init(request_data)

      result = api.team_update(obj)

      expect(result.class.to_s).to eq("Dropbox::Sign::#{response_class}")
      expect(result.to_json).to be_json_eql(JSON.dump(expected))
    end

    it 'testTeamRemoveMember' do
      request_class = 'TeamRemoveMemberRequest'
      request_data = get_fixture_data(request_class)[:default]

      response_class = 'TeamGetResponse'
      response_data = get_fixture_data(response_class)[:default]

      set_expected_response(200, JSON.dump(response_data))
      expected = Dropbox::Sign::TeamGetResponse.init(response_data)
      obj = Dropbox::Sign::TeamRemoveMemberRequest.init(request_data)

      result = api.team_remove_member(obj)

      expect(result.class.to_s).to eq("Dropbox::Sign::#{response_class}")
      expect(result.to_json).to be_json_eql(JSON.dump(expected))
    end
  end
end
