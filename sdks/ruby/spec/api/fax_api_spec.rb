=begin
#Dropbox Sign API

#Dropbox Sign v3 API

The version of the OpenAPI document: 3.0.0
Contact: apisupport@hellosign.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.3.0

=end

require 'spec_helper'
require 'json_spec'
require_relative '../test_utils'

root_file_path = __dir__ + "/../../test_fixtures"

describe Dropbox::Sign::FaxApi do
  context 'FaxApiTest' do
    api = Dropbox::Sign::FaxApi.new

    it 'testFaxSend' do
      request_class = 'FaxSendRequest'
      request_data = get_fixture_data(request_class)[:default]

      response_class = 'FaxGetResponse'
      response_data = get_fixture_data(response_class)[:default]

      set_expected_response(200, JSON.dump(response_data))
      expected = Dropbox::Sign::FaxGetResponse.init(response_data)
      obj = Dropbox::Sign::FaxSendRequest.init(request_data)
      obj.files = [File.new("#{root_file_path}/pdf-sample.pdf", "r")]

      result = api.fax_send(obj)

      expect(result.class.to_s).to eq("Dropbox::Sign::#{response_class}")
      expect(result.to_json).to be_json_eql(JSON.dump(expected))
    end

    it 'testFaxGet' do
      signature_request_id = 'c2e9691c85d9d6fa6ae773842e3680b2b8650f1d'

      response_class = 'FaxGetResponse'
      response_data = get_fixture_data(response_class)[:default]

      set_expected_response(200, JSON.dump(response_data))
      expected = Dropbox::Sign::FaxGetResponse.init(response_data)

      result = api.fax_get(signature_request_id)

      expect(result.class.to_s).to eq("Dropbox::Sign::#{response_class}")
      expect(result.to_json).to be_json_eql(JSON.dump(expected))
    end

    it 'testFaxList' do
      response_class = 'FaxListResponse'
      response_data = get_fixture_data(response_class)[:default]

      set_expected_response(200, JSON.dump(response_data))
      expected = Dropbox::Sign::FaxListResponse.init(response_data)

      result = api.fax_list()

      expect(result.class.to_s).to eq("Dropbox::Sign::#{response_class}")
      expect(result.to_json).to be_json_eql(JSON.dump(expected))
    end
  end
end
