{{>licenseInfo}}
{{#models}}
{{#model}}
{{^useCustomTemplateCode}}
import { RequestFile } from './models';
{{/useCustomTemplateCode}}
{{#useCustomTemplateCode}}
import { RequestFile, AttributeTypeMap, ObjectSerializer } from './';
{{/useCustomTemplateCode}}
{{#tsImports}}
import { {{classname}} } from '{{filename}}';
{{/tsImports}}

{{#description}}
/**
* {{{.}}}
*/
{{/description}}
{{^isEnum}}
{{^useCustomTemplateCode}}
export class {{classname}} {{#parent}}extends {{{.}}} {{/parent}}{
{{/useCustomTemplateCode}}
{{#useCustomTemplateCode}}
export {{#vendorExtensions.x-base-class}}abstract {{/vendorExtensions.x-base-class}}class {{classname}} {{#parent}}extends {{{.}}} {{/parent}}{
{{/useCustomTemplateCode}}
{{#vars}}
{{#description}}
    /**
    * {{{.}}}
    */
{{/description}}
{{^useCustomTemplateCode}}
    '{{name}}'{{^required}}?{{/required}}: {{#isEnum}}{{{datatypeWithEnum}}}{{/isEnum}}{{^isEnum}}{{{dataType}}}{{#isNullable}} | null{{/isNullable}}{{/isEnum}}{{#defaultValue}} = {{#isEnum}}{{classname}}.{{/isEnum}}{{{.}}}{{/defaultValue}};
{{/useCustomTemplateCode}}
{{#useCustomTemplateCode}}
    '{{name}}'{{^required}}?{{/required}}: {{#isEnum}}{{{datatypeWithEnum}}}{{/isEnum}}{{^isEnum}}{{#vendorExtensions.x-int-or-string}}number | string{{/vendorExtensions.x-int-or-string}}{{^vendorExtensions.x-int-or-string}}{{{dataType}}}{{/vendorExtensions.x-int-or-string}}{{#isNullable}} | null{{/isNullable}}{{/isEnum}}{{#defaultValue}} = {{{.}}}{{/defaultValue}};
{{/useCustomTemplateCode}}
{{/vars}}

    {{#discriminator}}
    static discriminator: string | undefined = "{{discriminatorName}}";
    {{/discriminator}}
    {{^discriminator}}
    static discriminator: string | undefined = undefined;
    {{/discriminator}}

    {{^isArray}}
{{^useCustomTemplateCode}}
    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
{{/useCustomTemplateCode}}
{{#useCustomTemplateCode}}
    static attributeTypeMap: AttributeTypeMap = [
{{/useCustomTemplateCode}}
        {{#vars}}
        {
            "name": "{{name}}",
            "baseName": "{{baseName}}",
            "type": "{{#isEnum}}{{{datatypeWithEnum}}}{{/isEnum}}{{^isEnum}}{{{dataType}}}{{/isEnum}}"
        }{{^-last}},
        {{/-last}}
        {{/vars}}
    ];

{{^useCustomTemplateCode}}
    static getAttributeTypeMap() {
{{/useCustomTemplateCode}}
{{#useCustomTemplateCode}}
    static getAttributeTypeMap(): AttributeTypeMap {
{{/useCustomTemplateCode}}
        {{#parent}}
        return super.getAttributeTypeMap().concat({{classname}}.attributeTypeMap);
        {{/parent}}
        {{^parent}}
        return {{classname}}.attributeTypeMap;
        {{/parent}}
    }
{{#useCustomTemplateCode}}

{{#discriminator}}
    static discriminatorClassName(value: any): string | null {
        if ((value === undefined) || (value === null)) {
            return null;
        }

        {{#discriminator.mappedModels}}
            if (value === '{{mappingName}}') {
            return "{{modelName}}";
            }
        {{/discriminator.mappedModels}}

        return null;
    }
{{/discriminator}}
{{^discriminator}}
    /** Attempt to instantiate and hydrate a new instance of this class */
    static init(data: any): {{classname}} {
        return ObjectSerializer.deserialize(data, '{{classname}}');
    }
{{/discriminator}}
{{/useCustomTemplateCode}}
    {{/isArray}}
}

{{#hasEnums}}
export namespace {{classname}} {
{{#vars}}
{{#isEnum}}
    export enum {{enumName}} {
        {{#allowableValues}}
        {{#enumVars}}
{{^useCustomTemplateCode}}
        {{name}} = <any> {{{value}}}{{^-last}},{{/-last}}
{{/useCustomTemplateCode}}
{{#useCustomTemplateCode}}
        {{name}} = {{{value}}}{{^-last}},{{/-last}}
{{/useCustomTemplateCode}}
        {{/enumVars}}
        {{/allowableValues}}
    }
{{/isEnum}}
{{/vars}}
}
{{/hasEnums}}
{{/isEnum}}
{{#isEnum}}
export enum {{classname}} {
    {{#allowableValues}}
    {{#enumVars}}
{{^useCustomTemplateCode}}
    {{name}} = <any> {{{value}}}{{^-last}},{{/-last}}
{{/useCustomTemplateCode}}
{{#useCustomTemplateCode}}
    {{name}} = {{{value}}}{{^-last}},{{/-last}}
{{/useCustomTemplateCode}}
    {{/enumVars}}
    {{/allowableValues}}
}
{{/isEnum}}
{{/model}}
{{/models}}
