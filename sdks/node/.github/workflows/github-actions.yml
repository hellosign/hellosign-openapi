# This workflow will build the project, run integration tests, and release.
# Because secrets are not available on external forks, this job is expected to fail
# on external pull requests.

name: Build, Check, Publish

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Build SDK
        run: ./run-build

      - name: Ensure no changes in Generated Code
        run: ./bin/check-clean-git-status

  # This job runs on pull requests
  # Does not publish to npmjs.org, this is a dry-run only
  publish-test:
    runs-on: ubuntu-latest
    if: >-
      github.repository == 'hellosign/dropbox-sign-node'
      && github.ref != 'refs/heads/main'
      && github.event_name == 'pull_request'
    needs: [ build ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'

      - run: npm ci

      - run: npm publish --access=public --dry-run
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_API_KEY }}

  # This job runs on merging to "main" branch
  # Builds and publishes gem
  publish-prod:
    runs-on: ubuntu-latest
    if: >-
      github.repository == 'hellosign/dropbox-sign-node'
      && github.ref == 'refs/heads/main'
      && github.event_name != 'pull_request'
    needs: [ build ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'

      - run: npm ci

      - run: npm publish --access=public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_API_KEY }}

  # This job runs on merging to "main" branch
  # Creates a new tag using the value in the VERSION file
  cut-tag:
    runs-on: ubuntu-latest
    if: >-
      github.repository == 'hellosign/dropbox-sign-node'
      && github.ref == 'refs/heads/main'
      && github.event_name != 'pull_request'
    needs: [ publish-prod ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Retrieve version
        run: echo "PACKAGE_VERSION=$(cat VERSION)" >> $GITHUB_ENV

      - name: Create tag
        uses: actions/github-script@v6
        env:
          PACKAGE_VERSION: ${{ env.PACKAGE_VERSION }}
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/" + process.env.PACKAGE_VERSION,
              sha: context.sha
            })

