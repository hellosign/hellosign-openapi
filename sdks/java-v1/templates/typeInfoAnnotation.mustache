{{#jackson}}

@JsonIgnoreProperties(
{{#vendorExtensions.x-ignore-block}}
  value = "{{{discriminator.propertyBaseName}}}", // ignore manually set {{{discriminator.propertyBaseName}}}, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the {{{discriminator.propertyBaseName}}} to be set during deserialization
{{/vendorExtensions.x-ignore-block}}
{{! CUSTOM - BEGIN }}
  allowSetters = true, // allows the {{{discriminator.propertyBaseName}}} to be set during deserialization
  ignoreUnknown = true
{{! CUSTOM - END }}
)
{{#vendorExtensions.x-ignore-block}}
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "{{{discriminator.propertyBaseName}}}", visible = true)
{{/vendorExtensions.x-ignore-block}}
{{! CUSTOM - BEGIN }}
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.EXISTING_PROPERTY, property = "{{{discriminator.propertyBaseName}}}", visible = true)
{{! CUSTOM - END }}
{{#discriminator.mappedModels}}
{{#-first}}
@JsonSubTypes({
{{/-first}}
  @JsonSubTypes.Type(value = {{modelName}}.class, name = "{{^vendorExtensions.x-discriminator-value}}{{mappingName}}{{/vendorExtensions.x-discriminator-value}}{{#vendorExtensions.x-discriminator-value}}{{{vendorExtensions.x-discriminator-value}}}{{/vendorExtensions.x-discriminator-value}}"),
{{#-last}}
})
{{/-last}}
{{/discriminator.mappedModels}}
{{/jackson}}
