# This workflow will build the project with Gradle, run integration tests, and release.
# Because secrets are not available on external forks, this job is expected to fail
# on external pull requests.

name: Build, Check, Publish

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'zulu'

      - name: Grant execute permissions
        run: chmod +x gradlew
          && chmod +x bin/gradle
          && chmod +x run-build

      - name: Build SDK
        run: ./run-build

      - name: Ensure no changes in Generated Code
        run: ./bin/check-clean-git-status

  publish:
    runs-on: ubuntu-latest
    if: github.repository == 'hellosign/dropbox-sign-java' && github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    needs: [ build ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11

      - name: Upload Artifacts
        run: ./gradlew publishAllPublicationsToMavenCentralRepository --no-daemon --no-parallel --no-configuration-cache --stacktrace
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.SONATYPE_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.SONATYPE_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.SIGNING_KEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_PASSWORD }}

      - name: Retrieve version
        run: |
          echo "VERSION_NAME=$(cat gradle.properties | grep -w "VERSION_NAME" | cut -d'=' -f2)" >> $GITHUB_ENV
      - name: Publish Release to Maven Central
        run: ./gradlew closeAndReleaseRepository --no-daemon --no-parallel
        if: "!endsWith(env.VERSION_NAME, '-SNAPSHOT')"
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.SONATYPE_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.SONATYPE_PASSWORD }}