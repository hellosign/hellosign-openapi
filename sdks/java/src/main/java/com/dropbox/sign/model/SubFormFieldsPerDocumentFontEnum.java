/*
 * Dropbox Sign API
 * Dropbox Sign v3 API
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: apisupport@hellosign.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dropbox.sign.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.dropbox.sign.JSON;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * Gets or Sets SubFormFieldsPerDocumentFontEnum
 */
public enum SubFormFieldsPerDocumentFontEnum {
  
  HELVETICA("helvetica"),
  
  ARIAL("arial"),
  
  COURIER("courier"),
  
  CALIBRI("calibri"),
  
  CAMBRIA("cambria"),
  
  GEORGIA("georgia"),
  
  TIMES("times"),
  
  TREBUCHET("trebuchet"),
  
  VERDANA("verdana"),
  
  ROBOTO("roboto"),
  
  ROBOTOMONO("robotoMono"),
  
  NOTOSANS("notoSans"),
  
  NOTOSERIF("notoSerif"),
  
  NOTOCJK_JP_REGULAR("notoCJK-JP-Regular"),
  
  NOTOHEBREW_REGULAR("notoHebrew-Regular"),
  
  NOTOSANTHAIMERGED("notoSanThaiMerged");

  private String value;

  SubFormFieldsPerDocumentFontEnum(String value) {
    this.value = value;
  }

  @JsonValue
  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  @JsonCreator
  public static SubFormFieldsPerDocumentFontEnum fromValue(String value) {
    for (SubFormFieldsPerDocumentFontEnum b : SubFormFieldsPerDocumentFontEnum.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }
}

