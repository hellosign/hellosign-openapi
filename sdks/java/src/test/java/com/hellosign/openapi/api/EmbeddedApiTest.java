/*
 * HelloSign API
 * HelloSign v3 API
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: apisupport@hellosign.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.hellosign.openapi.api;

import com.hellosign.openapi.ApiClient;
import com.hellosign.openapi.ApiException;
import com.hellosign.openapi.TestHelper;
import com.hellosign.openapi.auth.*;
import com.hellosign.openapi.model.*;
import org.junit.Assert;
import org.junit.Test;

/**
 * API tests for EmbeddedApi
 */
public class EmbeddedApiTest {

    /**
     * Retrieves an embedded template object.
     *
     * Retrieves an embedded object containing a template url that can be opened in an iFrame. Note that only templates created via the embedded template process are available to be edited with this endpoint.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void embeddedEditUrlTest() throws Exception {
        String templateId = "5de8179668f2033afac48da1868d0093bf133266";
        EmbeddedEditUrlRequest request = TestHelper.getFixtureData(EmbeddedEditUrlRequest.class, "default");
        EmbeddedEditUrlResponse expected = TestHelper.getFixtureData(EmbeddedEditUrlResponse.class, "default");
        ApiClient apiClient = TestHelper.setUpMock(200, expected);
        EmbeddedApi api = new EmbeddedApi(apiClient);
        EmbeddedEditUrlResponse actual = api.embeddedEditUrl(templateId, request);
        Assert.assertEquals(expected, actual);
    }

    /**
     * Retrieves an embedded signing object.
     *
     * Retrieves an embedded object containing a signature url that can be opened in an iFrame. Note that templates created via the embedded template process will only be accessible through the API.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void embeddedSignUrlTest() throws Exception {
        String signatureId = "50e3542f738adfa7ddd4cbd4c00d2a8ab6e4194b";
        EmbeddedSignUrlResponse expected = TestHelper.getFixtureData(EmbeddedSignUrlResponse.class, "default");
        ApiClient apiClient = TestHelper.setUpMock(200, expected);
        EmbeddedApi api = new EmbeddedApi(apiClient);
        EmbeddedSignUrlResponse actual = api.embeddedSignUrl(signatureId);
        Assert.assertEquals(expected, actual);
    }

}
