class {{classname}}(ModelNormal):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    Attributes:
{{> model_templates/docstring_allowed }}
      attribute_map (dict): The key is attribute name
          and the value is json key in definition.
      discriminator_value_class_map (dict): A dict to go from the discriminator
          variable value to the discriminator class name.
{{> model_templates/docstring_openapi_validations }}
    """

{{> model_templates/classvars }}
    attribute_map = {
{{#requiredVars}}
        '{{name}}': '{{baseName}}',  # noqa: E501
{{/requiredVars}}
{{#optionalVars}}
        '{{name}}': '{{baseName}}',  # noqa: E501
{{/optionalVars}}
    }

    read_only_vars = {
{{#requiredVars}}
{{#isReadOnly}}
        '{{name}}',  # noqa: E501
{{/isReadOnly}}
{{/requiredVars}}
{{#optionalVars}}
{{#isReadOnly}}
        '{{name}}',  # noqa: E501
{{/isReadOnly}}
{{/optionalVars}}
    }

    _composed_schemas = {}
    {{#requiredVars}}

    @property
    def {{name}}(self) -> {{#vendorExtensions.x-int-or-string}}Union[int, str]{{/vendorExtensions.x-int-or-string}}{{^vendorExtensions.x-int-or-string}}{{{dataType}}}{{/vendorExtensions.x-int-or-string}}:
        return self.get("{{name}}")
    {{^isReadOnly}}

    @{{name}}.setter
    def {{name}}(self, value: {{#vendorExtensions.x-int-or-string}}Union[int, str]{{/vendorExtensions.x-int-or-string}}{{^vendorExtensions.x-int-or-string}}{{{dataType}}}{{/vendorExtensions.x-int-or-string}}):
        setattr(self, "{{name}}", value)
    {{/isReadOnly}}
    {{/requiredVars}}
    {{#optionalVars}}

    @property
    def {{name}}(self) -> {{{dataType}}}:
        return self.get("{{name}}")

    @{{name}}.setter
    def {{name}}(self, value: {{{dataType}}}):
        setattr(self, "{{name}}", value)
    {{/optionalVars}}

{{> model_templates/method_from_openapi_data_normal}}

{{> model_templates/method_init_normal}}