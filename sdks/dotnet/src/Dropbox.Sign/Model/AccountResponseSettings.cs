/*
 * Dropbox Sign API
 *
 * Dropbox Sign v3 API
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: apisupport@hellosign.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Dropbox.Sign.Client.OpenAPIDateConverter;

namespace Dropbox.Sign.Model
{
    /// <summary>
    /// _t__Account::SETTINGS
    /// </summary>
    [DataContract(Name = "AccountResponseSettings")]
    [JsonObject(ItemNullValueHandling = NullValueHandling.Ignore)]
    public partial class AccountResponseSettings : IEquatable<AccountResponseSettings>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AccountResponseSettings" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected AccountResponseSettings() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="AccountResponseSettings" /> class.
        /// </summary>
        /// <param name="signerAccessCodes">_t__AccountSettings::SIGNER_ACCESS_CODES.</param>
        /// <param name="smsDelivery">_t__AccountSettings::SMS_DELIVERY.</param>
        /// <param name="smsAuthentication">_t__AccountSettings::SMS_AUTHENTICATION.</param>
        public AccountResponseSettings(bool signerAccessCodes = default(bool), bool smsDelivery = default(bool), bool smsAuthentication = default(bool))
        {

            this.SignerAccessCodes = signerAccessCodes;
            this.SmsDelivery = smsDelivery;
            this.SmsAuthentication = smsAuthentication;
        }

        /// <summary>
        /// Attempt to instantiate and hydrate a new instance of this class
        /// </summary>
        /// <param name="jsonData">String of JSON data representing target object</param>
        public static AccountResponseSettings Init(string jsonData)
        {
            var obj = JsonConvert.DeserializeObject<AccountResponseSettings>(jsonData);

            if (obj == null)
            {
                throw new Exception("Unable to deserialize JSON to instance of AccountResponseSettings");
            }

            return obj;
        }

        /// <summary>
        /// _t__AccountSettings::SIGNER_ACCESS_CODES
        /// </summary>
        /// <value>_t__AccountSettings::SIGNER_ACCESS_CODES</value>
        [DataMember(Name = "signer_access_codes", EmitDefaultValue = true)]
        public bool SignerAccessCodes { get; set; }

        /// <summary>
        /// _t__AccountSettings::SMS_DELIVERY
        /// </summary>
        /// <value>_t__AccountSettings::SMS_DELIVERY</value>
        [DataMember(Name = "sms_delivery", EmitDefaultValue = true)]
        public bool SmsDelivery { get; set; }

        /// <summary>
        /// _t__AccountSettings::SMS_AUTHENTICATION
        /// </summary>
        /// <value>_t__AccountSettings::SMS_AUTHENTICATION</value>
        [DataMember(Name = "sms_authentication", EmitDefaultValue = true)]
        public bool SmsAuthentication { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AccountResponseSettings {\n");
            sb.Append("  SignerAccessCodes: ").Append(SignerAccessCodes).Append("\n");
            sb.Append("  SmsDelivery: ").Append(SmsDelivery).Append("\n");
            sb.Append("  SmsAuthentication: ").Append(SmsAuthentication).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AccountResponseSettings);
        }

        /// <summary>
        /// Returns true if AccountResponseSettings instances are equal
        /// </summary>
        /// <param name="input">Instance of AccountResponseSettings to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AccountResponseSettings input)
        {
            if (input == null)
            {
                return false;
            }
            return
                (
                    this.SignerAccessCodes == input.SignerAccessCodes ||
                    this.SignerAccessCodes.Equals(input.SignerAccessCodes)
                ) &&
                (
                    this.SmsDelivery == input.SmsDelivery ||
                    this.SmsDelivery.Equals(input.SmsDelivery)
                ) &&
                (
                    this.SmsAuthentication == input.SmsAuthentication ||
                    this.SmsAuthentication.Equals(input.SmsAuthentication)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this.SignerAccessCodes.GetHashCode();
                hashCode = (hashCode * 59) + this.SmsDelivery.GetHashCode();
                hashCode = (hashCode * 59) + this.SmsAuthentication.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
        public List<OpenApiType> GetOpenApiTypes()
        {
            var types = new List<OpenApiType>();
            types.Add(new OpenApiType()
            {
                Name = "signer_access_codes",
                Property = "SignerAccessCodes",
                Type = "bool",
                Value = SignerAccessCodes,
            });
            types.Add(new OpenApiType()
            {
                Name = "sms_delivery",
                Property = "SmsDelivery",
                Type = "bool",
                Value = SmsDelivery,
            });
            types.Add(new OpenApiType()
            {
                Name = "sms_authentication",
                Property = "SmsAuthentication",
                Type = "bool",
                Value = SmsAuthentication,
            });

            return types;
        }
    }

}
