/*
 * Dropbox Sign API
 *
 * Dropbox Sign v3 API
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: apisupport@hellosign.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Dropbox.Sign.Client.OpenAPIDateConverter;

namespace Dropbox.Sign.Model
{
    /// <summary>
    /// Defines SubFormFieldsPerDocumentFontEnum
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum SubFormFieldsPerDocumentFontEnum
    {
        /// <summary>
        /// Enum Helvetica for value: helvetica
        /// </summary>
        [EnumMember(Value = "helvetica")]
        Helvetica = 1,

        /// <summary>
        /// Enum Arial for value: arial
        /// </summary>
        [EnumMember(Value = "arial")]
        Arial = 2,

        /// <summary>
        /// Enum Courier for value: courier
        /// </summary>
        [EnumMember(Value = "courier")]
        Courier = 3,

        /// <summary>
        /// Enum Calibri for value: calibri
        /// </summary>
        [EnumMember(Value = "calibri")]
        Calibri = 4,

        /// <summary>
        /// Enum Cambria for value: cambria
        /// </summary>
        [EnumMember(Value = "cambria")]
        Cambria = 5,

        /// <summary>
        /// Enum Georgia for value: georgia
        /// </summary>
        [EnumMember(Value = "georgia")]
        Georgia = 6,

        /// <summary>
        /// Enum Times for value: times
        /// </summary>
        [EnumMember(Value = "times")]
        Times = 7,

        /// <summary>
        /// Enum Trebuchet for value: trebuchet
        /// </summary>
        [EnumMember(Value = "trebuchet")]
        Trebuchet = 8,

        /// <summary>
        /// Enum Verdana for value: verdana
        /// </summary>
        [EnumMember(Value = "verdana")]
        Verdana = 9,

        /// <summary>
        /// Enum Roboto for value: roboto
        /// </summary>
        [EnumMember(Value = "roboto")]
        Roboto = 10,

        /// <summary>
        /// Enum RobotoMono for value: robotoMono
        /// </summary>
        [EnumMember(Value = "robotoMono")]
        RobotoMono = 11,

        /// <summary>
        /// Enum NotoSans for value: notoSans
        /// </summary>
        [EnumMember(Value = "notoSans")]
        NotoSans = 12,

        /// <summary>
        /// Enum NotoSerif for value: notoSerif
        /// </summary>
        [EnumMember(Value = "notoSerif")]
        NotoSerif = 13,

        /// <summary>
        /// Enum NotoCJKJPRegular for value: notoCJK-JP-Regular
        /// </summary>
        [EnumMember(Value = "notoCJK-JP-Regular")]
        NotoCJKJPRegular = 14,

        /// <summary>
        /// Enum NotoHebrewRegular for value: notoHebrew-Regular
        /// </summary>
        [EnumMember(Value = "notoHebrew-Regular")]
        NotoHebrewRegular = 15,

        /// <summary>
        /// Enum NotoSanThaiMerged for value: notoSanThaiMerged
        /// </summary>
        [EnumMember(Value = "notoSanThaiMerged")]
        NotoSanThaiMerged = 16

    }

}
