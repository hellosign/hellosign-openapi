/*
 * Dropbox Sign API
 *
 * Dropbox Sign v3 API
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: apisupport@hellosign.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Dropbox.Sign.Client.OpenAPIDateConverter;

namespace Dropbox.Sign.Model
{
    /// <summary>
    /// TemplateResponseAccount
    /// </summary>
    [DataContract(Name = "TemplateResponseAccount")]
    [JsonObject(ItemNullValueHandling = NullValueHandling.Ignore)]
    public partial class TemplateResponseAccount : IEquatable<TemplateResponseAccount>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TemplateResponseAccount" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected TemplateResponseAccount() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="TemplateResponseAccount" /> class.
        /// </summary>
        /// <param name="accountId">_t__TemplateResponseAccount::ACCOUNT_ID.</param>
        /// <param name="emailAddress">_t__TemplateResponseAccount::EMAIL_ADDRESS.</param>
        /// <param name="isLocked">_t__TemplateResponseAccount::IS_LOCKED.</param>
        /// <param name="isPaidHs">_t__TemplateResponseAccount::IS_PAID_HS.</param>
        /// <param name="isPaidHf">_t__TemplateResponseAccount::IS_PAID_HF.</param>
        /// <param name="quotas">quotas.</param>
        public TemplateResponseAccount(string accountId = default(string), string emailAddress = default(string), bool isLocked = default(bool), bool isPaidHs = default(bool), bool isPaidHf = default(bool), TemplateResponseAccountQuota quotas = default(TemplateResponseAccountQuota))
        {

            this.AccountId = accountId;
            this.EmailAddress = emailAddress;
            this.IsLocked = isLocked;
            this.IsPaidHs = isPaidHs;
            this.IsPaidHf = isPaidHf;
            this.Quotas = quotas;
        }

        /// <summary>
        /// Attempt to instantiate and hydrate a new instance of this class
        /// </summary>
        /// <param name="jsonData">String of JSON data representing target object</param>
        public static TemplateResponseAccount Init(string jsonData)
        {
            var obj = JsonConvert.DeserializeObject<TemplateResponseAccount>(jsonData);

            if (obj == null)
            {
                throw new Exception("Unable to deserialize JSON to instance of TemplateResponseAccount");
            }

            return obj;
        }

        /// <summary>
        /// _t__TemplateResponseAccount::ACCOUNT_ID
        /// </summary>
        /// <value>_t__TemplateResponseAccount::ACCOUNT_ID</value>
        [DataMember(Name = "account_id", EmitDefaultValue = true)]
        public string AccountId { get; set; }

        /// <summary>
        /// _t__TemplateResponseAccount::EMAIL_ADDRESS
        /// </summary>
        /// <value>_t__TemplateResponseAccount::EMAIL_ADDRESS</value>
        [DataMember(Name = "email_address", EmitDefaultValue = true)]
        public string EmailAddress { get; set; }

        /// <summary>
        /// _t__TemplateResponseAccount::IS_LOCKED
        /// </summary>
        /// <value>_t__TemplateResponseAccount::IS_LOCKED</value>
        [DataMember(Name = "is_locked", EmitDefaultValue = true)]
        public bool IsLocked { get; set; }

        /// <summary>
        /// _t__TemplateResponseAccount::IS_PAID_HS
        /// </summary>
        /// <value>_t__TemplateResponseAccount::IS_PAID_HS</value>
        [DataMember(Name = "is_paid_hs", EmitDefaultValue = true)]
        public bool IsPaidHs { get; set; }

        /// <summary>
        /// _t__TemplateResponseAccount::IS_PAID_HF
        /// </summary>
        /// <value>_t__TemplateResponseAccount::IS_PAID_HF</value>
        [DataMember(Name = "is_paid_hf", EmitDefaultValue = true)]
        public bool IsPaidHf { get; set; }

        /// <summary>
        /// Gets or Sets Quotas
        /// </summary>
        [DataMember(Name = "quotas", EmitDefaultValue = true)]
        public TemplateResponseAccountQuota Quotas { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class TemplateResponseAccount {\n");
            sb.Append("  AccountId: ").Append(AccountId).Append("\n");
            sb.Append("  EmailAddress: ").Append(EmailAddress).Append("\n");
            sb.Append("  IsLocked: ").Append(IsLocked).Append("\n");
            sb.Append("  IsPaidHs: ").Append(IsPaidHs).Append("\n");
            sb.Append("  IsPaidHf: ").Append(IsPaidHf).Append("\n");
            sb.Append("  Quotas: ").Append(Quotas).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TemplateResponseAccount);
        }

        /// <summary>
        /// Returns true if TemplateResponseAccount instances are equal
        /// </summary>
        /// <param name="input">Instance of TemplateResponseAccount to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TemplateResponseAccount input)
        {
            if (input == null)
            {
                return false;
            }
            return
                (
                    this.AccountId == input.AccountId ||
                    (this.AccountId != null &&
                    this.AccountId.Equals(input.AccountId))
                ) &&
                (
                    this.EmailAddress == input.EmailAddress ||
                    (this.EmailAddress != null &&
                    this.EmailAddress.Equals(input.EmailAddress))
                ) &&
                (
                    this.IsLocked == input.IsLocked ||
                    this.IsLocked.Equals(input.IsLocked)
                ) &&
                (
                    this.IsPaidHs == input.IsPaidHs ||
                    this.IsPaidHs.Equals(input.IsPaidHs)
                ) &&
                (
                    this.IsPaidHf == input.IsPaidHf ||
                    this.IsPaidHf.Equals(input.IsPaidHf)
                ) &&
                (
                    this.Quotas == input.Quotas ||
                    (this.Quotas != null &&
                    this.Quotas.Equals(input.Quotas))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AccountId != null)
                {
                    hashCode = (hashCode * 59) + this.AccountId.GetHashCode();
                }
                if (this.EmailAddress != null)
                {
                    hashCode = (hashCode * 59) + this.EmailAddress.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.IsLocked.GetHashCode();
                hashCode = (hashCode * 59) + this.IsPaidHs.GetHashCode();
                hashCode = (hashCode * 59) + this.IsPaidHf.GetHashCode();
                if (this.Quotas != null)
                {
                    hashCode = (hashCode * 59) + this.Quotas.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
        public List<OpenApiType> GetOpenApiTypes()
        {
            var types = new List<OpenApiType>();
            types.Add(new OpenApiType()
            {
                Name = "account_id",
                Property = "AccountId",
                Type = "string",
                Value = AccountId,
            });
            types.Add(new OpenApiType()
            {
                Name = "email_address",
                Property = "EmailAddress",
                Type = "string",
                Value = EmailAddress,
            });
            types.Add(new OpenApiType()
            {
                Name = "is_locked",
                Property = "IsLocked",
                Type = "bool",
                Value = IsLocked,
            });
            types.Add(new OpenApiType()
            {
                Name = "is_paid_hs",
                Property = "IsPaidHs",
                Type = "bool",
                Value = IsPaidHs,
            });
            types.Add(new OpenApiType()
            {
                Name = "is_paid_hf",
                Property = "IsPaidHf",
                Type = "bool",
                Value = IsPaidHf,
            });
            types.Add(new OpenApiType()
            {
                Name = "quotas",
                Property = "Quotas",
                Type = "TemplateResponseAccountQuota",
                Value = Quotas,
            });

            return types;
        }
    }

}
