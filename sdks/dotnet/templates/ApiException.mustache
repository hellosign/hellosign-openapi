{{>partial_header}}

using System;
{{! CUSTOM - BEGIN }}
using Dropbox.Sign.Model;
{{! CUSTOM - END }}

namespace {{packageName}}.Client
{
    /// <summary>
    /// API Exception
    /// </summary>
    {{>visibility}} class ApiException : Exception
    {
        /// <summary>
        /// Gets or sets the error code (HTTP status code)
        /// </summary>
        /// <value>The error code (HTTP status code).</value>
        public int ErrorCode { get; set; }

        /// <summary>
        /// Gets or sets the error content (body json object)
        /// </summary>
        /// <value>The error content (Http response body).</value>
{{#vendorExtensions.x-ignore-block}}
        public object ErrorContent { get; private set; }
{{/vendorExtensions.x-ignore-block}}
{{! CUSTOM - BEGIN }}
        public ErrorResponse ErrorContent { get; private set; }
{{! CUSTOM - END }}

        /// <summary>
        /// Gets or sets the HTTP headers
        /// </summary>
        /// <value>HTTP headers</value>
        public Multimap<string, string> Headers { get; private set; }

        /// <summary>
        /// Initializes a new instance of the <see cref="ApiException"/> class.
        /// </summary>
        public ApiException() { }

        /// <summary>
        /// Initializes a new instance of the <see cref="ApiException"/> class.
        /// </summary>
        /// <param name="errorCode">HTTP status code.</param>
        /// <param name="message">Error message.</param>
        public ApiException(int errorCode, string message) : base(message)
        {
            this.ErrorCode = errorCode;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ApiException"/> class.
        /// </summary>
        /// <param name="errorCode">HTTP status code.</param>
        /// <param name="message">Error message.</param>
        /// <param name="errorContent">Error content.</param>
        /// <param name="headers">HTTP Headers.</param>
{{#vendorExtensions.x-ignore-block}}
        public ApiException(int errorCode, string message, object errorContent = null, Multimap<string, string> headers = null) : base(message)
{{/vendorExtensions.x-ignore-block}}
{{! CUSTOM - BEGIN }}
        public ApiException(int errorCode, string message, ErrorResponse errorContent = null, Multimap<string, string> headers = null) : base(message)
{{! CUSTOM - END }}
        {
            this.ErrorCode = errorCode;
            this.ErrorContent = errorContent;
            this.Headers = headers;
        }
    }

}
